robot:
  auxiliary_data:
    post_transform_sp:
      cols: 4
      flatten_data:
      - '0'
      - '0'
      - '1.00000000000000'
      - '0'
      - '0'
      - '-1.00000000000000'
      - '0'
      - '0'
      - '1.00000000000000'
      - '0'
      - '0'
      - '0'
      - '0'
      - '0'
      - '0'
      - '1.00000000000000'
      rows: 4
    pre_transform_sp:
      cols: 4
      flatten_data:
      - '1.00000000000000'
      - '0'
      - '2.77555756156289e-17'
      - '0'
      - '0'
      - '1.00000000000000'
      - '0'
      - '0'
      - '0'
      - '0'
      - '1.00000000000000'
      - pre_transform_special_symbol_23
      - '0'
      - '0'
      - '0'
      - '1.00000000000000'
      rows: 4
    unknown_offset:
    - 0.0
    - -1.4464413322481353
    - -0.1243549945467616
    - 3.141592653589793
    - 3.141592653589793
    - 0.0
  dh_params:
  - a: '0'
    a_is_Expr: 'True'
    alpha: '0'
    alpha_is_Expr: 'True'
    d: '0'
    d_is_Expr: 'True'
    theta: th_0
    theta_is_Expr: 'True'
  - a: '0'
    a_is_Expr: 'True'
    alpha: -pi/2
    alpha_is_Expr: 'True'
    d: '0'
    d_is_Expr: 'True'
    theta: th_1
    theta_is_Expr: 'True'
  - a: a_0
    a_is_Expr: 'True'
    alpha: '0'
    alpha_is_Expr: 'True'
    d: '0'
    d_is_Expr: 'True'
    theta: th_2
    theta_is_Expr: 'True'
  - a: a_1
    a_is_Expr: 'True'
    alpha: -pi/2
    alpha_is_Expr: 'True'
    d: d_2
    d_is_Expr: 'True'
    theta: th_3
    theta_is_Expr: 'True'
  - a: '0'
    a_is_Expr: 'True'
    alpha: -pi/2
    alpha_is_Expr: 'True'
    d: d_3
    d_is_Expr: 'True'
    theta: th_4
    theta_is_Expr: 'True'
  - a: '0'
    a_is_Expr: 'True'
    alpha: -pi/2
    alpha_is_Expr: 'True'
    d: d_4
    d_is_Expr: 'True'
    theta: th_5
    theta_is_Expr: 'True'
  name: rokae_SR4
  parameters_bound: {}
  parameters_value:
    a_0: 0.4031128874149275
    a_1: 0.05
    d_2: 0.4
    d_3: -0.136
    d_4: 0.1035
    pre_transform_special_symbol_23: 0.355
  symbolic_parameters:
  - d_3
  - pre_transform_special_symbol_23
  - a_1
  - d_2
  - d_4
  - a_0
  unknown_as_parameter_more_dof: []
  unknowns:
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_0
    ub: 3.141592653589793
    unknown_type: Revolute
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_1
    ub: 3.141592653589793
    unknown_type: Revolute
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_2
    ub: 3.141592653589793
    unknown_type: Revolute
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_3
    ub: 3.141592653589793
    unknown_type: Revolute
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_4
    ub: 3.141592653589793
    unknown_type: Revolute
  - degenerate_check_value:
    - '0'
    - pi/2
    - pi
    - -pi/2
    lb: -3.141592653589793
    symbol: th_5
    ub: 3.141592653589793
    unknown_type: Revolute
tree_nodes:
- children_index_list:
  - 1
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 0
  node_type: DispatcherNode
  parent_idx: -1
- children_index_list:
  - 2
  class_type: General6DoFNumericalReduceSolutionNode
  flatten_idx_in_tree: 1
  node_type: SolutionNode
  parent_idx: 0
  solution:
    reduce_solution:
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: CannotAnalyse
          variable_value_map: {}
        solution_method: General6DoFNumericalReduce
        solved_variable: th_0
      reduce_out:
        lhs_A_cos:
          cols: 9
          flatten_data:
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -r_22
          - r_21
          - -r_23
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - r_21
          - r_22
          - '0'
          - r_22
          - -r_21
          - '0'
          - '0'
          - '0'
          - -r_23
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - d_2*r_22
          - -d_2*r_21
          - '0'
          - '0'
          - '0'
          - -d_2*r_23
          - -d_3*r_21
          - -d_3*r_22
          - -Px*r_11*r_21 - Px*r_12*r_22 - Px*r_13*r_23 - Py*r_21**2 - Py*r_22**2
            - Py*r_23**2 - Pz*r_21*r_31 - Pz*r_22*r_32 - Pz*r_23*r_33 + d_4*r_23
          - -d_3*r_22
          - d_3*r_21
          - Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31 + d_4*r_21
          - Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31
          - d_3*r_23
          - -d_2*r_21
          - -d_2*r_22
          - '0'
          - '0'
          - '0'
          - -d_2*r_22
          - d_2*r_21
          - -d_2*r_23
          - '0'
          - Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22
          - -Px*r_11*r_23 + Px*r_13*r_21 + Pz*r_21*r_33 - Pz*r_23*r_31 - d_4*r_21
          - '0'
          - -Px*r_11*r_23 + Px*r_13*r_21 + Pz*r_21*r_33 - Pz*r_23*r_31 - d_4*r_21
          - -Px*r_12*r_23 + Px*r_13*r_22 + Pz*r_22*r_33 - Pz*r_23*r_32 - d_4*r_22
          - -d_3*r_22
          - d_3*r_21
          - -d_3*r_23
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31
          - '0'
          - '0'
          - '0'
          - -2*Px*d_3*r_11*r_23 + 2*Px*d_3*r_13*r_21 + 2*Pz*d_3*r_21*r_33 - 2*Pz*d_3*r_23*r_31
            - 2*d_3*d_4*r_21
          - -2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            - 2*d_3*d_4*r_22
          - -Px**2*r_11**2*r_22 + 2*Px**2*r_11*r_12*r_21 + Px**2*r_12**2*r_22 + 2*Px**2*r_12*r_13*r_23
            - Px**2*r_13**2*r_22 + 2*Px*Py*r_12*r_21**2 + 2*Px*Py*r_12*r_22**2 + 2*Px*Py*r_12*r_23**2
            + 2*Px*Pz*r_11*r_21*r_32 - 2*Px*Pz*r_11*r_22*r_31 + 2*Px*Pz*r_12*r_21*r_31
            + 2*Px*Pz*r_12*r_22*r_32 + 2*Px*Pz*r_12*r_23*r_33 - 2*Px*Pz*r_13*r_22*r_33
            + 2*Px*Pz*r_13*r_23*r_32 - 2*Px*d_4*r_12*r_23 + 2*Px*d_4*r_13*r_22 + Py**2*r_21**2*r_22
            + Py**2*r_22**3 + Py**2*r_22*r_23**2 + 2*Py*Pz*r_21**2*r_32 + 2*Py*Pz*r_22**2*r_32
            + 2*Py*Pz*r_23**2*r_32 + 2*Pz**2*r_21*r_31*r_32 - Pz**2*r_22*r_31**2 +
            Pz**2*r_22*r_32**2 - Pz**2*r_22*r_33**2 + 2*Pz**2*r_23*r_32*r_33 + 2*Pz*d_4*r_22*r_33
            - 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 - d_3**2*r_22 - d_4**2*r_22
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            + d_3**2*r_21 + d_4**2*r_21
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22 - 2*Px*d_4*r_13*r_23
            + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3 + 2*Py*Pz*r_21**2*r_33
            + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 - 2*Py*d_4*r_21**2 - 2*Py*d_4*r_22**2
            - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33 -
            Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 - 2*Pz*d_4*r_21*r_31
            - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 - d_2**2*r_23 - d_3**2*r_23
            + d_4**2*r_23
          - -2*Px*d_3*r_11*r_22 + 2*Px*d_3*r_12*r_21 + 2*Pz*d_3*r_21*r_32 - 2*Pz*d_3*r_22*r_31
          - 2*Px*d_2*r_12*r_23 - 2*Px*d_2*r_13*r_22 - 2*Pz*d_2*r_22*r_33 + 2*Pz*d_2*r_23*r_32
            + 2*d_2*d_4*r_22
          - -2*Px*d_2*r_11*r_23 + 2*Px*d_2*r_13*r_21 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31
            - 2*d_2*d_4*r_21
          - '0'
          - 2*d_2*d_3*r_22
          - -2*d_2*d_3*r_21
          - -2*Px*d_2*r_11*r_23 + 2*Px*d_2*r_13*r_21 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31
            - 2*d_2*d_4*r_21
          - -2*Px*d_2*r_12*r_23 + 2*Px*d_2*r_13*r_22 + 2*Pz*d_2*r_22*r_33 - 2*Pz*d_2*r_23*r_32
            - 2*d_2*d_4*r_22
          - 2*Px*d_2*r_11*r_22 - 2*Px*d_2*r_12*r_21 - 2*Pz*d_2*r_21*r_32 + 2*Pz*d_2*r_22*r_31
          - -2*d_2*d_3*r_23
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            - d_3**2*r_21 + d_4**2*r_21
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22 - Py**2*r_21**2*r_22
            - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32 - 2*Py*Pz*r_22**2*r_32
            - 2*Py*Pz*r_23**2*r_32 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 -
            Pz**2*r_22*r_32**2 + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 + d_2**2*r_22 - d_3**2*r_22 + d_4**2*r_22
          - -2*Px*d_3*r_11*r_21 - 2*Px*d_3*r_12*r_22 - 2*Px*d_3*r_13*r_23 - 2*Py*d_3*r_21**2
            - 2*Py*d_3*r_22**2 - 2*Py*d_3*r_23**2 - 2*Pz*d_3*r_21*r_31 - 2*Pz*d_3*r_22*r_32
            - 2*Pz*d_3*r_23*r_33 + 2*d_3*d_4*r_23
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22 - Py**2*r_21**2*r_22
            - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32 - 2*Py*Pz*r_22**2*r_32
            - 2*Py*Pz*r_23**2*r_32 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 -
            Pz**2*r_22*r_32**2 + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 + d_3**2*r_22 + d_4**2*r_22
          - Px**2*r_11**2*r_21 + 2*Px**2*r_11*r_12*r_22 + 2*Px**2*r_11*r_13*r_23 -
            Px**2*r_12**2*r_21 - Px**2*r_13**2*r_21 + 2*Px*Py*r_11*r_21**2 + 2*Px*Py*r_11*r_22**2
            + 2*Px*Py*r_11*r_23**2 + 2*Px*Pz*r_11*r_21*r_31 + 2*Px*Pz*r_11*r_22*r_32
            + 2*Px*Pz*r_11*r_23*r_33 - 2*Px*Pz*r_12*r_21*r_32 + 2*Px*Pz*r_12*r_22*r_31
            - 2*Px*Pz*r_13*r_21*r_33 + 2*Px*Pz*r_13*r_23*r_31 - 2*Px*d_4*r_11*r_23
            + 2*Px*d_4*r_13*r_21 + Py**2*r_21**3 + Py**2*r_21*r_22**2 + Py**2*r_21*r_23**2
            + 2*Py*Pz*r_21**2*r_31 + 2*Py*Pz*r_22**2*r_31 + 2*Py*Pz*r_23**2*r_31 +
            Pz**2*r_21*r_31**2 - Pz**2*r_21*r_32**2 - Pz**2*r_21*r_33**2 + 2*Pz**2*r_22*r_31*r_32
            + 2*Pz**2*r_23*r_31*r_33 + 2*Pz*d_4*r_21*r_33 - 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            - d_3**2*r_21 - d_4**2*r_21
          - -2*Px*d_3*r_11*r_23 + 2*Px*d_3*r_13*r_21 + 2*Pz*d_3*r_21*r_33 - 2*Pz*d_3*r_23*r_31
            - 2*d_3*d_4*r_21
          - -2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            - 2*d_3*d_4*r_22
          - 2*Px*d_3*r_11*r_22 - 2*Px*d_3*r_12*r_21 - 2*Pz*d_3*r_21*r_32 + 2*Pz*d_3*r_22*r_31
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22 - 2*Px*d_4*r_13*r_23
            + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3 + 2*Py*Pz*r_21**2*r_33
            + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 - 2*Py*d_4*r_21**2 - 2*Py*d_4*r_22**2
            - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33 -
            Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 - 2*Pz*d_4*r_21*r_31
            - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 + d_2**2*r_23 - d_3**2*r_23
            + d_4**2*r_23
          - 2*d_2*d_3*r_21
          - 2*d_2*d_3*r_22
          - 2*Px*d_2*r_11*r_21 + 2*Px*d_2*r_12*r_22 + 2*Px*d_2*r_13*r_23 + 2*Py*d_2*r_21**2
            + 2*Py*d_2*r_22**2 + 2*Py*d_2*r_23**2 + 2*Pz*d_2*r_21*r_31 + 2*Pz*d_2*r_22*r_32
            + 2*Pz*d_2*r_23*r_33 - 2*d_2*d_4*r_23
          rows: 14
        lhs_A_sin:
          cols: 9
          flatten_data:
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - r_12
          - -r_11
          - r_13
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -r_11
          - -r_12
          - '0'
          - -r_12
          - r_11
          - '0'
          - '0'
          - '0'
          - r_13
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -d_2*r_12
          - d_2*r_11
          - '0'
          - '0'
          - '0'
          - d_2*r_13
          - d_3*r_11
          - d_3*r_12
          - Px*r_11**2 + Px*r_12**2 + Px*r_13**2 + Py*r_11*r_21 + Py*r_12*r_22 + Py*r_13*r_23
            + Pz*r_11*r_31 + Pz*r_12*r_32 + Pz*r_13*r_33 - d_4*r_13
          - d_3*r_12
          - -d_3*r_11
          - Py*r_11*r_23 - Py*r_13*r_21 + Pz*r_11*r_33 - Pz*r_13*r_31 - d_4*r_11
          - Py*r_12*r_23 - Py*r_13*r_22 + Pz*r_12*r_33 - Pz*r_13*r_32 - d_4*r_12
          - -Py*r_11*r_22 + Py*r_12*r_21 - Pz*r_11*r_32 + Pz*r_12*r_31
          - -d_3*r_13
          - d_2*r_11
          - d_2*r_12
          - '0'
          - '0'
          - '0'
          - d_2*r_12
          - -d_2*r_11
          - d_2*r_13
          - '0'
          - Py*r_12*r_23 - Py*r_13*r_22 + Pz*r_12*r_33 - Pz*r_13*r_32 - d_4*r_12
          - -Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11
          - '0'
          - -Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11
          - -Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12
          - d_3*r_12
          - -d_3*r_11
          - d_3*r_13
          - -Py*r_11*r_22 + Py*r_12*r_21 - Pz*r_11*r_32 + Pz*r_12*r_31
          - '0'
          - '0'
          - '0'
          - -2*Py*d_3*r_11*r_23 + 2*Py*d_3*r_13*r_21 - 2*Pz*d_3*r_11*r_33 + 2*Pz*d_3*r_13*r_31
            + 2*d_3*d_4*r_11
          - -2*Py*d_3*r_12*r_23 + 2*Py*d_3*r_13*r_22 - 2*Pz*d_3*r_12*r_33 + 2*Pz*d_3*r_13*r_32
            + 2*d_3*d_4*r_12
          - -Px**2*r_11**2*r_12 - Px**2*r_12**3 - Px**2*r_12*r_13**2 - 2*Px*Py*r_11**2*r_22
            - 2*Px*Py*r_12**2*r_22 - 2*Px*Py*r_13**2*r_22 - 2*Px*Pz*r_11**2*r_32 -
            2*Px*Pz*r_12**2*r_32 - 2*Px*Pz*r_13**2*r_32 - 2*Py**2*r_11*r_21*r_22 +
            Py**2*r_12*r_21**2 - Py**2*r_12*r_22**2 + Py**2*r_12*r_23**2 - 2*Py**2*r_13*r_22*r_23
            - 2*Py*Pz*r_11*r_21*r_32 - 2*Py*Pz*r_11*r_22*r_31 + 2*Py*Pz*r_12*r_21*r_31
            - 2*Py*Pz*r_12*r_22*r_32 + 2*Py*Pz*r_12*r_23*r_33 - 2*Py*Pz*r_13*r_22*r_33
            - 2*Py*Pz*r_13*r_23*r_32 - 2*Py*d_4*r_12*r_23 + 2*Py*d_4*r_13*r_22 - 2*Pz**2*r_11*r_31*r_32
            + Pz**2*r_12*r_31**2 - Pz**2*r_12*r_32**2 + Pz**2*r_12*r_33**2 - 2*Pz**2*r_13*r_32*r_33
            - 2*Pz*d_4*r_12*r_33 + 2*Pz*d_4*r_13*r_32 + d_2**2*r_12 + d_3**2*r_12
            + d_4**2*r_12
          - Px**2*r_11**3 + Px**2*r_11*r_12**2 + Px**2*r_11*r_13**2 + 2*Px*Py*r_11**2*r_21
            + 2*Px*Py*r_12**2*r_21 + 2*Px*Py*r_13**2*r_21 + 2*Px*Pz*r_11**2*r_31 +
            2*Px*Pz*r_12**2*r_31 + 2*Px*Pz*r_13**2*r_31 + Py**2*r_11*r_21**2 - Py**2*r_11*r_22**2
            - Py**2*r_11*r_23**2 + 2*Py**2*r_12*r_21*r_22 + 2*Py**2*r_13*r_21*r_23
            + 2*Py*Pz*r_11*r_21*r_31 - 2*Py*Pz*r_11*r_22*r_32 - 2*Py*Pz*r_11*r_23*r_33
            + 2*Py*Pz*r_12*r_21*r_32 + 2*Py*Pz*r_12*r_22*r_31 + 2*Py*Pz*r_13*r_21*r_33
            + 2*Py*Pz*r_13*r_23*r_31 + 2*Py*d_4*r_11*r_23 - 2*Py*d_4*r_13*r_21 + Pz**2*r_11*r_31**2
            - Pz**2*r_11*r_32**2 - Pz**2*r_11*r_33**2 + 2*Pz**2*r_12*r_31*r_32 + 2*Pz**2*r_13*r_31*r_33
            + 2*Pz*d_4*r_11*r_33 - 2*Pz*d_4*r_13*r_31 - d_2**2*r_11 - d_3**2*r_11
            - d_4**2*r_11
          - -Px**2*r_11**2*r_13 - Px**2*r_12**2*r_13 - Px**2*r_13**3 - 2*Px*Py*r_11**2*r_23
            - 2*Px*Py*r_12**2*r_23 - 2*Px*Py*r_13**2*r_23 - 2*Px*Pz*r_11**2*r_33 -
            2*Px*Pz*r_12**2*r_33 - 2*Px*Pz*r_13**2*r_33 + 2*Px*d_4*r_11**2 + 2*Px*d_4*r_12**2
            + 2*Px*d_4*r_13**2 - 2*Py**2*r_11*r_21*r_23 - 2*Py**2*r_12*r_22*r_23 +
            Py**2*r_13*r_21**2 + Py**2*r_13*r_22**2 - Py**2*r_13*r_23**2 - 2*Py*Pz*r_11*r_21*r_33
            - 2*Py*Pz*r_11*r_23*r_31 - 2*Py*Pz*r_12*r_22*r_33 - 2*Py*Pz*r_12*r_23*r_32
            + 2*Py*Pz*r_13*r_21*r_31 + 2*Py*Pz*r_13*r_22*r_32 - 2*Py*Pz*r_13*r_23*r_33
            + 2*Py*d_4*r_11*r_21 + 2*Py*d_4*r_12*r_22 + 2*Py*d_4*r_13*r_23 - 2*Pz**2*r_11*r_31*r_33
            - 2*Pz**2*r_12*r_32*r_33 + Pz**2*r_13*r_31**2 + Pz**2*r_13*r_32**2 - Pz**2*r_13*r_33**2
            + 2*Pz*d_4*r_11*r_31 + 2*Pz*d_4*r_12*r_32 + 2*Pz*d_4*r_13*r_33 + d_2**2*r_13
            + d_3**2*r_13 - d_4**2*r_13
          - -2*Py*d_3*r_11*r_22 + 2*Py*d_3*r_12*r_21 - 2*Pz*d_3*r_11*r_32 + 2*Pz*d_3*r_12*r_31
          - 2*Py*d_2*r_12*r_23 - 2*Py*d_2*r_13*r_22 + 2*Pz*d_2*r_12*r_33 - 2*Pz*d_2*r_13*r_32
            - 2*d_2*d_4*r_12
          - -2*Py*d_2*r_11*r_23 + 2*Py*d_2*r_13*r_21 - 2*Pz*d_2*r_11*r_33 + 2*Pz*d_2*r_13*r_31
            + 2*d_2*d_4*r_11
          - '0'
          - -2*d_2*d_3*r_12
          - 2*d_2*d_3*r_11
          - -2*Py*d_2*r_11*r_23 + 2*Py*d_2*r_13*r_21 - 2*Pz*d_2*r_11*r_33 + 2*Pz*d_2*r_13*r_31
            + 2*d_2*d_4*r_11
          - -2*Py*d_2*r_12*r_23 + 2*Py*d_2*r_13*r_22 - 2*Pz*d_2*r_12*r_33 + 2*Pz*d_2*r_13*r_32
            + 2*d_2*d_4*r_12
          - 2*Py*d_2*r_11*r_22 - 2*Py*d_2*r_12*r_21 + 2*Pz*d_2*r_11*r_32 - 2*Pz*d_2*r_12*r_31
          - 2*d_2*d_3*r_13
          - Px**2*r_11**3 + Px**2*r_11*r_12**2 + Px**2*r_11*r_13**2 + 2*Px*Py*r_11**2*r_21
            + 2*Px*Py*r_12**2*r_21 + 2*Px*Py*r_13**2*r_21 + 2*Px*Pz*r_11**2*r_31 +
            2*Px*Pz*r_12**2*r_31 + 2*Px*Pz*r_13**2*r_31 + Py**2*r_11*r_21**2 - Py**2*r_11*r_22**2
            - Py**2*r_11*r_23**2 + 2*Py**2*r_12*r_21*r_22 + 2*Py**2*r_13*r_21*r_23
            + 2*Py*Pz*r_11*r_21*r_31 - 2*Py*Pz*r_11*r_22*r_32 - 2*Py*Pz*r_11*r_23*r_33
            + 2*Py*Pz*r_12*r_21*r_32 + 2*Py*Pz*r_12*r_22*r_31 + 2*Py*Pz*r_13*r_21*r_33
            + 2*Py*Pz*r_13*r_23*r_31 + 2*Py*d_4*r_11*r_23 - 2*Py*d_4*r_13*r_21 + Pz**2*r_11*r_31**2
            - Pz**2*r_11*r_32**2 - Pz**2*r_11*r_33**2 + 2*Pz**2*r_12*r_31*r_32 + 2*Pz**2*r_13*r_31*r_33
            + 2*Pz*d_4*r_11*r_33 - 2*Pz*d_4*r_13*r_31 - d_2**2*r_11 + d_3**2*r_11
            - d_4**2*r_11
          - Px**2*r_11**2*r_12 + Px**2*r_12**3 + Px**2*r_12*r_13**2 + 2*Px*Py*r_11**2*r_22
            + 2*Px*Py*r_12**2*r_22 + 2*Px*Py*r_13**2*r_22 + 2*Px*Pz*r_11**2*r_32 +
            2*Px*Pz*r_12**2*r_32 + 2*Px*Pz*r_13**2*r_32 + 2*Py**2*r_11*r_21*r_22 -
            Py**2*r_12*r_21**2 + Py**2*r_12*r_22**2 - Py**2*r_12*r_23**2 + 2*Py**2*r_13*r_22*r_23
            + 2*Py*Pz*r_11*r_21*r_32 + 2*Py*Pz*r_11*r_22*r_31 - 2*Py*Pz*r_12*r_21*r_31
            + 2*Py*Pz*r_12*r_22*r_32 - 2*Py*Pz*r_12*r_23*r_33 + 2*Py*Pz*r_13*r_22*r_33
            + 2*Py*Pz*r_13*r_23*r_32 + 2*Py*d_4*r_12*r_23 - 2*Py*d_4*r_13*r_22 + 2*Pz**2*r_11*r_31*r_32
            - Pz**2*r_12*r_31**2 + Pz**2*r_12*r_32**2 - Pz**2*r_12*r_33**2 + 2*Pz**2*r_13*r_32*r_33
            + 2*Pz*d_4*r_12*r_33 - 2*Pz*d_4*r_13*r_32 - d_2**2*r_12 + d_3**2*r_12
            - d_4**2*r_12
          - 2*Px*d_3*r_11**2 + 2*Px*d_3*r_12**2 + 2*Px*d_3*r_13**2 + 2*Py*d_3*r_11*r_21
            + 2*Py*d_3*r_12*r_22 + 2*Py*d_3*r_13*r_23 + 2*Pz*d_3*r_11*r_31 + 2*Pz*d_3*r_12*r_32
            + 2*Pz*d_3*r_13*r_33 - 2*d_3*d_4*r_13
          - Px**2*r_11**2*r_12 + Px**2*r_12**3 + Px**2*r_12*r_13**2 + 2*Px*Py*r_11**2*r_22
            + 2*Px*Py*r_12**2*r_22 + 2*Px*Py*r_13**2*r_22 + 2*Px*Pz*r_11**2*r_32 +
            2*Px*Pz*r_12**2*r_32 + 2*Px*Pz*r_13**2*r_32 + 2*Py**2*r_11*r_21*r_22 -
            Py**2*r_12*r_21**2 + Py**2*r_12*r_22**2 - Py**2*r_12*r_23**2 + 2*Py**2*r_13*r_22*r_23
            + 2*Py*Pz*r_11*r_21*r_32 + 2*Py*Pz*r_11*r_22*r_31 - 2*Py*Pz*r_12*r_21*r_31
            + 2*Py*Pz*r_12*r_22*r_32 - 2*Py*Pz*r_12*r_23*r_33 + 2*Py*Pz*r_13*r_22*r_33
            + 2*Py*Pz*r_13*r_23*r_32 + 2*Py*d_4*r_12*r_23 - 2*Py*d_4*r_13*r_22 + 2*Pz**2*r_11*r_31*r_32
            - Pz**2*r_12*r_31**2 + Pz**2*r_12*r_32**2 - Pz**2*r_12*r_33**2 + 2*Pz**2*r_13*r_32*r_33
            + 2*Pz*d_4*r_12*r_33 - 2*Pz*d_4*r_13*r_32 + d_2**2*r_12 - d_3**2*r_12
            - d_4**2*r_12
          - -Px**2*r_11**3 - Px**2*r_11*r_12**2 - Px**2*r_11*r_13**2 - 2*Px*Py*r_11**2*r_21
            - 2*Px*Py*r_12**2*r_21 - 2*Px*Py*r_13**2*r_21 - 2*Px*Pz*r_11**2*r_31 -
            2*Px*Pz*r_12**2*r_31 - 2*Px*Pz*r_13**2*r_31 - Py**2*r_11*r_21**2 + Py**2*r_11*r_22**2
            + Py**2*r_11*r_23**2 - 2*Py**2*r_12*r_21*r_22 - 2*Py**2*r_13*r_21*r_23
            - 2*Py*Pz*r_11*r_21*r_31 + 2*Py*Pz*r_11*r_22*r_32 + 2*Py*Pz*r_11*r_23*r_33
            - 2*Py*Pz*r_12*r_21*r_32 - 2*Py*Pz*r_12*r_22*r_31 - 2*Py*Pz*r_13*r_21*r_33
            - 2*Py*Pz*r_13*r_23*r_31 - 2*Py*d_4*r_11*r_23 + 2*Py*d_4*r_13*r_21 - Pz**2*r_11*r_31**2
            + Pz**2*r_11*r_32**2 + Pz**2*r_11*r_33**2 - 2*Pz**2*r_12*r_31*r_32 - 2*Pz**2*r_13*r_31*r_33
            - 2*Pz*d_4*r_11*r_33 + 2*Pz*d_4*r_13*r_31 - d_2**2*r_11 + d_3**2*r_11
            + d_4**2*r_11
          - -2*Py*d_3*r_11*r_23 + 2*Py*d_3*r_13*r_21 - 2*Pz*d_3*r_11*r_33 + 2*Pz*d_3*r_13*r_31
            + 2*d_3*d_4*r_11
          - -2*Py*d_3*r_12*r_23 + 2*Py*d_3*r_13*r_22 - 2*Pz*d_3*r_12*r_33 + 2*Pz*d_3*r_13*r_32
            + 2*d_3*d_4*r_12
          - 2*Py*d_3*r_11*r_22 - 2*Py*d_3*r_12*r_21 + 2*Pz*d_3*r_11*r_32 - 2*Pz*d_3*r_12*r_31
          - -Px**2*r_11**2*r_13 - Px**2*r_12**2*r_13 - Px**2*r_13**3 - 2*Px*Py*r_11**2*r_23
            - 2*Px*Py*r_12**2*r_23 - 2*Px*Py*r_13**2*r_23 - 2*Px*Pz*r_11**2*r_33 -
            2*Px*Pz*r_12**2*r_33 - 2*Px*Pz*r_13**2*r_33 + 2*Px*d_4*r_11**2 + 2*Px*d_4*r_12**2
            + 2*Px*d_4*r_13**2 - 2*Py**2*r_11*r_21*r_23 - 2*Py**2*r_12*r_22*r_23 +
            Py**2*r_13*r_21**2 + Py**2*r_13*r_22**2 - Py**2*r_13*r_23**2 - 2*Py*Pz*r_11*r_21*r_33
            - 2*Py*Pz*r_11*r_23*r_31 - 2*Py*Pz*r_12*r_22*r_33 - 2*Py*Pz*r_12*r_23*r_32
            + 2*Py*Pz*r_13*r_21*r_31 + 2*Py*Pz*r_13*r_22*r_32 - 2*Py*Pz*r_13*r_23*r_33
            + 2*Py*d_4*r_11*r_21 + 2*Py*d_4*r_12*r_22 + 2*Py*d_4*r_13*r_23 - 2*Pz**2*r_11*r_31*r_33
            - 2*Pz**2*r_12*r_32*r_33 + Pz**2*r_13*r_31**2 + Pz**2*r_13*r_32**2 - Pz**2*r_13*r_33**2
            + 2*Pz*d_4*r_11*r_31 + 2*Pz*d_4*r_12*r_32 + 2*Pz*d_4*r_13*r_33 - d_2**2*r_13
            + d_3**2*r_13 - d_4**2*r_13
          - -2*d_2*d_3*r_11
          - -2*d_2*d_3*r_12
          - -2*Px*d_2*r_11**2 - 2*Px*d_2*r_12**2 - 2*Px*d_2*r_13**2 - 2*Py*d_2*r_11*r_21
            - 2*Py*d_2*r_12*r_22 - 2*Py*d_2*r_13*r_23 - 2*Pz*d_2*r_11*r_31 - 2*Pz*d_2*r_12*r_32
            - 2*Pz*d_2*r_13*r_33 + 2*d_2*d_4*r_13
          rows: 14
        lhs_C_const:
          cols: 9
          flatten_data:
          - '0'
          - '0'
          - Px*r_12 + Py*r_22 + Pz*r_32
          - -Px*r_11 - Py*r_21 - Pz*r_31
          - Px*r_13 + Py*r_23 + Pz*r_33 - d_4
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -Px*r_11 - Py*r_21 - Pz*r_31
          - -Px*r_12 - Py*r_22 - Pz*r_32
          - -d_3
          - -Px*r_12 - Py*r_22 - Pz*r_32
          - Px*r_11 + Py*r_21 + Pz*r_31
          - '0'
          - '0'
          - '0'
          - Px*r_13 + Py*r_23 + Pz*r_33 - d_4
          - '0'
          - '0'
          - d_2
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -2*Px*d_2*r_12 - 2*Py*d_2*r_22 - 2*Pz*d_2*r_32
          - 2*Px*d_2*r_11 + 2*Py*d_2*r_21 + 2*Pz*d_2*r_31
          - '0'
          - '0'
          - '0'
          - 2*Px*d_2*r_13 + 2*Py*d_2*r_23 + 2*Pz*d_2*r_33 - 2*d_2*d_4
          - 2*Px*d_3*r_11 + 2*Py*d_3*r_21 + 2*Pz*d_3*r_31
          - 2*Px*d_3*r_12 + 2*Py*d_3*r_22 + 2*Pz*d_3*r_32
          - Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22
            + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33
            - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31
            + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2
            + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2
            + d_3**2 + d_4**2
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - a_1
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          rows: 14
        matrix_equation:
          lhs_gen_vars:
          - var: th_4
          - var: th_5
          lhs_matrix:
            cols: 9
            flatten_data:
            - '0'
            - '0'
            - Px*r_12 + Py*r_22 + Pz*r_32
            - -Px*r_11 - Py*r_21 - Pz*r_31
            - Px*r_13 + Py*r_23 + Pz*r_33 - d_4
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - -Px*r_11 - Py*r_21 - Pz*r_31
            - -Px*r_12 - Py*r_22 - Pz*r_32
            - -d_3
            - -Px*r_12 - Py*r_22 - Pz*r_32
            - Px*r_11 + Py*r_21 + Pz*r_31
            - '0'
            - '0'
            - '0'
            - Px*r_13 + Py*r_23 + Pz*r_33 - d_4
            - '0'
            - '0'
            - d_2
            - '0'
            - '0'
            - -cos_th_0*r_22 + r_12*sin_th_0
            - cos_th_0*r_21 - r_11*sin_th_0
            - -cos_th_0*r_23 + r_13*sin_th_0
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - cos_th_0*r_21 - r_11*sin_th_0
            - cos_th_0*r_22 - r_12*sin_th_0
            - '0'
            - cos_th_0*r_22 - r_12*sin_th_0
            - -cos_th_0*r_21 + r_11*sin_th_0
            - '0'
            - '0'
            - '0'
            - -cos_th_0*r_23 + r_13*sin_th_0
            - '0'
            - '0'
            - '0'
            - -2*Px*d_2*r_12 - 2*Py*d_2*r_22 - 2*Pz*d_2*r_32
            - 2*Px*d_2*r_11 + 2*Py*d_2*r_21 + 2*Pz*d_2*r_31
            - '0'
            - '0'
            - '0'
            - 2*Px*d_2*r_13 + 2*Py*d_2*r_23 + 2*Pz*d_2*r_33 - 2*d_2*d_4
            - 2*Px*d_3*r_11 + 2*Py*d_3*r_21 + 2*Pz*d_3*r_31
            - 2*Px*d_3*r_12 + 2*Py*d_3*r_22 + 2*Pz*d_3*r_32
            - Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21 +
              2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
              + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2
              + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
              - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
              - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2
            - cos_th_0*d_2*r_22 - d_2*r_12*sin_th_0
            - -cos_th_0*d_2*r_21 + d_2*r_11*sin_th_0
            - '0'
            - '0'
            - '0'
            - -cos_th_0*d_2*r_23 + d_2*r_13*sin_th_0
            - -cos_th_0*d_3*r_21 + d_3*r_11*sin_th_0
            - -cos_th_0*d_3*r_22 + d_3*r_12*sin_th_0
            - -Px*cos_th_0*r_11*r_21 - Px*cos_th_0*r_12*r_22 - Px*cos_th_0*r_13*r_23
              + Px*r_11**2*sin_th_0 + Px*r_12**2*sin_th_0 + Px*r_13**2*sin_th_0 -
              Py*cos_th_0*r_21**2 - Py*cos_th_0*r_22**2 - Py*cos_th_0*r_23**2 + Py*r_11*r_21*sin_th_0
              + Py*r_12*r_22*sin_th_0 + Py*r_13*r_23*sin_th_0 - Pz*cos_th_0*r_21*r_31
              - Pz*cos_th_0*r_22*r_32 - Pz*cos_th_0*r_23*r_33 + Pz*r_11*r_31*sin_th_0
              + Pz*r_12*r_32*sin_th_0 + Pz*r_13*r_33*sin_th_0 + cos_th_0*d_4*r_23
              - d_4*r_13*sin_th_0
            - -cos_th_0*d_3*r_22 + d_3*r_12*sin_th_0
            - cos_th_0*d_3*r_21 - d_3*r_11*sin_th_0
            - Px*cos_th_0*r_11*r_23 - Px*cos_th_0*r_13*r_21 + Py*r_11*r_23*sin_th_0
              - Py*r_13*r_21*sin_th_0 - Pz*cos_th_0*r_21*r_33 + Pz*cos_th_0*r_23*r_31
              + Pz*r_11*r_33*sin_th_0 - Pz*r_13*r_31*sin_th_0 + cos_th_0*d_4*r_21
              - d_4*r_11*sin_th_0
            - Px*cos_th_0*r_12*r_23 - Px*cos_th_0*r_13*r_22 + Py*r_12*r_23*sin_th_0
              - Py*r_13*r_22*sin_th_0 - Pz*cos_th_0*r_22*r_33 + Pz*cos_th_0*r_23*r_32
              + Pz*r_12*r_33*sin_th_0 - Pz*r_13*r_32*sin_th_0 + cos_th_0*d_4*r_22
              - d_4*r_12*sin_th_0
            - -Px*cos_th_0*r_11*r_22 + Px*cos_th_0*r_12*r_21 - Py*r_11*r_22*sin_th_0
              + Py*r_12*r_21*sin_th_0 + Pz*cos_th_0*r_21*r_32 - Pz*cos_th_0*r_22*r_31
              - Pz*r_11*r_32*sin_th_0 + Pz*r_12*r_31*sin_th_0
            - cos_th_0*d_3*r_23 - d_3*r_13*sin_th_0
            - -cos_th_0*d_2*r_21 + d_2*r_11*sin_th_0
            - -cos_th_0*d_2*r_22 + d_2*r_12*sin_th_0
            - '0'
            - '0'
            - '0'
            - -cos_th_0*d_2*r_22 + d_2*r_12*sin_th_0
            - cos_th_0*d_2*r_21 - d_2*r_11*sin_th_0
            - -cos_th_0*d_2*r_23 + d_2*r_13*sin_th_0
            - '0'
            - Px*cos_th_0*r_12*r_23 - Px*cos_th_0*r_13*r_22 + Py*r_12*r_23*sin_th_0
              - Py*r_13*r_22*sin_th_0 - Pz*cos_th_0*r_22*r_33 + Pz*cos_th_0*r_23*r_32
              + Pz*r_12*r_33*sin_th_0 - Pz*r_13*r_32*sin_th_0 + cos_th_0*d_4*r_22
              - d_4*r_12*sin_th_0
            - -Px*cos_th_0*r_11*r_23 + Px*cos_th_0*r_13*r_21 - Py*r_11*r_23*sin_th_0
              + Py*r_13*r_21*sin_th_0 + Pz*cos_th_0*r_21*r_33 - Pz*cos_th_0*r_23*r_31
              - Pz*r_11*r_33*sin_th_0 + Pz*r_13*r_31*sin_th_0 - cos_th_0*d_4*r_21
              + d_4*r_11*sin_th_0
            - '0'
            - -Px*cos_th_0*r_11*r_23 + Px*cos_th_0*r_13*r_21 - Py*r_11*r_23*sin_th_0
              + Py*r_13*r_21*sin_th_0 + Pz*cos_th_0*r_21*r_33 - Pz*cos_th_0*r_23*r_31
              - Pz*r_11*r_33*sin_th_0 + Pz*r_13*r_31*sin_th_0 - cos_th_0*d_4*r_21
              + d_4*r_11*sin_th_0
            - -Px*cos_th_0*r_12*r_23 + Px*cos_th_0*r_13*r_22 - Py*r_12*r_23*sin_th_0
              + Py*r_13*r_22*sin_th_0 + Pz*cos_th_0*r_22*r_33 - Pz*cos_th_0*r_23*r_32
              - Pz*r_12*r_33*sin_th_0 + Pz*r_13*r_32*sin_th_0 - cos_th_0*d_4*r_22
              + d_4*r_12*sin_th_0
            - -cos_th_0*d_3*r_22 + d_3*r_12*sin_th_0
            - cos_th_0*d_3*r_21 - d_3*r_11*sin_th_0
            - -cos_th_0*d_3*r_23 + d_3*r_13*sin_th_0
            - -Px*cos_th_0*r_11*r_22 + Px*cos_th_0*r_12*r_21 - Py*r_11*r_22*sin_th_0
              + Py*r_12*r_21*sin_th_0 + Pz*cos_th_0*r_21*r_32 - Pz*cos_th_0*r_22*r_31
              - Pz*r_11*r_32*sin_th_0 + Pz*r_12*r_31*sin_th_0
            - '0'
            - '0'
            - a_1
            - -2*Px*cos_th_0*d_3*r_11*r_23 + 2*Px*cos_th_0*d_3*r_13*r_21 - 2*Py*d_3*r_11*r_23*sin_th_0
              + 2*Py*d_3*r_13*r_21*sin_th_0 + 2*Pz*cos_th_0*d_3*r_21*r_33 - 2*Pz*cos_th_0*d_3*r_23*r_31
              - 2*Pz*d_3*r_11*r_33*sin_th_0 + 2*Pz*d_3*r_13*r_31*sin_th_0 - 2*cos_th_0*d_3*d_4*r_21
              + 2*d_3*d_4*r_11*sin_th_0
            - -2*Px*cos_th_0*d_3*r_12*r_23 + 2*Px*cos_th_0*d_3*r_13*r_22 - 2*Py*d_3*r_12*r_23*sin_th_0
              + 2*Py*d_3*r_13*r_22*sin_th_0 + 2*Pz*cos_th_0*d_3*r_22*r_33 - 2*Pz*cos_th_0*d_3*r_23*r_32
              - 2*Pz*d_3*r_12*r_33*sin_th_0 + 2*Pz*d_3*r_13*r_32*sin_th_0 - 2*cos_th_0*d_3*d_4*r_22
              + 2*d_3*d_4*r_12*sin_th_0
            - -Px**2*cos_th_0*r_11**2*r_22 + 2*Px**2*cos_th_0*r_11*r_12*r_21 + Px**2*cos_th_0*r_12**2*r_22
              + 2*Px**2*cos_th_0*r_12*r_13*r_23 - Px**2*cos_th_0*r_13**2*r_22 - Px**2*r_11**2*r_12*sin_th_0
              - Px**2*r_12**3*sin_th_0 - Px**2*r_12*r_13**2*sin_th_0 + 2*Px*Py*cos_th_0*r_12*r_21**2
              + 2*Px*Py*cos_th_0*r_12*r_22**2 + 2*Px*Py*cos_th_0*r_12*r_23**2 - 2*Px*Py*r_11**2*r_22*sin_th_0
              - 2*Px*Py*r_12**2*r_22*sin_th_0 - 2*Px*Py*r_13**2*r_22*sin_th_0 + 2*Px*Pz*cos_th_0*r_11*r_21*r_32
              - 2*Px*Pz*cos_th_0*r_11*r_22*r_31 + 2*Px*Pz*cos_th_0*r_12*r_21*r_31
              + 2*Px*Pz*cos_th_0*r_12*r_22*r_32 + 2*Px*Pz*cos_th_0*r_12*r_23*r_33
              - 2*Px*Pz*cos_th_0*r_13*r_22*r_33 + 2*Px*Pz*cos_th_0*r_13*r_23*r_32
              - 2*Px*Pz*r_11**2*r_32*sin_th_0 - 2*Px*Pz*r_12**2*r_32*sin_th_0 - 2*Px*Pz*r_13**2*r_32*sin_th_0
              - 2*Px*cos_th_0*d_4*r_12*r_23 + 2*Px*cos_th_0*d_4*r_13*r_22 + Py**2*cos_th_0*r_21**2*r_22
              + Py**2*cos_th_0*r_22**3 + Py**2*cos_th_0*r_22*r_23**2 - 2*Py**2*r_11*r_21*r_22*sin_th_0
              + Py**2*r_12*r_21**2*sin_th_0 - Py**2*r_12*r_22**2*sin_th_0 + Py**2*r_12*r_23**2*sin_th_0
              - 2*Py**2*r_13*r_22*r_23*sin_th_0 + 2*Py*Pz*cos_th_0*r_21**2*r_32 +
              2*Py*Pz*cos_th_0*r_22**2*r_32 + 2*Py*Pz*cos_th_0*r_23**2*r_32 - 2*Py*Pz*r_11*r_21*r_32*sin_th_0
              - 2*Py*Pz*r_11*r_22*r_31*sin_th_0 + 2*Py*Pz*r_12*r_21*r_31*sin_th_0
              - 2*Py*Pz*r_12*r_22*r_32*sin_th_0 + 2*Py*Pz*r_12*r_23*r_33*sin_th_0
              - 2*Py*Pz*r_13*r_22*r_33*sin_th_0 - 2*Py*Pz*r_13*r_23*r_32*sin_th_0
              - 2*Py*d_4*r_12*r_23*sin_th_0 + 2*Py*d_4*r_13*r_22*sin_th_0 + 2*Pz**2*cos_th_0*r_21*r_31*r_32
              - Pz**2*cos_th_0*r_22*r_31**2 + Pz**2*cos_th_0*r_22*r_32**2 - Pz**2*cos_th_0*r_22*r_33**2
              + 2*Pz**2*cos_th_0*r_23*r_32*r_33 - 2*Pz**2*r_11*r_31*r_32*sin_th_0
              + Pz**2*r_12*r_31**2*sin_th_0 - Pz**2*r_12*r_32**2*sin_th_0 + Pz**2*r_12*r_33**2*sin_th_0
              - 2*Pz**2*r_13*r_32*r_33*sin_th_0 + 2*Pz*cos_th_0*d_4*r_22*r_33 - 2*Pz*cos_th_0*d_4*r_23*r_32
              - 2*Pz*d_4*r_12*r_33*sin_th_0 + 2*Pz*d_4*r_13*r_32*sin_th_0 - cos_th_0*d_2**2*r_22
              - cos_th_0*d_3**2*r_22 - cos_th_0*d_4**2*r_22 + d_2**2*r_12*sin_th_0
              + d_3**2*r_12*sin_th_0 + d_4**2*r_12*sin_th_0
            - -Px**2*cos_th_0*r_11**2*r_21 - 2*Px**2*cos_th_0*r_11*r_12*r_22 - 2*Px**2*cos_th_0*r_11*r_13*r_23
              + Px**2*cos_th_0*r_12**2*r_21 + Px**2*cos_th_0*r_13**2*r_21 + Px**2*r_11**3*sin_th_0
              + Px**2*r_11*r_12**2*sin_th_0 + Px**2*r_11*r_13**2*sin_th_0 - 2*Px*Py*cos_th_0*r_11*r_21**2
              - 2*Px*Py*cos_th_0*r_11*r_22**2 - 2*Px*Py*cos_th_0*r_11*r_23**2 + 2*Px*Py*r_11**2*r_21*sin_th_0
              + 2*Px*Py*r_12**2*r_21*sin_th_0 + 2*Px*Py*r_13**2*r_21*sin_th_0 - 2*Px*Pz*cos_th_0*r_11*r_21*r_31
              - 2*Px*Pz*cos_th_0*r_11*r_22*r_32 - 2*Px*Pz*cos_th_0*r_11*r_23*r_33
              + 2*Px*Pz*cos_th_0*r_12*r_21*r_32 - 2*Px*Pz*cos_th_0*r_12*r_22*r_31
              + 2*Px*Pz*cos_th_0*r_13*r_21*r_33 - 2*Px*Pz*cos_th_0*r_13*r_23*r_31
              + 2*Px*Pz*r_11**2*r_31*sin_th_0 + 2*Px*Pz*r_12**2*r_31*sin_th_0 + 2*Px*Pz*r_13**2*r_31*sin_th_0
              + 2*Px*cos_th_0*d_4*r_11*r_23 - 2*Px*cos_th_0*d_4*r_13*r_21 - Py**2*cos_th_0*r_21**3
              - Py**2*cos_th_0*r_21*r_22**2 - Py**2*cos_th_0*r_21*r_23**2 + Py**2*r_11*r_21**2*sin_th_0
              - Py**2*r_11*r_22**2*sin_th_0 - Py**2*r_11*r_23**2*sin_th_0 + 2*Py**2*r_12*r_21*r_22*sin_th_0
              + 2*Py**2*r_13*r_21*r_23*sin_th_0 - 2*Py*Pz*cos_th_0*r_21**2*r_31 -
              2*Py*Pz*cos_th_0*r_22**2*r_31 - 2*Py*Pz*cos_th_0*r_23**2*r_31 + 2*Py*Pz*r_11*r_21*r_31*sin_th_0
              - 2*Py*Pz*r_11*r_22*r_32*sin_th_0 - 2*Py*Pz*r_11*r_23*r_33*sin_th_0
              + 2*Py*Pz*r_12*r_21*r_32*sin_th_0 + 2*Py*Pz*r_12*r_22*r_31*sin_th_0
              + 2*Py*Pz*r_13*r_21*r_33*sin_th_0 + 2*Py*Pz*r_13*r_23*r_31*sin_th_0
              + 2*Py*d_4*r_11*r_23*sin_th_0 - 2*Py*d_4*r_13*r_21*sin_th_0 - Pz**2*cos_th_0*r_21*r_31**2
              + Pz**2*cos_th_0*r_21*r_32**2 + Pz**2*cos_th_0*r_21*r_33**2 - 2*Pz**2*cos_th_0*r_22*r_31*r_32
              - 2*Pz**2*cos_th_0*r_23*r_31*r_33 + Pz**2*r_11*r_31**2*sin_th_0 - Pz**2*r_11*r_32**2*sin_th_0
              - Pz**2*r_11*r_33**2*sin_th_0 + 2*Pz**2*r_12*r_31*r_32*sin_th_0 + 2*Pz**2*r_13*r_31*r_33*sin_th_0
              - 2*Pz*cos_th_0*d_4*r_21*r_33 + 2*Pz*cos_th_0*d_4*r_23*r_31 + 2*Pz*d_4*r_11*r_33*sin_th_0
              - 2*Pz*d_4*r_13*r_31*sin_th_0 + cos_th_0*d_2**2*r_21 + cos_th_0*d_3**2*r_21
              + cos_th_0*d_4**2*r_21 - d_2**2*r_11*sin_th_0 - d_3**2*r_11*sin_th_0
              - d_4**2*r_11*sin_th_0
            - -Px**2*cos_th_0*r_11**2*r_23 + 2*Px**2*cos_th_0*r_11*r_13*r_21 - Px**2*cos_th_0*r_12**2*r_23
              + 2*Px**2*cos_th_0*r_12*r_13*r_22 + Px**2*cos_th_0*r_13**2*r_23 - Px**2*r_11**2*r_13*sin_th_0
              - Px**2*r_12**2*r_13*sin_th_0 - Px**2*r_13**3*sin_th_0 + 2*Px*Py*cos_th_0*r_13*r_21**2
              + 2*Px*Py*cos_th_0*r_13*r_22**2 + 2*Px*Py*cos_th_0*r_13*r_23**2 - 2*Px*Py*r_11**2*r_23*sin_th_0
              - 2*Px*Py*r_12**2*r_23*sin_th_0 - 2*Px*Py*r_13**2*r_23*sin_th_0 + 2*Px*Pz*cos_th_0*r_11*r_21*r_33
              - 2*Px*Pz*cos_th_0*r_11*r_23*r_31 + 2*Px*Pz*cos_th_0*r_12*r_22*r_33
              - 2*Px*Pz*cos_th_0*r_12*r_23*r_32 + 2*Px*Pz*cos_th_0*r_13*r_21*r_31
              + 2*Px*Pz*cos_th_0*r_13*r_22*r_32 + 2*Px*Pz*cos_th_0*r_13*r_23*r_33
              - 2*Px*Pz*r_11**2*r_33*sin_th_0 - 2*Px*Pz*r_12**2*r_33*sin_th_0 - 2*Px*Pz*r_13**2*r_33*sin_th_0
              - 2*Px*cos_th_0*d_4*r_11*r_21 - 2*Px*cos_th_0*d_4*r_12*r_22 - 2*Px*cos_th_0*d_4*r_13*r_23
              + 2*Px*d_4*r_11**2*sin_th_0 + 2*Px*d_4*r_12**2*sin_th_0 + 2*Px*d_4*r_13**2*sin_th_0
              + Py**2*cos_th_0*r_21**2*r_23 + Py**2*cos_th_0*r_22**2*r_23 + Py**2*cos_th_0*r_23**3
              - 2*Py**2*r_11*r_21*r_23*sin_th_0 - 2*Py**2*r_12*r_22*r_23*sin_th_0
              + Py**2*r_13*r_21**2*sin_th_0 + Py**2*r_13*r_22**2*sin_th_0 - Py**2*r_13*r_23**2*sin_th_0
              + 2*Py*Pz*cos_th_0*r_21**2*r_33 + 2*Py*Pz*cos_th_0*r_22**2*r_33 + 2*Py*Pz*cos_th_0*r_23**2*r_33
              - 2*Py*Pz*r_11*r_21*r_33*sin_th_0 - 2*Py*Pz*r_11*r_23*r_31*sin_th_0
              - 2*Py*Pz*r_12*r_22*r_33*sin_th_0 - 2*Py*Pz*r_12*r_23*r_32*sin_th_0
              + 2*Py*Pz*r_13*r_21*r_31*sin_th_0 + 2*Py*Pz*r_13*r_22*r_32*sin_th_0
              - 2*Py*Pz*r_13*r_23*r_33*sin_th_0 - 2*Py*cos_th_0*d_4*r_21**2 - 2*Py*cos_th_0*d_4*r_22**2
              - 2*Py*cos_th_0*d_4*r_23**2 + 2*Py*d_4*r_11*r_21*sin_th_0 + 2*Py*d_4*r_12*r_22*sin_th_0
              + 2*Py*d_4*r_13*r_23*sin_th_0 + 2*Pz**2*cos_th_0*r_21*r_31*r_33 + 2*Pz**2*cos_th_0*r_22*r_32*r_33
              - Pz**2*cos_th_0*r_23*r_31**2 - Pz**2*cos_th_0*r_23*r_32**2 + Pz**2*cos_th_0*r_23*r_33**2
              - 2*Pz**2*r_11*r_31*r_33*sin_th_0 - 2*Pz**2*r_12*r_32*r_33*sin_th_0
              + Pz**2*r_13*r_31**2*sin_th_0 + Pz**2*r_13*r_32**2*sin_th_0 - Pz**2*r_13*r_33**2*sin_th_0
              - 2*Pz*cos_th_0*d_4*r_21*r_31 - 2*Pz*cos_th_0*d_4*r_22*r_32 - 2*Pz*cos_th_0*d_4*r_23*r_33
              + 2*Pz*d_4*r_11*r_31*sin_th_0 + 2*Pz*d_4*r_12*r_32*sin_th_0 + 2*Pz*d_4*r_13*r_33*sin_th_0
              - cos_th_0*d_2**2*r_23 - cos_th_0*d_3**2*r_23 + cos_th_0*d_4**2*r_23
              + d_2**2*r_13*sin_th_0 + d_3**2*r_13*sin_th_0 - d_4**2*r_13*sin_th_0
            - -2*Px*cos_th_0*d_3*r_11*r_22 + 2*Px*cos_th_0*d_3*r_12*r_21 - 2*Py*d_3*r_11*r_22*sin_th_0
              + 2*Py*d_3*r_12*r_21*sin_th_0 + 2*Pz*cos_th_0*d_3*r_21*r_32 - 2*Pz*cos_th_0*d_3*r_22*r_31
              - 2*Pz*d_3*r_11*r_32*sin_th_0 + 2*Pz*d_3*r_12*r_31*sin_th_0
            - 2*Px*cos_th_0*d_2*r_12*r_23 - 2*Px*cos_th_0*d_2*r_13*r_22 + 2*Py*d_2*r_12*r_23*sin_th_0
              - 2*Py*d_2*r_13*r_22*sin_th_0 - 2*Pz*cos_th_0*d_2*r_22*r_33 + 2*Pz*cos_th_0*d_2*r_23*r_32
              + 2*Pz*d_2*r_12*r_33*sin_th_0 - 2*Pz*d_2*r_13*r_32*sin_th_0 + 2*cos_th_0*d_2*d_4*r_22
              - 2*d_2*d_4*r_12*sin_th_0
            - -2*Px*cos_th_0*d_2*r_11*r_23 + 2*Px*cos_th_0*d_2*r_13*r_21 - 2*Py*d_2*r_11*r_23*sin_th_0
              + 2*Py*d_2*r_13*r_21*sin_th_0 + 2*Pz*cos_th_0*d_2*r_21*r_33 - 2*Pz*cos_th_0*d_2*r_23*r_31
              - 2*Pz*d_2*r_11*r_33*sin_th_0 + 2*Pz*d_2*r_13*r_31*sin_th_0 - 2*cos_th_0*d_2*d_4*r_21
              + 2*d_2*d_4*r_11*sin_th_0
            - '0'
            - 2*cos_th_0*d_2*d_3*r_22 - 2*d_2*d_3*r_12*sin_th_0
            - -2*cos_th_0*d_2*d_3*r_21 + 2*d_2*d_3*r_11*sin_th_0
            - -2*Px*cos_th_0*d_2*r_11*r_23 + 2*Px*cos_th_0*d_2*r_13*r_21 - 2*Py*d_2*r_11*r_23*sin_th_0
              + 2*Py*d_2*r_13*r_21*sin_th_0 + 2*Pz*cos_th_0*d_2*r_21*r_33 - 2*Pz*cos_th_0*d_2*r_23*r_31
              - 2*Pz*d_2*r_11*r_33*sin_th_0 + 2*Pz*d_2*r_13*r_31*sin_th_0 - 2*cos_th_0*d_2*d_4*r_21
              + 2*d_2*d_4*r_11*sin_th_0
            - -2*Px*cos_th_0*d_2*r_12*r_23 + 2*Px*cos_th_0*d_2*r_13*r_22 - 2*Py*d_2*r_12*r_23*sin_th_0
              + 2*Py*d_2*r_13*r_22*sin_th_0 + 2*Pz*cos_th_0*d_2*r_22*r_33 - 2*Pz*cos_th_0*d_2*r_23*r_32
              - 2*Pz*d_2*r_12*r_33*sin_th_0 + 2*Pz*d_2*r_13*r_32*sin_th_0 - 2*cos_th_0*d_2*d_4*r_22
              + 2*d_2*d_4*r_12*sin_th_0
            - 2*Px*cos_th_0*d_2*r_11*r_22 - 2*Px*cos_th_0*d_2*r_12*r_21 + 2*Py*d_2*r_11*r_22*sin_th_0
              - 2*Py*d_2*r_12*r_21*sin_th_0 - 2*Pz*cos_th_0*d_2*r_21*r_32 + 2*Pz*cos_th_0*d_2*r_22*r_31
              + 2*Pz*d_2*r_11*r_32*sin_th_0 - 2*Pz*d_2*r_12*r_31*sin_th_0
            - -2*cos_th_0*d_2*d_3*r_23 + 2*d_2*d_3*r_13*sin_th_0
            - -Px**2*cos_th_0*r_11**2*r_21 - 2*Px**2*cos_th_0*r_11*r_12*r_22 - 2*Px**2*cos_th_0*r_11*r_13*r_23
              + Px**2*cos_th_0*r_12**2*r_21 + Px**2*cos_th_0*r_13**2*r_21 + Px**2*r_11**3*sin_th_0
              + Px**2*r_11*r_12**2*sin_th_0 + Px**2*r_11*r_13**2*sin_th_0 - 2*Px*Py*cos_th_0*r_11*r_21**2
              - 2*Px*Py*cos_th_0*r_11*r_22**2 - 2*Px*Py*cos_th_0*r_11*r_23**2 + 2*Px*Py*r_11**2*r_21*sin_th_0
              + 2*Px*Py*r_12**2*r_21*sin_th_0 + 2*Px*Py*r_13**2*r_21*sin_th_0 - 2*Px*Pz*cos_th_0*r_11*r_21*r_31
              - 2*Px*Pz*cos_th_0*r_11*r_22*r_32 - 2*Px*Pz*cos_th_0*r_11*r_23*r_33
              + 2*Px*Pz*cos_th_0*r_12*r_21*r_32 - 2*Px*Pz*cos_th_0*r_12*r_22*r_31
              + 2*Px*Pz*cos_th_0*r_13*r_21*r_33 - 2*Px*Pz*cos_th_0*r_13*r_23*r_31
              + 2*Px*Pz*r_11**2*r_31*sin_th_0 + 2*Px*Pz*r_12**2*r_31*sin_th_0 + 2*Px*Pz*r_13**2*r_31*sin_th_0
              + 2*Px*cos_th_0*d_4*r_11*r_23 - 2*Px*cos_th_0*d_4*r_13*r_21 - Py**2*cos_th_0*r_21**3
              - Py**2*cos_th_0*r_21*r_22**2 - Py**2*cos_th_0*r_21*r_23**2 + Py**2*r_11*r_21**2*sin_th_0
              - Py**2*r_11*r_22**2*sin_th_0 - Py**2*r_11*r_23**2*sin_th_0 + 2*Py**2*r_12*r_21*r_22*sin_th_0
              + 2*Py**2*r_13*r_21*r_23*sin_th_0 - 2*Py*Pz*cos_th_0*r_21**2*r_31 -
              2*Py*Pz*cos_th_0*r_22**2*r_31 - 2*Py*Pz*cos_th_0*r_23**2*r_31 + 2*Py*Pz*r_11*r_21*r_31*sin_th_0
              - 2*Py*Pz*r_11*r_22*r_32*sin_th_0 - 2*Py*Pz*r_11*r_23*r_33*sin_th_0
              + 2*Py*Pz*r_12*r_21*r_32*sin_th_0 + 2*Py*Pz*r_12*r_22*r_31*sin_th_0
              + 2*Py*Pz*r_13*r_21*r_33*sin_th_0 + 2*Py*Pz*r_13*r_23*r_31*sin_th_0
              + 2*Py*d_4*r_11*r_23*sin_th_0 - 2*Py*d_4*r_13*r_21*sin_th_0 - Pz**2*cos_th_0*r_21*r_31**2
              + Pz**2*cos_th_0*r_21*r_32**2 + Pz**2*cos_th_0*r_21*r_33**2 - 2*Pz**2*cos_th_0*r_22*r_31*r_32
              - 2*Pz**2*cos_th_0*r_23*r_31*r_33 + Pz**2*r_11*r_31**2*sin_th_0 - Pz**2*r_11*r_32**2*sin_th_0
              - Pz**2*r_11*r_33**2*sin_th_0 + 2*Pz**2*r_12*r_31*r_32*sin_th_0 + 2*Pz**2*r_13*r_31*r_33*sin_th_0
              - 2*Pz*cos_th_0*d_4*r_21*r_33 + 2*Pz*cos_th_0*d_4*r_23*r_31 + 2*Pz*d_4*r_11*r_33*sin_th_0
              - 2*Pz*d_4*r_13*r_31*sin_th_0 + cos_th_0*d_2**2*r_21 - cos_th_0*d_3**2*r_21
              + cos_th_0*d_4**2*r_21 - d_2**2*r_11*sin_th_0 + d_3**2*r_11*sin_th_0
              - d_4**2*r_11*sin_th_0
            - Px**2*cos_th_0*r_11**2*r_22 - 2*Px**2*cos_th_0*r_11*r_12*r_21 - Px**2*cos_th_0*r_12**2*r_22
              - 2*Px**2*cos_th_0*r_12*r_13*r_23 + Px**2*cos_th_0*r_13**2*r_22 + Px**2*r_11**2*r_12*sin_th_0
              + Px**2*r_12**3*sin_th_0 + Px**2*r_12*r_13**2*sin_th_0 - 2*Px*Py*cos_th_0*r_12*r_21**2
              - 2*Px*Py*cos_th_0*r_12*r_22**2 - 2*Px*Py*cos_th_0*r_12*r_23**2 + 2*Px*Py*r_11**2*r_22*sin_th_0
              + 2*Px*Py*r_12**2*r_22*sin_th_0 + 2*Px*Py*r_13**2*r_22*sin_th_0 - 2*Px*Pz*cos_th_0*r_11*r_21*r_32
              + 2*Px*Pz*cos_th_0*r_11*r_22*r_31 - 2*Px*Pz*cos_th_0*r_12*r_21*r_31
              - 2*Px*Pz*cos_th_0*r_12*r_22*r_32 - 2*Px*Pz*cos_th_0*r_12*r_23*r_33
              + 2*Px*Pz*cos_th_0*r_13*r_22*r_33 - 2*Px*Pz*cos_th_0*r_13*r_23*r_32
              + 2*Px*Pz*r_11**2*r_32*sin_th_0 + 2*Px*Pz*r_12**2*r_32*sin_th_0 + 2*Px*Pz*r_13**2*r_32*sin_th_0
              + 2*Px*cos_th_0*d_4*r_12*r_23 - 2*Px*cos_th_0*d_4*r_13*r_22 - Py**2*cos_th_0*r_21**2*r_22
              - Py**2*cos_th_0*r_22**3 - Py**2*cos_th_0*r_22*r_23**2 + 2*Py**2*r_11*r_21*r_22*sin_th_0
              - Py**2*r_12*r_21**2*sin_th_0 + Py**2*r_12*r_22**2*sin_th_0 - Py**2*r_12*r_23**2*sin_th_0
              + 2*Py**2*r_13*r_22*r_23*sin_th_0 - 2*Py*Pz*cos_th_0*r_21**2*r_32 -
              2*Py*Pz*cos_th_0*r_22**2*r_32 - 2*Py*Pz*cos_th_0*r_23**2*r_32 + 2*Py*Pz*r_11*r_21*r_32*sin_th_0
              + 2*Py*Pz*r_11*r_22*r_31*sin_th_0 - 2*Py*Pz*r_12*r_21*r_31*sin_th_0
              + 2*Py*Pz*r_12*r_22*r_32*sin_th_0 - 2*Py*Pz*r_12*r_23*r_33*sin_th_0
              + 2*Py*Pz*r_13*r_22*r_33*sin_th_0 + 2*Py*Pz*r_13*r_23*r_32*sin_th_0
              + 2*Py*d_4*r_12*r_23*sin_th_0 - 2*Py*d_4*r_13*r_22*sin_th_0 - 2*Pz**2*cos_th_0*r_21*r_31*r_32
              + Pz**2*cos_th_0*r_22*r_31**2 - Pz**2*cos_th_0*r_22*r_32**2 + Pz**2*cos_th_0*r_22*r_33**2
              - 2*Pz**2*cos_th_0*r_23*r_32*r_33 + 2*Pz**2*r_11*r_31*r_32*sin_th_0
              - Pz**2*r_12*r_31**2*sin_th_0 + Pz**2*r_12*r_32**2*sin_th_0 - Pz**2*r_12*r_33**2*sin_th_0
              + 2*Pz**2*r_13*r_32*r_33*sin_th_0 - 2*Pz*cos_th_0*d_4*r_22*r_33 + 2*Pz*cos_th_0*d_4*r_23*r_32
              + 2*Pz*d_4*r_12*r_33*sin_th_0 - 2*Pz*d_4*r_13*r_32*sin_th_0 + cos_th_0*d_2**2*r_22
              - cos_th_0*d_3**2*r_22 + cos_th_0*d_4**2*r_22 - d_2**2*r_12*sin_th_0
              + d_3**2*r_12*sin_th_0 - d_4**2*r_12*sin_th_0
            - -2*Px*cos_th_0*d_3*r_11*r_21 - 2*Px*cos_th_0*d_3*r_12*r_22 - 2*Px*cos_th_0*d_3*r_13*r_23
              + 2*Px*d_3*r_11**2*sin_th_0 + 2*Px*d_3*r_12**2*sin_th_0 + 2*Px*d_3*r_13**2*sin_th_0
              - 2*Py*cos_th_0*d_3*r_21**2 - 2*Py*cos_th_0*d_3*r_22**2 - 2*Py*cos_th_0*d_3*r_23**2
              + 2*Py*d_3*r_11*r_21*sin_th_0 + 2*Py*d_3*r_12*r_22*sin_th_0 + 2*Py*d_3*r_13*r_23*sin_th_0
              - 2*Pz*cos_th_0*d_3*r_21*r_31 - 2*Pz*cos_th_0*d_3*r_22*r_32 - 2*Pz*cos_th_0*d_3*r_23*r_33
              + 2*Pz*d_3*r_11*r_31*sin_th_0 + 2*Pz*d_3*r_12*r_32*sin_th_0 + 2*Pz*d_3*r_13*r_33*sin_th_0
              + 2*cos_th_0*d_3*d_4*r_23 - 2*d_3*d_4*r_13*sin_th_0
            - Px**2*cos_th_0*r_11**2*r_22 - 2*Px**2*cos_th_0*r_11*r_12*r_21 - Px**2*cos_th_0*r_12**2*r_22
              - 2*Px**2*cos_th_0*r_12*r_13*r_23 + Px**2*cos_th_0*r_13**2*r_22 + Px**2*r_11**2*r_12*sin_th_0
              + Px**2*r_12**3*sin_th_0 + Px**2*r_12*r_13**2*sin_th_0 - 2*Px*Py*cos_th_0*r_12*r_21**2
              - 2*Px*Py*cos_th_0*r_12*r_22**2 - 2*Px*Py*cos_th_0*r_12*r_23**2 + 2*Px*Py*r_11**2*r_22*sin_th_0
              + 2*Px*Py*r_12**2*r_22*sin_th_0 + 2*Px*Py*r_13**2*r_22*sin_th_0 - 2*Px*Pz*cos_th_0*r_11*r_21*r_32
              + 2*Px*Pz*cos_th_0*r_11*r_22*r_31 - 2*Px*Pz*cos_th_0*r_12*r_21*r_31
              - 2*Px*Pz*cos_th_0*r_12*r_22*r_32 - 2*Px*Pz*cos_th_0*r_12*r_23*r_33
              + 2*Px*Pz*cos_th_0*r_13*r_22*r_33 - 2*Px*Pz*cos_th_0*r_13*r_23*r_32
              + 2*Px*Pz*r_11**2*r_32*sin_th_0 + 2*Px*Pz*r_12**2*r_32*sin_th_0 + 2*Px*Pz*r_13**2*r_32*sin_th_0
              + 2*Px*cos_th_0*d_4*r_12*r_23 - 2*Px*cos_th_0*d_4*r_13*r_22 - Py**2*cos_th_0*r_21**2*r_22
              - Py**2*cos_th_0*r_22**3 - Py**2*cos_th_0*r_22*r_23**2 + 2*Py**2*r_11*r_21*r_22*sin_th_0
              - Py**2*r_12*r_21**2*sin_th_0 + Py**2*r_12*r_22**2*sin_th_0 - Py**2*r_12*r_23**2*sin_th_0
              + 2*Py**2*r_13*r_22*r_23*sin_th_0 - 2*Py*Pz*cos_th_0*r_21**2*r_32 -
              2*Py*Pz*cos_th_0*r_22**2*r_32 - 2*Py*Pz*cos_th_0*r_23**2*r_32 + 2*Py*Pz*r_11*r_21*r_32*sin_th_0
              + 2*Py*Pz*r_11*r_22*r_31*sin_th_0 - 2*Py*Pz*r_12*r_21*r_31*sin_th_0
              + 2*Py*Pz*r_12*r_22*r_32*sin_th_0 - 2*Py*Pz*r_12*r_23*r_33*sin_th_0
              + 2*Py*Pz*r_13*r_22*r_33*sin_th_0 + 2*Py*Pz*r_13*r_23*r_32*sin_th_0
              + 2*Py*d_4*r_12*r_23*sin_th_0 - 2*Py*d_4*r_13*r_22*sin_th_0 - 2*Pz**2*cos_th_0*r_21*r_31*r_32
              + Pz**2*cos_th_0*r_22*r_31**2 - Pz**2*cos_th_0*r_22*r_32**2 + Pz**2*cos_th_0*r_22*r_33**2
              - 2*Pz**2*cos_th_0*r_23*r_32*r_33 + 2*Pz**2*r_11*r_31*r_32*sin_th_0
              - Pz**2*r_12*r_31**2*sin_th_0 + Pz**2*r_12*r_32**2*sin_th_0 - Pz**2*r_12*r_33**2*sin_th_0
              + 2*Pz**2*r_13*r_32*r_33*sin_th_0 - 2*Pz*cos_th_0*d_4*r_22*r_33 + 2*Pz*cos_th_0*d_4*r_23*r_32
              + 2*Pz*d_4*r_12*r_33*sin_th_0 - 2*Pz*d_4*r_13*r_32*sin_th_0 - cos_th_0*d_2**2*r_22
              + cos_th_0*d_3**2*r_22 + cos_th_0*d_4**2*r_22 + d_2**2*r_12*sin_th_0
              - d_3**2*r_12*sin_th_0 - d_4**2*r_12*sin_th_0
            - Px**2*cos_th_0*r_11**2*r_21 + 2*Px**2*cos_th_0*r_11*r_12*r_22 + 2*Px**2*cos_th_0*r_11*r_13*r_23
              - Px**2*cos_th_0*r_12**2*r_21 - Px**2*cos_th_0*r_13**2*r_21 - Px**2*r_11**3*sin_th_0
              - Px**2*r_11*r_12**2*sin_th_0 - Px**2*r_11*r_13**2*sin_th_0 + 2*Px*Py*cos_th_0*r_11*r_21**2
              + 2*Px*Py*cos_th_0*r_11*r_22**2 + 2*Px*Py*cos_th_0*r_11*r_23**2 - 2*Px*Py*r_11**2*r_21*sin_th_0
              - 2*Px*Py*r_12**2*r_21*sin_th_0 - 2*Px*Py*r_13**2*r_21*sin_th_0 + 2*Px*Pz*cos_th_0*r_11*r_21*r_31
              + 2*Px*Pz*cos_th_0*r_11*r_22*r_32 + 2*Px*Pz*cos_th_0*r_11*r_23*r_33
              - 2*Px*Pz*cos_th_0*r_12*r_21*r_32 + 2*Px*Pz*cos_th_0*r_12*r_22*r_31
              - 2*Px*Pz*cos_th_0*r_13*r_21*r_33 + 2*Px*Pz*cos_th_0*r_13*r_23*r_31
              - 2*Px*Pz*r_11**2*r_31*sin_th_0 - 2*Px*Pz*r_12**2*r_31*sin_th_0 - 2*Px*Pz*r_13**2*r_31*sin_th_0
              - 2*Px*cos_th_0*d_4*r_11*r_23 + 2*Px*cos_th_0*d_4*r_13*r_21 + Py**2*cos_th_0*r_21**3
              + Py**2*cos_th_0*r_21*r_22**2 + Py**2*cos_th_0*r_21*r_23**2 - Py**2*r_11*r_21**2*sin_th_0
              + Py**2*r_11*r_22**2*sin_th_0 + Py**2*r_11*r_23**2*sin_th_0 - 2*Py**2*r_12*r_21*r_22*sin_th_0
              - 2*Py**2*r_13*r_21*r_23*sin_th_0 + 2*Py*Pz*cos_th_0*r_21**2*r_31 +
              2*Py*Pz*cos_th_0*r_22**2*r_31 + 2*Py*Pz*cos_th_0*r_23**2*r_31 - 2*Py*Pz*r_11*r_21*r_31*sin_th_0
              + 2*Py*Pz*r_11*r_22*r_32*sin_th_0 + 2*Py*Pz*r_11*r_23*r_33*sin_th_0
              - 2*Py*Pz*r_12*r_21*r_32*sin_th_0 - 2*Py*Pz*r_12*r_22*r_31*sin_th_0
              - 2*Py*Pz*r_13*r_21*r_33*sin_th_0 - 2*Py*Pz*r_13*r_23*r_31*sin_th_0
              - 2*Py*d_4*r_11*r_23*sin_th_0 + 2*Py*d_4*r_13*r_21*sin_th_0 + Pz**2*cos_th_0*r_21*r_31**2
              - Pz**2*cos_th_0*r_21*r_32**2 - Pz**2*cos_th_0*r_21*r_33**2 + 2*Pz**2*cos_th_0*r_22*r_31*r_32
              + 2*Pz**2*cos_th_0*r_23*r_31*r_33 - Pz**2*r_11*r_31**2*sin_th_0 + Pz**2*r_11*r_32**2*sin_th_0
              + Pz**2*r_11*r_33**2*sin_th_0 - 2*Pz**2*r_12*r_31*r_32*sin_th_0 - 2*Pz**2*r_13*r_31*r_33*sin_th_0
              + 2*Pz*cos_th_0*d_4*r_21*r_33 - 2*Pz*cos_th_0*d_4*r_23*r_31 - 2*Pz*d_4*r_11*r_33*sin_th_0
              + 2*Pz*d_4*r_13*r_31*sin_th_0 + cos_th_0*d_2**2*r_21 - cos_th_0*d_3**2*r_21
              - cos_th_0*d_4**2*r_21 - d_2**2*r_11*sin_th_0 + d_3**2*r_11*sin_th_0
              + d_4**2*r_11*sin_th_0
            - -2*Px*cos_th_0*d_3*r_11*r_23 + 2*Px*cos_th_0*d_3*r_13*r_21 - 2*Py*d_3*r_11*r_23*sin_th_0
              + 2*Py*d_3*r_13*r_21*sin_th_0 + 2*Pz*cos_th_0*d_3*r_21*r_33 - 2*Pz*cos_th_0*d_3*r_23*r_31
              - 2*Pz*d_3*r_11*r_33*sin_th_0 + 2*Pz*d_3*r_13*r_31*sin_th_0 - 2*cos_th_0*d_3*d_4*r_21
              + 2*d_3*d_4*r_11*sin_th_0
            - -2*Px*cos_th_0*d_3*r_12*r_23 + 2*Px*cos_th_0*d_3*r_13*r_22 - 2*Py*d_3*r_12*r_23*sin_th_0
              + 2*Py*d_3*r_13*r_22*sin_th_0 + 2*Pz*cos_th_0*d_3*r_22*r_33 - 2*Pz*cos_th_0*d_3*r_23*r_32
              - 2*Pz*d_3*r_12*r_33*sin_th_0 + 2*Pz*d_3*r_13*r_32*sin_th_0 - 2*cos_th_0*d_3*d_4*r_22
              + 2*d_3*d_4*r_12*sin_th_0
            - 2*Px*cos_th_0*d_3*r_11*r_22 - 2*Px*cos_th_0*d_3*r_12*r_21 + 2*Py*d_3*r_11*r_22*sin_th_0
              - 2*Py*d_3*r_12*r_21*sin_th_0 - 2*Pz*cos_th_0*d_3*r_21*r_32 + 2*Pz*cos_th_0*d_3*r_22*r_31
              + 2*Pz*d_3*r_11*r_32*sin_th_0 - 2*Pz*d_3*r_12*r_31*sin_th_0
            - -Px**2*cos_th_0*r_11**2*r_23 + 2*Px**2*cos_th_0*r_11*r_13*r_21 - Px**2*cos_th_0*r_12**2*r_23
              + 2*Px**2*cos_th_0*r_12*r_13*r_22 + Px**2*cos_th_0*r_13**2*r_23 - Px**2*r_11**2*r_13*sin_th_0
              - Px**2*r_12**2*r_13*sin_th_0 - Px**2*r_13**3*sin_th_0 + 2*Px*Py*cos_th_0*r_13*r_21**2
              + 2*Px*Py*cos_th_0*r_13*r_22**2 + 2*Px*Py*cos_th_0*r_13*r_23**2 - 2*Px*Py*r_11**2*r_23*sin_th_0
              - 2*Px*Py*r_12**2*r_23*sin_th_0 - 2*Px*Py*r_13**2*r_23*sin_th_0 + 2*Px*Pz*cos_th_0*r_11*r_21*r_33
              - 2*Px*Pz*cos_th_0*r_11*r_23*r_31 + 2*Px*Pz*cos_th_0*r_12*r_22*r_33
              - 2*Px*Pz*cos_th_0*r_12*r_23*r_32 + 2*Px*Pz*cos_th_0*r_13*r_21*r_31
              + 2*Px*Pz*cos_th_0*r_13*r_22*r_32 + 2*Px*Pz*cos_th_0*r_13*r_23*r_33
              - 2*Px*Pz*r_11**2*r_33*sin_th_0 - 2*Px*Pz*r_12**2*r_33*sin_th_0 - 2*Px*Pz*r_13**2*r_33*sin_th_0
              - 2*Px*cos_th_0*d_4*r_11*r_21 - 2*Px*cos_th_0*d_4*r_12*r_22 - 2*Px*cos_th_0*d_4*r_13*r_23
              + 2*Px*d_4*r_11**2*sin_th_0 + 2*Px*d_4*r_12**2*sin_th_0 + 2*Px*d_4*r_13**2*sin_th_0
              + Py**2*cos_th_0*r_21**2*r_23 + Py**2*cos_th_0*r_22**2*r_23 + Py**2*cos_th_0*r_23**3
              - 2*Py**2*r_11*r_21*r_23*sin_th_0 - 2*Py**2*r_12*r_22*r_23*sin_th_0
              + Py**2*r_13*r_21**2*sin_th_0 + Py**2*r_13*r_22**2*sin_th_0 - Py**2*r_13*r_23**2*sin_th_0
              + 2*Py*Pz*cos_th_0*r_21**2*r_33 + 2*Py*Pz*cos_th_0*r_22**2*r_33 + 2*Py*Pz*cos_th_0*r_23**2*r_33
              - 2*Py*Pz*r_11*r_21*r_33*sin_th_0 - 2*Py*Pz*r_11*r_23*r_31*sin_th_0
              - 2*Py*Pz*r_12*r_22*r_33*sin_th_0 - 2*Py*Pz*r_12*r_23*r_32*sin_th_0
              + 2*Py*Pz*r_13*r_21*r_31*sin_th_0 + 2*Py*Pz*r_13*r_22*r_32*sin_th_0
              - 2*Py*Pz*r_13*r_23*r_33*sin_th_0 - 2*Py*cos_th_0*d_4*r_21**2 - 2*Py*cos_th_0*d_4*r_22**2
              - 2*Py*cos_th_0*d_4*r_23**2 + 2*Py*d_4*r_11*r_21*sin_th_0 + 2*Py*d_4*r_12*r_22*sin_th_0
              + 2*Py*d_4*r_13*r_23*sin_th_0 + 2*Pz**2*cos_th_0*r_21*r_31*r_33 + 2*Pz**2*cos_th_0*r_22*r_32*r_33
              - Pz**2*cos_th_0*r_23*r_31**2 - Pz**2*cos_th_0*r_23*r_32**2 + Pz**2*cos_th_0*r_23*r_33**2
              - 2*Pz**2*r_11*r_31*r_33*sin_th_0 - 2*Pz**2*r_12*r_32*r_33*sin_th_0
              + Pz**2*r_13*r_31**2*sin_th_0 + Pz**2*r_13*r_32**2*sin_th_0 - Pz**2*r_13*r_33**2*sin_th_0
              - 2*Pz*cos_th_0*d_4*r_21*r_31 - 2*Pz*cos_th_0*d_4*r_22*r_32 - 2*Pz*cos_th_0*d_4*r_23*r_33
              + 2*Pz*d_4*r_11*r_31*sin_th_0 + 2*Pz*d_4*r_12*r_32*sin_th_0 + 2*Pz*d_4*r_13*r_33*sin_th_0
              + cos_th_0*d_2**2*r_23 - cos_th_0*d_3**2*r_23 + cos_th_0*d_4**2*r_23
              - d_2**2*r_13*sin_th_0 + d_3**2*r_13*sin_th_0 - d_4**2*r_13*sin_th_0
            - 2*cos_th_0*d_2*d_3*r_21 - 2*d_2*d_3*r_11*sin_th_0
            - 2*cos_th_0*d_2*d_3*r_22 - 2*d_2*d_3*r_12*sin_th_0
            - 2*Px*cos_th_0*d_2*r_11*r_21 + 2*Px*cos_th_0*d_2*r_12*r_22 + 2*Px*cos_th_0*d_2*r_13*r_23
              - 2*Px*d_2*r_11**2*sin_th_0 - 2*Px*d_2*r_12**2*sin_th_0 - 2*Px*d_2*r_13**2*sin_th_0
              + 2*Py*cos_th_0*d_2*r_21**2 + 2*Py*cos_th_0*d_2*r_22**2 + 2*Py*cos_th_0*d_2*r_23**2
              - 2*Py*d_2*r_11*r_21*sin_th_0 - 2*Py*d_2*r_12*r_22*sin_th_0 - 2*Py*d_2*r_13*r_23*sin_th_0
              + 2*Pz*cos_th_0*d_2*r_21*r_31 + 2*Pz*cos_th_0*d_2*r_22*r_32 + 2*Pz*cos_th_0*d_2*r_23*r_33
              - 2*Pz*d_2*r_11*r_31*sin_th_0 - 2*Pz*d_2*r_12*r_32*sin_th_0 - 2*Pz*d_2*r_13*r_33*sin_th_0
              - 2*cos_th_0*d_2*d_4*r_23 + 2*d_2*d_4*r_13*sin_th_0
            rows: 14
          lhs_terms:
            cols: 1
            flatten_data:
            - sin_th_4*sin_th_5
            - cos_th_5*sin_th_4
            - cos_th_4*sin_th_5
            - cos_th_4*cos_th_5
            - sin_th_4
            - cos_th_4
            - sin_th_5
            - cos_th_5
            - '1'
            rows: 9
          rhs_matrix:
            cols: 8
            flatten_data:
            - '0'
            - '0'
            - '0'
            - -a_0
            - '0'
            - '0'
            - '0'
            - -a_1
            - '0'
            - '0'
            - -a_0
            - '0'
            - '0'
            - '0'
            - -a_1
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - a_0
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '-1'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '1'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - 2*a_0*a_1
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - -a_0
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - -a_0
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - -a_0
            - '0'
            - '0'
            - '0'
            - '0'
            - -2*a_0*a_1
            - '0'
            - '0'
            - '0'
            - -a_0**2 - a_1**2
            - '0'
            - '0'
            - '0'
            - '0'
            - 2*a_0*a_1
            - '0'
            - '0'
            - '0'
            - a_0**2 + a_1**2
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            - '0'
            rows: 14
          rhs_terms:
            cols: 1
            flatten_data:
            - sin_th_2*sin_th_3
            - cos_th_3*sin_th_2
            - cos_th_2*sin_th_3
            - cos_th_2*cos_th_3
            - sin_th_2
            - cos_th_2
            - sin_th_3
            - cos_th_3
            rows: 8
          variable_in_lhs_matrix:
            var: th_0
      select_lines: !!python/tuple
      - 0
      - 1
      - 2
      - 3
      - 4
      - 6
      - 8
      - 9
      semi_symbolic_reduce:
        A:
          cols: 9
          flatten_data:
          - -r_23
          - '0'
          - -r_23
          - -2*r_21
          - -4*r_22
          - 2*r_21
          - r_23
          - '0'
          - r_23
          - Px*r_11*r_21 + Px*r_12*r_22 + Px*r_13*r_23 + Py*r_21**2 + Py*r_22**2 +
            Py*r_23**2 + Pz*r_21*r_31 + Pz*r_22*r_32 + Pz*r_23*r_33 - d_2*r_23 - d_3*r_22
            - d_4*r_23
          - 2*d_3*r_21
          - Px*r_11*r_21 + Px*r_12*r_22 + Px*r_13*r_23 + Py*r_21**2 + Py*r_22**2 +
            Py*r_23**2 + Pz*r_21*r_31 + Pz*r_22*r_32 + Pz*r_23*r_33 - d_2*r_23 + d_3*r_22
            - d_4*r_23
          - -2*d_2*r_21
          - -4*d_2*r_22
          - 2*d_2*r_21
          - Px*r_11*r_21 + Px*r_12*r_22 + Px*r_13*r_23 + Py*r_21**2 + Py*r_22**2 +
            Py*r_23**2 + Pz*r_21*r_31 + Pz*r_22*r_32 + Pz*r_23*r_33 + d_2*r_23 - d_3*r_22
            - d_4*r_23
          - 2*d_3*r_21
          - Px*r_11*r_21 + Px*r_12*r_22 + Px*r_13*r_23 + Py*r_21**2 + Py*r_22**2 +
            Py*r_23**2 + Pz*r_21*r_31 + Pz*r_22*r_32 + Pz*r_23*r_33 + d_2*r_23 + d_3*r_22
            - d_4*r_23
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31 - R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 + R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 - R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - R_l_inv_53*a_0*r_21 + R_l_inv_54*a_0*r_22 - 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - R_l_inv_56*a_0*d_2*r_22 + R_l_inv_56*a_0*d_3*r_23 - R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - R_l_inv_57*a_0*d_2*r_21
            - R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 - d_3*r_21
          - -2*R_l_inv_50*a_0*(Px*r_12 + Py*r_22 + Pz*r_32) - 2*R_l_inv_51*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*R_l_inv_53*a_0*r_22 - 2*R_l_inv_54*a_0*r_21 +
            4*R_l_inv_55*a_0*d_3*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*R_l_inv_56*a_0*d_2*r_21
            + 2*R_l_inv_56*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*R_l_inv_57*a_0*d_2*r_22 - 2*R_l_inv_57*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - 2*d_3*r_22
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31 + R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 - R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 - R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + R_l_inv_53*a_0*r_21 - R_l_inv_54*a_0*r_22 - 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + R_l_inv_56*a_0*d_2*r_22 + R_l_inv_56*a_0*d_3*r_23 + R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + R_l_inv_57*a_0*d_2*r_21
            + R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 + d_3*r_21
          - -2*Px*r_12*r_23 + 2*Px*r_13*r_22 + 2*Pz*r_22*r_33 - 2*Pz*r_23*r_32 + 2*R_l_inv_50*a_0*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_52*a_0*(Px*r_11 + Py*r_21 + Pz*r_31)
            + 2*R_l_inv_53*a_0*r_23 - 4*R_l_inv_55*a_0*d_2*(Px*r_11 + Py*r_21 + Pz*r_31)
            + 2*R_l_inv_56*a_0*d_3*r_21 + 2*R_l_inv_56*a_0*(Px*r_11*r_22 - Px*r_12*r_21
            - Pz*r_21*r_32 + Pz*r_22*r_31) + 2*R_l_inv_57*a_0*d_2*r_23 + 2*d_3*r_23
            - 2*d_4*r_22
          - 4*Px*r_11*r_23 - 4*Px*r_13*r_21 - 4*Pz*r_21*r_33 + 4*Pz*r_23*r_31 - 4*R_l_inv_52*a_0*(Px*r_12
            + Py*r_22 + Pz*r_32) - 8*R_l_inv_55*a_0*d_2*(Px*r_12 + Py*r_22 + Pz*r_32)
            + 4*R_l_inv_56*a_0*d_3*r_22 + 4*d_4*r_21
          - 2*Px*r_12*r_23 - 2*Px*r_13*r_22 - 2*Pz*r_22*r_33 + 2*Pz*r_23*r_32 + 2*R_l_inv_50*a_0*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_52*a_0*(Px*r_11 + Py*r_21 + Pz*r_31)
            + 2*R_l_inv_53*a_0*r_23 + 4*R_l_inv_55*a_0*d_2*(Px*r_11 + Py*r_21 + Pz*r_31)
            - 2*R_l_inv_56*a_0*d_3*r_21 + 2*R_l_inv_56*a_0*(Px*r_11*r_22 - Px*r_12*r_21
            - Pz*r_21*r_32 + Pz*r_22*r_31) + 2*R_l_inv_57*a_0*d_2*r_23 + 2*d_3*r_23
            + 2*d_4*r_22
          - Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31 + R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 + R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 + R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + R_l_inv_53*a_0*r_21 + R_l_inv_54*a_0*r_22 + 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - R_l_inv_56*a_0*d_2*r_22 - R_l_inv_56*a_0*d_3*r_23 + R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + R_l_inv_57*a_0*d_2*r_21
            - R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 + d_3*r_21
          - 2*R_l_inv_50*a_0*(Px*r_12 + Py*r_22 + Pz*r_32) - 2*R_l_inv_51*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*R_l_inv_53*a_0*r_22 - 2*R_l_inv_54*a_0*r_21 +
            4*R_l_inv_55*a_0*d_3*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*R_l_inv_56*a_0*d_2*r_21
            - 2*R_l_inv_56*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*R_l_inv_57*a_0*d_2*r_22 - 2*R_l_inv_57*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + 2*d_3*r_22
          - Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31 - R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 - R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 + R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - R_l_inv_53*a_0*r_21 - R_l_inv_54*a_0*r_22 + 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + R_l_inv_56*a_0*d_2*r_22 - R_l_inv_56*a_0*d_3*r_23 - R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - R_l_inv_57*a_0*d_2*r_21
            + R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 - d_3*r_21
          - Px**2*r_11**2*r_21 + 2*Px**2*r_11*r_12*r_22 + 2*Px**2*r_11*r_13*r_23 -
            Px**2*r_12**2*r_21 - Px**2*r_13**2*r_21 + 2*Px*Py*r_11*r_21**2 + 2*Px*Py*r_11*r_22**2
            + 2*Px*Py*r_11*r_23**2 + 2*Px*Pz*r_11*r_21*r_31 + 2*Px*Pz*r_11*r_22*r_32
            + 2*Px*Pz*r_11*r_23*r_33 - 2*Px*Pz*r_12*r_21*r_32 + 2*Px*Pz*r_12*r_22*r_31
            - 2*Px*Pz*r_13*r_21*r_33 + 2*Px*Pz*r_13*r_23*r_31 - 2*Px*d_2*r_11*r_23
            + 2*Px*d_2*r_13*r_21 - 2*Px*d_3*r_11*r_22 + 2*Px*d_3*r_12*r_21 - 2*Px*d_4*r_11*r_23
            + 2*Px*d_4*r_13*r_21 + Py**2*r_21**3 + Py**2*r_21*r_22**2 + Py**2*r_21*r_23**2
            + 2*Py*Pz*r_21**2*r_31 + 2*Py*Pz*r_22**2*r_31 + 2*Py*Pz*r_23**2*r_31 +
            Pz**2*r_21*r_31**2 - Pz**2*r_21*r_32**2 - Pz**2*r_21*r_33**2 + 2*Pz**2*r_22*r_31*r_32
            + 2*Pz**2*r_23*r_31*r_33 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31 + 2*Pz*d_3*r_21*r_32
            - 2*Pz*d_3*r_22*r_31 + 2*Pz*d_4*r_21*r_33 - 2*Pz*d_4*r_23*r_31 - d_2**2*r_21
            - 2*d_2*d_4*r_21 - d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) - 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            d_3**2*r_21 + d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) - 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - d_4**2*r_21
            - r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - -2*Px**2*r_11**2*r_22 + 4*Px**2*r_11*r_12*r_21 + 2*Px**2*r_12**2*r_22
            + 4*Px**2*r_12*r_13*r_23 - 2*Px**2*r_13**2*r_22 + 4*Px*Py*r_12*r_21**2
            + 4*Px*Py*r_12*r_22**2 + 4*Px*Py*r_12*r_23**2 + 4*Px*Pz*r_11*r_21*r_32
            - 4*Px*Pz*r_11*r_22*r_31 + 4*Px*Pz*r_12*r_21*r_31 + 4*Px*Pz*r_12*r_22*r_32
            + 4*Px*Pz*r_12*r_23*r_33 - 4*Px*Pz*r_13*r_22*r_33 + 4*Px*Pz*r_13*r_23*r_32
            - 4*Px*d_2*r_12*r_23 + 4*Px*d_2*r_13*r_22 - 4*Px*d_4*r_12*r_23 + 4*Px*d_4*r_13*r_22
            + 2*Py**2*r_21**2*r_22 + 2*Py**2*r_22**3 + 2*Py**2*r_22*r_23**2 + 4*Py*Pz*r_21**2*r_32
            + 4*Py*Pz*r_22**2*r_32 + 4*Py*Pz*r_23**2*r_32 + 4*Pz**2*r_21*r_31*r_32
            - 2*Pz**2*r_22*r_31**2 + 2*Pz**2*r_22*r_32**2 - 2*Pz**2*r_22*r_33**2 +
            4*Pz**2*r_23*r_32*r_33 + 4*Pz*d_2*r_22*r_33 - 4*Pz*d_2*r_23*r_32 + 4*Pz*d_4*r_22*r_33
            - 4*Pz*d_4*r_23*r_32 - 2*d_2**2*r_22 - 4*d_2*d_4*r_22 + 2*d_2*r_21*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 2*d_2*r_22*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - 2*d_3**2*r_22 + 4*d_3*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_4**2*r_22 - 2*r_21*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - 2*r_22*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 2*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_2*r_11*r_23
            - 2*Px*d_2*r_13*r_21 - 2*Px*d_3*r_11*r_22 + 2*Px*d_3*r_12*r_21 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_2*r_21*r_33 + 2*Pz*d_2*r_23*r_31 + 2*Pz*d_3*r_21*r_32
            - 2*Pz*d_3*r_22*r_31 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            + 2*d_2*d_4*r_21 + d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) - 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            d_3**2*r_21 + d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) + 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + d_4**2*r_21
            + r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) - r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - 2*Px**2*r_11**2*r_23 - 4*Px**2*r_11*r_13*r_21 + 2*Px**2*r_12**2*r_23 -
            4*Px**2*r_12*r_13*r_22 - 2*Px**2*r_13**2*r_23 - 4*Px*Py*r_13*r_21**2 -
            4*Px*Py*r_13*r_22**2 - 4*Px*Py*r_13*r_23**2 - 4*Px*Pz*r_11*r_21*r_33 +
            4*Px*Pz*r_11*r_23*r_31 - 4*Px*Pz*r_12*r_22*r_33 + 4*Px*Pz*r_12*r_23*r_32
            - 4*Px*Pz*r_13*r_21*r_31 - 4*Px*Pz*r_13*r_22*r_32 - 4*Px*Pz*r_13*r_23*r_33
            - 4*Px*d_3*r_12*r_23 + 4*Px*d_3*r_13*r_22 + 4*Px*d_4*r_11*r_21 + 4*Px*d_4*r_12*r_22
            + 4*Px*d_4*r_13*r_23 - 2*Py**2*r_21**2*r_23 - 2*Py**2*r_22**2*r_23 - 2*Py**2*r_23**3
            - 4*Py*Pz*r_21**2*r_33 - 4*Py*Pz*r_22**2*r_33 - 4*Py*Pz*r_23**2*r_33 +
            4*Py*d_4*r_21**2 + 4*Py*d_4*r_22**2 + 4*Py*d_4*r_23**2 - 4*Pz**2*r_21*r_31*r_33
            - 4*Pz**2*r_22*r_32*r_33 + 2*Pz**2*r_23*r_31**2 + 2*Pz**2*r_23*r_32**2
            - 2*Pz**2*r_23*r_33**2 + 4*Pz*d_3*r_22*r_33 - 4*Pz*d_3*r_23*r_32 + 4*Pz*d_4*r_21*r_31
            + 4*Pz*d_4*r_22*r_32 + 4*Pz*d_4*r_23*r_33 + 2*d_2**2*r_23 + 2*d_2*r_23*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) - 4*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_3**2*r_23 - 4*d_3*d_4*r_22
            + 2*d_3*r_21*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2)) - 2*d_4**2*r_23
            + 2*r_23*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1
            + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_11*r_22
            - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - 8*Px*d_3*r_11*r_23 - 8*Px*d_3*r_13*r_21 - 8*Pz*d_3*r_21*r_33 + 8*Pz*d_3*r_23*r_31
            - 8*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 8*d_3*d_4*r_21 + 4*d_3*r_22*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 4*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32)
          - 2*Px**2*r_11**2*r_23 - 4*Px**2*r_11*r_13*r_21 + 2*Px**2*r_12**2*r_23 -
            4*Px**2*r_12*r_13*r_22 - 2*Px**2*r_13**2*r_23 - 4*Px*Py*r_13*r_21**2 -
            4*Px*Py*r_13*r_22**2 - 4*Px*Py*r_13*r_23**2 - 4*Px*Pz*r_11*r_21*r_33 +
            4*Px*Pz*r_11*r_23*r_31 - 4*Px*Pz*r_12*r_22*r_33 + 4*Px*Pz*r_12*r_23*r_32
            - 4*Px*Pz*r_13*r_21*r_31 - 4*Px*Pz*r_13*r_22*r_32 - 4*Px*Pz*r_13*r_23*r_33
            + 4*Px*d_3*r_12*r_23 - 4*Px*d_3*r_13*r_22 + 4*Px*d_4*r_11*r_21 + 4*Px*d_4*r_12*r_22
            + 4*Px*d_4*r_13*r_23 - 2*Py**2*r_21**2*r_23 - 2*Py**2*r_22**2*r_23 - 2*Py**2*r_23**3
            - 4*Py*Pz*r_21**2*r_33 - 4*Py*Pz*r_22**2*r_33 - 4*Py*Pz*r_23**2*r_33 +
            4*Py*d_4*r_21**2 + 4*Py*d_4*r_22**2 + 4*Py*d_4*r_23**2 - 4*Pz**2*r_21*r_31*r_33
            - 4*Pz**2*r_22*r_32*r_33 + 2*Pz**2*r_23*r_31**2 + 2*Pz**2*r_23*r_32**2
            - 2*Pz**2*r_23*r_33**2 - 4*Pz*d_3*r_22*r_33 + 4*Pz*d_3*r_23*r_32 + 4*Pz*d_4*r_21*r_31
            + 4*Pz*d_4*r_22*r_32 + 4*Pz*d_4*r_23*r_33 + 2*d_2**2*r_23 + 2*d_2*r_23*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) + 4*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_3**2*r_23 + 4*d_3*d_4*r_22
            - 2*d_3*r_21*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2)) - 2*d_4**2*r_23
            + 2*r_23*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1
            + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_11*r_22
            - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 - 2*Px*d_2*r_11*r_23
            + 2*Px*d_2*r_13*r_21 + 2*Px*d_3*r_11*r_22 - 2*Px*d_3*r_12*r_21 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31 - 2*Pz*d_3*r_21*r_32
            + 2*Pz*d_3*r_22*r_31 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            - 2*d_2*d_4*r_21 + d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) + 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            d_3**2*r_21 - d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) - 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + d_4**2*r_21
            + r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - 2*Px**2*r_11**2*r_22 - 4*Px**2*r_11*r_12*r_21 - 2*Px**2*r_12**2*r_22 -
            4*Px**2*r_12*r_13*r_23 + 2*Px**2*r_13**2*r_22 - 4*Px*Py*r_12*r_21**2 -
            4*Px*Py*r_12*r_22**2 - 4*Px*Py*r_12*r_23**2 - 4*Px*Pz*r_11*r_21*r_32 +
            4*Px*Pz*r_11*r_22*r_31 - 4*Px*Pz*r_12*r_21*r_31 - 4*Px*Pz*r_12*r_22*r_32
            - 4*Px*Pz*r_12*r_23*r_33 + 4*Px*Pz*r_13*r_22*r_33 - 4*Px*Pz*r_13*r_23*r_32
            - 4*Px*d_2*r_12*r_23 + 4*Px*d_2*r_13*r_22 + 4*Px*d_4*r_12*r_23 - 4*Px*d_4*r_13*r_22
            - 2*Py**2*r_21**2*r_22 - 2*Py**2*r_22**3 - 2*Py**2*r_22*r_23**2 - 4*Py*Pz*r_21**2*r_32
            - 4*Py*Pz*r_22**2*r_32 - 4*Py*Pz*r_23**2*r_32 - 4*Pz**2*r_21*r_31*r_32
            + 2*Pz**2*r_22*r_31**2 - 2*Pz**2*r_22*r_32**2 + 2*Pz**2*r_22*r_33**2 -
            4*Pz**2*r_23*r_32*r_33 + 4*Pz*d_2*r_22*r_33 - 4*Pz*d_2*r_23*r_32 - 4*Pz*d_4*r_22*r_33
            + 4*Pz*d_4*r_23*r_32 + 2*d_2**2*r_22 - 4*d_2*d_4*r_22 + 2*d_2*r_21*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) + 2*d_2*r_22*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + 2*d_3**2*r_22 + 4*d_3*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_4**2*r_22 - 2*r_21*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + 2*r_22*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 2*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - Px**2*r_11**2*r_21 + 2*Px**2*r_11*r_12*r_22 + 2*Px**2*r_11*r_13*r_23 -
            Px**2*r_12**2*r_21 - Px**2*r_13**2*r_21 + 2*Px*Py*r_11*r_21**2 + 2*Px*Py*r_11*r_22**2
            + 2*Px*Py*r_11*r_23**2 + 2*Px*Pz*r_11*r_21*r_31 + 2*Px*Pz*r_11*r_22*r_32
            + 2*Px*Pz*r_11*r_23*r_33 - 2*Px*Pz*r_12*r_21*r_32 + 2*Px*Pz*r_12*r_22*r_31
            - 2*Px*Pz*r_13*r_21*r_33 + 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_2*r_11*r_23
            - 2*Px*d_2*r_13*r_21 + 2*Px*d_3*r_11*r_22 - 2*Px*d_3*r_12*r_21 - 2*Px*d_4*r_11*r_23
            + 2*Px*d_4*r_13*r_21 + Py**2*r_21**3 + Py**2*r_21*r_22**2 + Py**2*r_21*r_23**2
            + 2*Py*Pz*r_21**2*r_31 + 2*Py*Pz*r_22**2*r_31 + 2*Py*Pz*r_23**2*r_31 +
            Pz**2*r_21*r_31**2 - Pz**2*r_21*r_32**2 - Pz**2*r_21*r_33**2 + 2*Pz**2*r_22*r_31*r_32
            + 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_2*r_21*r_33 + 2*Pz*d_2*r_23*r_31 - 2*Pz*d_3*r_21*r_32
            + 2*Pz*d_3*r_22*r_31 + 2*Pz*d_4*r_21*r_33 - 2*Pz*d_4*r_23*r_31 - d_2**2*r_21
            + 2*d_2*d_4*r_21 - d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) + 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            d_3**2*r_21 - d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) + 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - d_4**2*r_21
            - r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) - r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_2*r_12*r_23 - 2*Px*d_2*r_13*r_22 + 2*Px*d_3*r_11*r_21
            + 2*Px*d_3*r_12*r_22 + 2*Px*d_3*r_13*r_23 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22
            - Py**2*r_21**2*r_22 - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32
            - 2*Py*Pz*r_22**2*r_32 - 2*Py*Pz*r_23**2*r_32 + 2*Py*d_3*r_21**2 + 2*Py*d_3*r_22**2
            + 2*Py*d_3*r_23**2 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 - Pz**2*r_22*r_32**2
            + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_2*r_22*r_33 + 2*Pz*d_2*r_23*r_32
            + 2*Pz*d_3*r_21*r_31 + 2*Pz*d_3*r_22*r_32 + 2*Pz*d_3*r_23*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 + d_2**2*r_22 - 2*d_2*d_3*r_23 + 2*d_2*d_4*r_22 +
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) + d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) + 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - d_3**2*r_22 - 2*d_3*d_4*r_23 - d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) + 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + d_4**2*r_22 + r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            + (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) + (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - 2*Px**2*r_11**2*r_21 + 4*Px**2*r_11*r_12*r_22 + 4*Px**2*r_11*r_13*r_23
            - 2*Px**2*r_12**2*r_21 - 2*Px**2*r_13**2*r_21 + 4*Px*Py*r_11*r_21**2 +
            4*Px*Py*r_11*r_22**2 + 4*Px*Py*r_11*r_23**2 + 4*Px*Pz*r_11*r_21*r_31 +
            4*Px*Pz*r_11*r_22*r_32 + 4*Px*Pz*r_11*r_23*r_33 - 4*Px*Pz*r_12*r_21*r_32
            + 4*Px*Pz*r_12*r_22*r_31 - 4*Px*Pz*r_13*r_21*r_33 + 4*Px*Pz*r_13*r_23*r_31
            - 4*Px*d_2*r_11*r_23 + 4*Px*d_2*r_13*r_21 - 4*Px*d_4*r_11*r_23 + 4*Px*d_4*r_13*r_21
            + 2*Py**2*r_21**3 + 2*Py**2*r_21*r_22**2 + 2*Py**2*r_21*r_23**2 + 4*Py*Pz*r_21**2*r_31
            + 4*Py*Pz*r_22**2*r_31 + 4*Py*Pz*r_23**2*r_31 + 2*Pz**2*r_21*r_31**2 -
            2*Pz**2*r_21*r_32**2 - 2*Pz**2*r_21*r_33**2 + 4*Pz**2*r_22*r_31*r_32 +
            4*Pz**2*r_23*r_31*r_33 + 4*Pz*d_2*r_21*r_33 - 4*Pz*d_2*r_23*r_31 + 4*Pz*d_4*r_21*r_33
            - 4*Pz*d_4*r_23*r_31 - 2*d_2**2*r_21 - 4*d_2*d_4*r_21 - 2*d_2*r_21*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + 2*d_2*r_22*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) + 2*d_3**2*r_21 - 4*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_4**2*r_21 + 2*r_21*(2*R_l_inv_34*a_0*a_1
            + R_l_inv_74*(a_0**2 + a_1**2)) + 2*r_22*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 2*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - -Px**2*r_11**2*r_22 + 2*Px**2*r_11*r_12*r_21 + Px**2*r_12**2*r_22 + 2*Px**2*r_12*r_13*r_23
            - Px**2*r_13**2*r_22 + 2*Px*Py*r_12*r_21**2 + 2*Px*Py*r_12*r_22**2 + 2*Px*Py*r_12*r_23**2
            + 2*Px*Pz*r_11*r_21*r_32 - 2*Px*Pz*r_11*r_22*r_31 + 2*Px*Pz*r_12*r_21*r_31
            + 2*Px*Pz*r_12*r_22*r_32 + 2*Px*Pz*r_12*r_23*r_33 - 2*Px*Pz*r_13*r_22*r_33
            + 2*Px*Pz*r_13*r_23*r_32 - 2*Px*d_2*r_12*r_23 + 2*Px*d_2*r_13*r_22 + 2*Px*d_3*r_11*r_21
            + 2*Px*d_3*r_12*r_22 + 2*Px*d_3*r_13*r_23 - 2*Px*d_4*r_12*r_23 + 2*Px*d_4*r_13*r_22
            + Py**2*r_21**2*r_22 + Py**2*r_22**3 + Py**2*r_22*r_23**2 + 2*Py*Pz*r_21**2*r_32
            + 2*Py*Pz*r_22**2*r_32 + 2*Py*Pz*r_23**2*r_32 + 2*Py*d_3*r_21**2 + 2*Py*d_3*r_22**2
            + 2*Py*d_3*r_23**2 + 2*Pz**2*r_21*r_31*r_32 - Pz**2*r_22*r_31**2 + Pz**2*r_22*r_32**2
            - Pz**2*r_22*r_33**2 + 2*Pz**2*r_23*r_32*r_33 + 2*Pz*d_2*r_22*r_33 - 2*Pz*d_2*r_23*r_32
            + 2*Pz*d_3*r_21*r_31 + 2*Pz*d_3*r_22*r_32 + 2*Pz*d_3*r_23*r_33 + 2*Pz*d_4*r_22*r_33
            - 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 - 2*d_2*d_3*r_23 - 2*d_2*d_4*r_22 -
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) - d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) + 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + d_3**2*r_22 - 2*d_3*d_4*r_23 - d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) - 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - d_4**2*r_22 - r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            - (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) - (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - -4*Px*d_2*r_11*r_22 + 4*Px*d_2*r_12*r_21 + 4*Pz*d_2*r_21*r_32 - 4*Pz*d_2*r_22*r_31
            - 4*d_2*d_3*r_21 - 2*d_2*r_23*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) + 4*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*d_3*r_21*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) - 2*r_23*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + 2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 +
            a_1**2))*(Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - -8*d_2*d_3*r_22 + 8*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 4*d_3*r_22*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 4*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32)
          - -4*Px*d_2*r_11*r_22 + 4*Px*d_2*r_12*r_21 + 4*Pz*d_2*r_21*r_32 - 4*Pz*d_2*r_22*r_31
            + 4*d_2*d_3*r_21 - 2*d_2*r_23*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) - 4*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*d_3*r_21*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) - 2*r_23*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - 2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 +
            a_1**2))*(Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 - 2*Px*d_2*r_12*r_23 + 2*Px*d_2*r_13*r_22 + 2*Px*d_3*r_11*r_21
            + 2*Px*d_3*r_12*r_22 + 2*Px*d_3*r_13*r_23 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22
            - Py**2*r_21**2*r_22 - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32
            - 2*Py*Pz*r_22**2*r_32 - 2*Py*Pz*r_23**2*r_32 + 2*Py*d_3*r_21**2 + 2*Py*d_3*r_22**2
            + 2*Py*d_3*r_23**2 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 - Pz**2*r_22*r_32**2
            + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 + 2*Pz*d_2*r_22*r_33 - 2*Pz*d_2*r_23*r_32
            + 2*Pz*d_3*r_21*r_31 + 2*Pz*d_3*r_22*r_32 + 2*Pz*d_3*r_23*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 + d_2**2*r_22 + 2*d_2*d_3*r_23 - 2*d_2*d_4*r_22 -
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) + d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) - 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - d_3**2*r_22 - 2*d_3*d_4*r_23 + d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) + 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + d_4**2*r_22 - r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            - (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) - (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - 2*Px**2*r_11**2*r_21 + 4*Px**2*r_11*r_12*r_22 + 4*Px**2*r_11*r_13*r_23
            - 2*Px**2*r_12**2*r_21 - 2*Px**2*r_13**2*r_21 + 4*Px*Py*r_11*r_21**2 +
            4*Px*Py*r_11*r_22**2 + 4*Px*Py*r_11*r_23**2 + 4*Px*Pz*r_11*r_21*r_31 +
            4*Px*Pz*r_11*r_22*r_32 + 4*Px*Pz*r_11*r_23*r_33 - 4*Px*Pz*r_12*r_21*r_32
            + 4*Px*Pz*r_12*r_22*r_31 - 4*Px*Pz*r_13*r_21*r_33 + 4*Px*Pz*r_13*r_23*r_31
            + 4*Px*d_2*r_11*r_23 - 4*Px*d_2*r_13*r_21 - 4*Px*d_4*r_11*r_23 + 4*Px*d_4*r_13*r_21
            + 2*Py**2*r_21**3 + 2*Py**2*r_21*r_22**2 + 2*Py**2*r_21*r_23**2 + 4*Py*Pz*r_21**2*r_31
            + 4*Py*Pz*r_22**2*r_31 + 4*Py*Pz*r_23**2*r_31 + 2*Pz**2*r_21*r_31**2 -
            2*Pz**2*r_21*r_32**2 - 2*Pz**2*r_21*r_33**2 + 4*Pz**2*r_22*r_31*r_32 +
            4*Pz**2*r_23*r_31*r_33 - 4*Pz*d_2*r_21*r_33 + 4*Pz*d_2*r_23*r_31 + 4*Pz*d_4*r_21*r_33
            - 4*Pz*d_4*r_23*r_31 - 2*d_2**2*r_21 + 4*d_2*d_4*r_21 - 2*d_2*r_21*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - 2*d_2*r_22*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) + 2*d_3**2*r_21 - 4*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_4**2*r_21 + 2*r_21*(2*R_l_inv_34*a_0*a_1
            + R_l_inv_74*(a_0**2 + a_1**2)) - 2*r_22*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 2*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - -Px**2*r_11**2*r_22 + 2*Px**2*r_11*r_12*r_21 + Px**2*r_12**2*r_22 + 2*Px**2*r_12*r_13*r_23
            - Px**2*r_13**2*r_22 + 2*Px*Py*r_12*r_21**2 + 2*Px*Py*r_12*r_22**2 + 2*Px*Py*r_12*r_23**2
            + 2*Px*Pz*r_11*r_21*r_32 - 2*Px*Pz*r_11*r_22*r_31 + 2*Px*Pz*r_12*r_21*r_31
            + 2*Px*Pz*r_12*r_22*r_32 + 2*Px*Pz*r_12*r_23*r_33 - 2*Px*Pz*r_13*r_22*r_33
            + 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_2*r_12*r_23 - 2*Px*d_2*r_13*r_22 + 2*Px*d_3*r_11*r_21
            + 2*Px*d_3*r_12*r_22 + 2*Px*d_3*r_13*r_23 - 2*Px*d_4*r_12*r_23 + 2*Px*d_4*r_13*r_22
            + Py**2*r_21**2*r_22 + Py**2*r_22**3 + Py**2*r_22*r_23**2 + 2*Py*Pz*r_21**2*r_32
            + 2*Py*Pz*r_22**2*r_32 + 2*Py*Pz*r_23**2*r_32 + 2*Py*d_3*r_21**2 + 2*Py*d_3*r_22**2
            + 2*Py*d_3*r_23**2 + 2*Pz**2*r_21*r_31*r_32 - Pz**2*r_22*r_31**2 + Pz**2*r_22*r_32**2
            - Pz**2*r_22*r_33**2 + 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_2*r_22*r_33 + 2*Pz*d_2*r_23*r_32
            + 2*Pz*d_3*r_21*r_31 + 2*Pz*d_3*r_22*r_32 + 2*Pz*d_3*r_23*r_33 + 2*Pz*d_4*r_22*r_33
            - 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 + 2*d_2*d_3*r_23 + 2*d_2*d_4*r_22 +
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) - d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) - 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + d_3**2*r_22 - 2*d_3*d_4*r_23 + d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) - 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - d_4**2*r_22 + r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            + (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) + (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_2*r_11*r_21 - 2*Px*d_2*r_12*r_22 - 2*Px*d_2*r_13*r_23
            + 2*Px*d_3*r_12*r_23 - 2*Px*d_3*r_13*r_22 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22
            - 2*Px*d_4*r_13*r_23 + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3
            + 2*Py*Pz*r_21**2*r_33 + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 -
            2*Py*d_2*r_21**2 - 2*Py*d_2*r_22**2 - 2*Py*d_2*r_23**2 - 2*Py*d_4*r_21**2
            - 2*Py*d_4*r_22**2 - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33
            - Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 - 2*Pz*d_2*r_21*r_31
            - 2*Pz*d_2*r_22*r_32 - 2*Pz*d_2*r_23*r_33 - 2*Pz*d_3*r_22*r_33 + 2*Pz*d_3*r_23*r_32
            - 2*Pz*d_4*r_21*r_31 - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 + d_2**2*r_23
            + 2*d_2*d_3*r_22 + 2*d_2*d_4*r_23 - d_3**2*r_23 + 2*d_3*d_4*r_22 + d_4**2*r_23
          - 4*d_3*(-Px*r_11*r_23 + Px*r_13*r_21 + Pz*r_21*r_33 - Pz*r_23*r_31 - d_2*r_21
            - d_4*r_21)
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_2*r_11*r_21 - 2*Px*d_2*r_12*r_22 - 2*Px*d_2*r_13*r_23
            - 2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22
            - 2*Px*d_4*r_13*r_23 + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3
            + 2*Py*Pz*r_21**2*r_33 + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 -
            2*Py*d_2*r_21**2 - 2*Py*d_2*r_22**2 - 2*Py*d_2*r_23**2 - 2*Py*d_4*r_21**2
            - 2*Py*d_4*r_22**2 - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33
            - Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 - 2*Pz*d_2*r_21*r_31
            - 2*Pz*d_2*r_22*r_32 - 2*Pz*d_2*r_23*r_33 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            - 2*Pz*d_4*r_21*r_31 - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 + d_2**2*r_23
            - 2*d_2*d_3*r_22 + 2*d_2*d_4*r_23 - d_3**2*r_23 - 2*d_3*d_4*r_22 + d_4**2*r_23
          - 2*Px**2*r_11**2*r_21 + 4*Px**2*r_11*r_12*r_22 + 4*Px**2*r_11*r_13*r_23
            - 2*Px**2*r_12**2*r_21 - 2*Px**2*r_13**2*r_21 + 4*Px*Py*r_11*r_21**2 +
            4*Px*Py*r_11*r_22**2 + 4*Px*Py*r_11*r_23**2 + 4*Px*Pz*r_11*r_21*r_31 +
            4*Px*Pz*r_11*r_22*r_32 + 4*Px*Pz*r_11*r_23*r_33 - 4*Px*Pz*r_12*r_21*r_32
            + 4*Px*Pz*r_12*r_22*r_31 - 4*Px*Pz*r_13*r_21*r_33 + 4*Px*Pz*r_13*r_23*r_31
            - 4*Px*d_3*r_11*r_22 + 4*Px*d_3*r_12*r_21 - 4*Px*d_4*r_11*r_23 + 4*Px*d_4*r_13*r_21
            + 2*Py**2*r_21**3 + 2*Py**2*r_21*r_22**2 + 2*Py**2*r_21*r_23**2 + 4*Py*Pz*r_21**2*r_31
            + 4*Py*Pz*r_22**2*r_31 + 4*Py*Pz*r_23**2*r_31 + 2*Pz**2*r_21*r_31**2 -
            2*Pz**2*r_21*r_32**2 - 2*Pz**2*r_21*r_33**2 + 4*Pz**2*r_22*r_31*r_32 +
            4*Pz**2*r_23*r_31*r_33 + 4*Pz*d_3*r_21*r_32 - 4*Pz*d_3*r_22*r_31 + 4*Pz*d_4*r_21*r_33
            - 4*Pz*d_4*r_23*r_31 + 2*d_2**2*r_21 - 2*d_3**2*r_21 - 2*d_4**2*r_21
          - -4*Px**2*r_11**2*r_22 + 8*Px**2*r_11*r_12*r_21 + 4*Px**2*r_12**2*r_22
            + 8*Px**2*r_12*r_13*r_23 - 4*Px**2*r_13**2*r_22 + 8*Px*Py*r_12*r_21**2
            + 8*Px*Py*r_12*r_22**2 + 8*Px*Py*r_12*r_23**2 + 8*Px*Pz*r_11*r_21*r_32
            - 8*Px*Pz*r_11*r_22*r_31 + 8*Px*Pz*r_12*r_21*r_31 + 8*Px*Pz*r_12*r_22*r_32
            + 8*Px*Pz*r_12*r_23*r_33 - 8*Px*Pz*r_13*r_22*r_33 + 8*Px*Pz*r_13*r_23*r_32
            - 8*Px*d_4*r_12*r_23 + 8*Px*d_4*r_13*r_22 + 4*Py**2*r_21**2*r_22 + 4*Py**2*r_22**3
            + 4*Py**2*r_22*r_23**2 + 8*Py*Pz*r_21**2*r_32 + 8*Py*Pz*r_22**2*r_32 +
            8*Py*Pz*r_23**2*r_32 + 8*Pz**2*r_21*r_31*r_32 - 4*Pz**2*r_22*r_31**2 +
            4*Pz**2*r_22*r_32**2 - 4*Pz**2*r_22*r_33**2 + 8*Pz**2*r_23*r_32*r_33 +
            8*Pz*d_4*r_22*r_33 - 8*Pz*d_4*r_23*r_32 + 4*d_2**2*r_22 - 4*d_3**2*r_22
            - 4*d_4**2*r_22
          - -2*Px**2*r_11**2*r_21 - 4*Px**2*r_11*r_12*r_22 - 4*Px**2*r_11*r_13*r_23
            + 2*Px**2*r_12**2*r_21 + 2*Px**2*r_13**2*r_21 - 4*Px*Py*r_11*r_21**2 -
            4*Px*Py*r_11*r_22**2 - 4*Px*Py*r_11*r_23**2 - 4*Px*Pz*r_11*r_21*r_31 -
            4*Px*Pz*r_11*r_22*r_32 - 4*Px*Pz*r_11*r_23*r_33 + 4*Px*Pz*r_12*r_21*r_32
            - 4*Px*Pz*r_12*r_22*r_31 + 4*Px*Pz*r_13*r_21*r_33 - 4*Px*Pz*r_13*r_23*r_31
            - 4*Px*d_3*r_11*r_22 + 4*Px*d_3*r_12*r_21 + 4*Px*d_4*r_11*r_23 - 4*Px*d_4*r_13*r_21
            - 2*Py**2*r_21**3 - 2*Py**2*r_21*r_22**2 - 2*Py**2*r_21*r_23**2 - 4*Py*Pz*r_21**2*r_31
            - 4*Py*Pz*r_22**2*r_31 - 4*Py*Pz*r_23**2*r_31 - 2*Pz**2*r_21*r_31**2 +
            2*Pz**2*r_21*r_32**2 + 2*Pz**2*r_21*r_33**2 - 4*Pz**2*r_22*r_31*r_32 -
            4*Pz**2*r_23*r_31*r_33 + 4*Pz*d_3*r_21*r_32 - 4*Pz*d_3*r_22*r_31 - 4*Pz*d_4*r_21*r_33
            + 4*Pz*d_4*r_23*r_31 - 2*d_2**2*r_21 + 2*d_3**2*r_21 + 2*d_4**2*r_21
          - Px**2*r_11**2*r_23 - 2*Px**2*r_11*r_13*r_21 + Px**2*r_12**2*r_23 - 2*Px**2*r_12*r_13*r_22
            - Px**2*r_13**2*r_23 - 2*Px*Py*r_13*r_21**2 - 2*Px*Py*r_13*r_22**2 - 2*Px*Py*r_13*r_23**2
            - 2*Px*Pz*r_11*r_21*r_33 + 2*Px*Pz*r_11*r_23*r_31 - 2*Px*Pz*r_12*r_22*r_33
            + 2*Px*Pz*r_12*r_23*r_32 - 2*Px*Pz*r_13*r_21*r_31 - 2*Px*Pz*r_13*r_22*r_32
            - 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_2*r_11*r_21 - 2*Px*d_2*r_12*r_22 - 2*Px*d_2*r_13*r_23
            - 2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 + 2*Px*d_4*r_11*r_21 + 2*Px*d_4*r_12*r_22
            + 2*Px*d_4*r_13*r_23 - Py**2*r_21**2*r_23 - Py**2*r_22**2*r_23 - Py**2*r_23**3
            - 2*Py*Pz*r_21**2*r_33 - 2*Py*Pz*r_22**2*r_33 - 2*Py*Pz*r_23**2*r_33 -
            2*Py*d_2*r_21**2 - 2*Py*d_2*r_22**2 - 2*Py*d_2*r_23**2 + 2*Py*d_4*r_21**2
            + 2*Py*d_4*r_22**2 + 2*Py*d_4*r_23**2 - 2*Pz**2*r_21*r_31*r_33 - 2*Pz**2*r_22*r_32*r_33
            + Pz**2*r_23*r_31**2 + Pz**2*r_23*r_32**2 - Pz**2*r_23*r_33**2 - 2*Pz*d_2*r_21*r_31
            - 2*Pz*d_2*r_22*r_32 - 2*Pz*d_2*r_23*r_33 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            + 2*Pz*d_4*r_21*r_31 + 2*Pz*d_4*r_22*r_32 + 2*Pz*d_4*r_23*r_33 - d_2**2*r_23
            + 2*d_2*d_3*r_22 + 2*d_2*d_4*r_23 + d_3**2*r_23 - 2*d_3*d_4*r_22 - d_4**2*r_23
          - 4*d_3*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31 - d_2*r_21
            + d_4*r_21)
          - Px**2*r_11**2*r_23 - 2*Px**2*r_11*r_13*r_21 + Px**2*r_12**2*r_23 - 2*Px**2*r_12*r_13*r_22
            - Px**2*r_13**2*r_23 - 2*Px*Py*r_13*r_21**2 - 2*Px*Py*r_13*r_22**2 - 2*Px*Py*r_13*r_23**2
            - 2*Px*Pz*r_11*r_21*r_33 + 2*Px*Pz*r_11*r_23*r_31 - 2*Px*Pz*r_12*r_22*r_33
            + 2*Px*Pz*r_12*r_23*r_32 - 2*Px*Pz*r_13*r_21*r_31 - 2*Px*Pz*r_13*r_22*r_32
            - 2*Px*Pz*r_13*r_23*r_33 - 2*Px*d_2*r_11*r_21 - 2*Px*d_2*r_12*r_22 - 2*Px*d_2*r_13*r_23
            + 2*Px*d_3*r_12*r_23 - 2*Px*d_3*r_13*r_22 + 2*Px*d_4*r_11*r_21 + 2*Px*d_4*r_12*r_22
            + 2*Px*d_4*r_13*r_23 - Py**2*r_21**2*r_23 - Py**2*r_22**2*r_23 - Py**2*r_23**3
            - 2*Py*Pz*r_21**2*r_33 - 2*Py*Pz*r_22**2*r_33 - 2*Py*Pz*r_23**2*r_33 -
            2*Py*d_2*r_21**2 - 2*Py*d_2*r_22**2 - 2*Py*d_2*r_23**2 + 2*Py*d_4*r_21**2
            + 2*Py*d_4*r_22**2 + 2*Py*d_4*r_23**2 - 2*Pz**2*r_21*r_31*r_33 - 2*Pz**2*r_22*r_32*r_33
            + Pz**2*r_23*r_31**2 + Pz**2*r_23*r_32**2 - Pz**2*r_23*r_33**2 - 2*Pz*d_2*r_21*r_31
            - 2*Pz*d_2*r_22*r_32 - 2*Pz*d_2*r_23*r_33 - 2*Pz*d_3*r_22*r_33 + 2*Pz*d_3*r_23*r_32
            + 2*Pz*d_4*r_21*r_31 + 2*Pz*d_4*r_22*r_32 + 2*Pz*d_4*r_23*r_33 - d_2**2*r_23
            - 2*d_2*d_3*r_22 + 2*d_2*d_4*r_23 + d_3**2*r_23 + 2*d_3*d_4*r_22 - d_4**2*r_23
          rows: 6
        B:
          cols: 9
          flatten_data:
          - -2*r_13
          - '0'
          - -2*r_13
          - -4*r_11
          - -8*r_12
          - 4*r_11
          - 2*r_13
          - '0'
          - 2*r_13
          - 2*Px*r_11**2 + 2*Px*r_12**2 + 2*Px*r_13**2 + 2*Py*r_11*r_21 + 2*Py*r_12*r_22
            + 2*Py*r_13*r_23 + 2*Pz*r_11*r_31 + 2*Pz*r_12*r_32 + 2*Pz*r_13*r_33 -
            2*d_2*r_13 - 2*d_3*r_12 - 2*d_4*r_13
          - 4*d_3*r_11
          - 2*Px*r_11**2 + 2*Px*r_12**2 + 2*Px*r_13**2 + 2*Py*r_11*r_21 + 2*Py*r_12*r_22
            + 2*Py*r_13*r_23 + 2*Pz*r_11*r_31 + 2*Pz*r_12*r_32 + 2*Pz*r_13*r_33 -
            2*d_2*r_13 + 2*d_3*r_12 - 2*d_4*r_13
          - -4*d_2*r_11
          - -8*d_2*r_12
          - 4*d_2*r_11
          - 2*Px*r_11**2 + 2*Px*r_12**2 + 2*Px*r_13**2 + 2*Py*r_11*r_21 + 2*Py*r_12*r_22
            + 2*Py*r_13*r_23 + 2*Pz*r_11*r_31 + 2*Pz*r_12*r_32 + 2*Pz*r_13*r_33 +
            2*d_2*r_13 - 2*d_3*r_12 - 2*d_4*r_13
          - 4*d_3*r_11
          - 2*Px*r_11**2 + 2*Px*r_12**2 + 2*Px*r_13**2 + 2*Py*r_11*r_21 + 2*Py*r_12*r_22
            + 2*Py*r_13*r_23 + 2*Pz*r_11*r_31 + 2*Pz*r_12*r_32 + 2*Pz*r_13*r_33 +
            2*d_2*r_13 + 2*d_3*r_12 - 2*d_4*r_13
          - 2*Py*r_11*r_22 - 2*Py*r_12*r_21 + 2*Pz*r_11*r_32 - 2*Pz*r_12*r_31 - 2*R_l_inv_53*a_0*r_11
            + 2*R_l_inv_54*a_0*r_12 - 2*R_l_inv_56*a_0*d_2*r_12 + 2*R_l_inv_56*a_0*d_3*r_13
            - 2*R_l_inv_56*a_0*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32
            + d_4*r_12) - 2*R_l_inv_57*a_0*d_2*r_11 - 2*R_l_inv_57*a_0*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) - 2*d_3*r_11
          - -4*R_l_inv_53*a_0*r_12 - 4*R_l_inv_54*a_0*r_11 + 4*R_l_inv_56*a_0*d_2*r_11
            + 4*R_l_inv_56*a_0*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31
            + d_4*r_11) - 4*R_l_inv_57*a_0*d_2*r_12 - 4*R_l_inv_57*a_0*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) - 4*d_3*r_12
          - 2*Py*r_11*r_22 - 2*Py*r_12*r_21 + 2*Pz*r_11*r_32 - 2*Pz*r_12*r_31 + 2*R_l_inv_53*a_0*r_11
            - 2*R_l_inv_54*a_0*r_12 + 2*R_l_inv_56*a_0*d_2*r_12 + 2*R_l_inv_56*a_0*d_3*r_13
            + 2*R_l_inv_56*a_0*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32
            + d_4*r_12) + 2*R_l_inv_57*a_0*d_2*r_11 + 2*R_l_inv_57*a_0*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) + 2*d_3*r_11
          - 4*Py*r_12*r_23 - 4*Py*r_13*r_22 + 4*Pz*r_12*r_33 - 4*Pz*r_13*r_32 + 4*R_l_inv_53*a_0*r_13
            + 4*R_l_inv_56*a_0*d_3*r_11 - 4*R_l_inv_56*a_0*(Py*r_11*r_22 - Py*r_12*r_21
            + Pz*r_11*r_32 - Pz*r_12*r_31) + 4*R_l_inv_57*a_0*d_2*r_13 + 4*d_3*r_13
            - 4*d_4*r_12
          - -8*Py*r_11*r_23 + 8*Py*r_13*r_21 - 8*Pz*r_11*r_33 + 8*Pz*r_13*r_31 + 8*R_l_inv_56*a_0*d_3*r_12
            + 8*d_4*r_11
          - -4*Py*r_12*r_23 + 4*Py*r_13*r_22 - 4*Pz*r_12*r_33 + 4*Pz*r_13*r_32 + 4*R_l_inv_53*a_0*r_13
            - 4*R_l_inv_56*a_0*d_3*r_11 - 4*R_l_inv_56*a_0*(Py*r_11*r_22 - Py*r_12*r_21
            + Pz*r_11*r_32 - Pz*r_12*r_31) + 4*R_l_inv_57*a_0*d_2*r_13 + 4*d_3*r_13
            + 4*d_4*r_12
          - -2*Py*r_11*r_22 + 2*Py*r_12*r_21 - 2*Pz*r_11*r_32 + 2*Pz*r_12*r_31 + 2*R_l_inv_53*a_0*r_11
            + 2*R_l_inv_54*a_0*r_12 - 2*R_l_inv_56*a_0*d_2*r_12 - 2*R_l_inv_56*a_0*d_3*r_13
            + 2*R_l_inv_56*a_0*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32
            + d_4*r_12) + 2*R_l_inv_57*a_0*d_2*r_11 - 2*R_l_inv_57*a_0*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) + 2*d_3*r_11
          - 4*R_l_inv_53*a_0*r_12 - 4*R_l_inv_54*a_0*r_11 + 4*R_l_inv_56*a_0*d_2*r_11
            - 4*R_l_inv_56*a_0*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31
            + d_4*r_11) + 4*R_l_inv_57*a_0*d_2*r_12 - 4*R_l_inv_57*a_0*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) + 4*d_3*r_12
          - -2*Py*r_11*r_22 + 2*Py*r_12*r_21 - 2*Pz*r_11*r_32 + 2*Pz*r_12*r_31 - 2*R_l_inv_53*a_0*r_11
            - 2*R_l_inv_54*a_0*r_12 + 2*R_l_inv_56*a_0*d_2*r_12 - 2*R_l_inv_56*a_0*d_3*r_13
            - 2*R_l_inv_56*a_0*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32
            + d_4*r_12) - 2*R_l_inv_57*a_0*d_2*r_11 + 2*R_l_inv_57*a_0*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) - 2*d_3*r_11
          - 2*Px**2*r_11**3 + 2*Px**2*r_11*r_12**2 + 2*Px**2*r_11*r_13**2 + 4*Px*Py*r_11**2*r_21
            + 4*Px*Py*r_12**2*r_21 + 4*Px*Py*r_13**2*r_21 + 4*Px*Pz*r_11**2*r_31 +
            4*Px*Pz*r_12**2*r_31 + 4*Px*Pz*r_13**2*r_31 + 2*Py**2*r_11*r_21**2 - 2*Py**2*r_11*r_22**2
            - 2*Py**2*r_11*r_23**2 + 4*Py**2*r_12*r_21*r_22 + 4*Py**2*r_13*r_21*r_23
            + 4*Py*Pz*r_11*r_21*r_31 - 4*Py*Pz*r_11*r_22*r_32 - 4*Py*Pz*r_11*r_23*r_33
            + 4*Py*Pz*r_12*r_21*r_32 + 4*Py*Pz*r_12*r_22*r_31 + 4*Py*Pz*r_13*r_21*r_33
            + 4*Py*Pz*r_13*r_23*r_31 + 4*Py*d_2*r_11*r_23 - 4*Py*d_2*r_13*r_21 + 4*Py*d_3*r_11*r_22
            - 4*Py*d_3*r_12*r_21 + 4*Py*d_4*r_11*r_23 - 4*Py*d_4*r_13*r_21 + 2*Pz**2*r_11*r_31**2
            - 2*Pz**2*r_11*r_32**2 - 2*Pz**2*r_11*r_33**2 + 4*Pz**2*r_12*r_31*r_32
            + 4*Pz**2*r_13*r_31*r_33 + 4*Pz*d_2*r_11*r_33 - 4*Pz*d_2*r_13*r_31 + 4*Pz*d_3*r_11*r_32
            - 4*Pz*d_3*r_12*r_31 + 4*Pz*d_4*r_11*r_33 - 4*Pz*d_4*r_13*r_31 - 2*d_2**2*r_11
            - 4*d_2*d_4*r_11 - 2*d_2*r_11*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - 2*d_2*r_12*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - 2*d_3**2*r_11 + 2*d_3*r_13*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2)) - 2*d_4**2*r_11 - 2*r_11*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) + 2*r_12*(2*R_l_inv_24*a_0*a_1 + R_l_inv_64*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) - 2*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - 4*Px**2*r_11**2*r_12 + 4*Px**2*r_12**3 + 4*Px**2*r_12*r_13**2 + 8*Px*Py*r_11**2*r_22
            + 8*Px*Py*r_12**2*r_22 + 8*Px*Py*r_13**2*r_22 + 8*Px*Pz*r_11**2*r_32 +
            8*Px*Pz*r_12**2*r_32 + 8*Px*Pz*r_13**2*r_32 + 8*Py**2*r_11*r_21*r_22 -
            4*Py**2*r_12*r_21**2 + 4*Py**2*r_12*r_22**2 - 4*Py**2*r_12*r_23**2 + 8*Py**2*r_13*r_22*r_23
            + 8*Py*Pz*r_11*r_21*r_32 + 8*Py*Pz*r_11*r_22*r_31 - 8*Py*Pz*r_12*r_21*r_31
            + 8*Py*Pz*r_12*r_22*r_32 - 8*Py*Pz*r_12*r_23*r_33 + 8*Py*Pz*r_13*r_22*r_33
            + 8*Py*Pz*r_13*r_23*r_32 + 8*Py*d_2*r_12*r_23 - 8*Py*d_2*r_13*r_22 + 8*Py*d_4*r_12*r_23
            - 8*Py*d_4*r_13*r_22 + 8*Pz**2*r_11*r_31*r_32 - 4*Pz**2*r_12*r_31**2 +
            4*Pz**2*r_12*r_32**2 - 4*Pz**2*r_12*r_33**2 + 8*Pz**2*r_13*r_32*r_33 +
            8*Pz*d_2*r_12*r_33 - 8*Pz*d_2*r_13*r_32 + 8*Pz*d_4*r_12*r_33 - 8*Pz*d_4*r_13*r_32
            - 4*d_2**2*r_12 - 8*d_2*d_4*r_12 + 4*d_2*r_11*(2*R_l_inv_26*a_0*a_1 +
            R_l_inv_66*(a_0**2 + a_1**2)) - 4*d_2*r_12*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - 4*d_3**2*r_12 - 4*d_4**2*r_12 - 4*r_11*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - 4*r_12*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) + 4*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) - 4*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33
            + Pz*r_13*r_32 + d_4*r_12)
          - -2*Px**2*r_11**3 - 2*Px**2*r_11*r_12**2 - 2*Px**2*r_11*r_13**2 - 4*Px*Py*r_11**2*r_21
            - 4*Px*Py*r_12**2*r_21 - 4*Px*Py*r_13**2*r_21 - 4*Px*Pz*r_11**2*r_31 -
            4*Px*Pz*r_12**2*r_31 - 4*Px*Pz*r_13**2*r_31 - 2*Py**2*r_11*r_21**2 + 2*Py**2*r_11*r_22**2
            + 2*Py**2*r_11*r_23**2 - 4*Py**2*r_12*r_21*r_22 - 4*Py**2*r_13*r_21*r_23
            - 4*Py*Pz*r_11*r_21*r_31 + 4*Py*Pz*r_11*r_22*r_32 + 4*Py*Pz*r_11*r_23*r_33
            - 4*Py*Pz*r_12*r_21*r_32 - 4*Py*Pz*r_12*r_22*r_31 - 4*Py*Pz*r_13*r_21*r_33
            - 4*Py*Pz*r_13*r_23*r_31 - 4*Py*d_2*r_11*r_23 + 4*Py*d_2*r_13*r_21 + 4*Py*d_3*r_11*r_22
            - 4*Py*d_3*r_12*r_21 - 4*Py*d_4*r_11*r_23 + 4*Py*d_4*r_13*r_21 - 2*Pz**2*r_11*r_31**2
            + 2*Pz**2*r_11*r_32**2 + 2*Pz**2*r_11*r_33**2 - 4*Pz**2*r_12*r_31*r_32
            - 4*Pz**2*r_13*r_31*r_33 - 4*Pz*d_2*r_11*r_33 + 4*Pz*d_2*r_13*r_31 + 4*Pz*d_3*r_11*r_32
            - 4*Pz*d_3*r_12*r_31 - 4*Pz*d_4*r_11*r_33 + 4*Pz*d_4*r_13*r_31 + 2*d_2**2*r_11
            + 4*d_2*d_4*r_11 + 2*d_2*r_11*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + 2*d_2*r_12*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + 2*d_3**2*r_11 + 2*d_3*r_13*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2)) + 2*d_4**2*r_11 + 2*r_11*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) - 2*r_12*(2*R_l_inv_24*a_0*a_1 + R_l_inv_64*(a_0**2 + a_1**2))
            + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) + 2*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - -4*Px**2*r_11**2*r_13 - 4*Px**2*r_12**2*r_13 - 4*Px**2*r_13**3 - 8*Px*Py*r_11**2*r_23
            - 8*Px*Py*r_12**2*r_23 - 8*Px*Py*r_13**2*r_23 - 8*Px*Pz*r_11**2*r_33 -
            8*Px*Pz*r_12**2*r_33 - 8*Px*Pz*r_13**2*r_33 + 8*Px*d_4*r_11**2 + 8*Px*d_4*r_12**2
            + 8*Px*d_4*r_13**2 - 8*Py**2*r_11*r_21*r_23 - 8*Py**2*r_12*r_22*r_23 +
            4*Py**2*r_13*r_21**2 + 4*Py**2*r_13*r_22**2 - 4*Py**2*r_13*r_23**2 - 8*Py*Pz*r_11*r_21*r_33
            - 8*Py*Pz*r_11*r_23*r_31 - 8*Py*Pz*r_12*r_22*r_33 - 8*Py*Pz*r_12*r_23*r_32
            + 8*Py*Pz*r_13*r_21*r_31 + 8*Py*Pz*r_13*r_22*r_32 - 8*Py*Pz*r_13*r_23*r_33
            + 8*Py*d_3*r_12*r_23 - 8*Py*d_3*r_13*r_22 + 8*Py*d_4*r_11*r_21 + 8*Py*d_4*r_12*r_22
            + 8*Py*d_4*r_13*r_23 - 8*Pz**2*r_11*r_31*r_33 - 8*Pz**2*r_12*r_32*r_33
            + 4*Pz**2*r_13*r_31**2 + 4*Pz**2*r_13*r_32**2 - 4*Pz**2*r_13*r_33**2 +
            8*Pz*d_3*r_12*r_33 - 8*Pz*d_3*r_13*r_32 + 8*Pz*d_4*r_11*r_31 + 8*Pz*d_4*r_12*r_32
            + 8*Pz*d_4*r_13*r_33 + 4*d_2**2*r_13 + 4*d_2*r_13*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) + 4*d_3**2*r_13 - 8*d_3*d_4*r_12 + 4*d_3*r_11*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 4*d_4**2*r_13 + 4*r_13*(2*R_l_inv_23*a_0*a_1
            + R_l_inv_63*(a_0**2 + a_1**2)) - 4*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Py*r_11*r_22 - Py*r_12*r_21 + Pz*r_11*r_32 - Pz*r_12*r_31)
          - 8*d_3*(-2*Py*r_11*r_23 + 2*Py*r_13*r_21 - 2*Pz*r_11*r_33 + 2*Pz*r_13*r_31
            + 2*d_4*r_11 + r_12*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2)))
          - -4*Px**2*r_11**2*r_13 - 4*Px**2*r_12**2*r_13 - 4*Px**2*r_13**3 - 8*Px*Py*r_11**2*r_23
            - 8*Px*Py*r_12**2*r_23 - 8*Px*Py*r_13**2*r_23 - 8*Px*Pz*r_11**2*r_33 -
            8*Px*Pz*r_12**2*r_33 - 8*Px*Pz*r_13**2*r_33 + 8*Px*d_4*r_11**2 + 8*Px*d_4*r_12**2
            + 8*Px*d_4*r_13**2 - 8*Py**2*r_11*r_21*r_23 - 8*Py**2*r_12*r_22*r_23 +
            4*Py**2*r_13*r_21**2 + 4*Py**2*r_13*r_22**2 - 4*Py**2*r_13*r_23**2 - 8*Py*Pz*r_11*r_21*r_33
            - 8*Py*Pz*r_11*r_23*r_31 - 8*Py*Pz*r_12*r_22*r_33 - 8*Py*Pz*r_12*r_23*r_32
            + 8*Py*Pz*r_13*r_21*r_31 + 8*Py*Pz*r_13*r_22*r_32 - 8*Py*Pz*r_13*r_23*r_33
            - 8*Py*d_3*r_12*r_23 + 8*Py*d_3*r_13*r_22 + 8*Py*d_4*r_11*r_21 + 8*Py*d_4*r_12*r_22
            + 8*Py*d_4*r_13*r_23 - 8*Pz**2*r_11*r_31*r_33 - 8*Pz**2*r_12*r_32*r_33
            + 4*Pz**2*r_13*r_31**2 + 4*Pz**2*r_13*r_32**2 - 4*Pz**2*r_13*r_33**2 -
            8*Pz*d_3*r_12*r_33 + 8*Pz*d_3*r_13*r_32 + 8*Pz*d_4*r_11*r_31 + 8*Pz*d_4*r_12*r_32
            + 8*Pz*d_4*r_13*r_33 + 4*d_2**2*r_13 + 4*d_2*r_13*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) + 4*d_3**2*r_13 + 8*d_3*d_4*r_12 - 4*d_3*r_11*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 4*d_4**2*r_13 + 4*r_13*(2*R_l_inv_23*a_0*a_1
            + R_l_inv_63*(a_0**2 + a_1**2)) - 4*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Py*r_11*r_22 - Py*r_12*r_21 + Pz*r_11*r_32 - Pz*r_12*r_31)
          - -2*Px**2*r_11**3 - 2*Px**2*r_11*r_12**2 - 2*Px**2*r_11*r_13**2 - 4*Px*Py*r_11**2*r_21
            - 4*Px*Py*r_12**2*r_21 - 4*Px*Py*r_13**2*r_21 - 4*Px*Pz*r_11**2*r_31 -
            4*Px*Pz*r_12**2*r_31 - 4*Px*Pz*r_13**2*r_31 - 2*Py**2*r_11*r_21**2 + 2*Py**2*r_11*r_22**2
            + 2*Py**2*r_11*r_23**2 - 4*Py**2*r_12*r_21*r_22 - 4*Py**2*r_13*r_21*r_23
            - 4*Py*Pz*r_11*r_21*r_31 + 4*Py*Pz*r_11*r_22*r_32 + 4*Py*Pz*r_11*r_23*r_33
            - 4*Py*Pz*r_12*r_21*r_32 - 4*Py*Pz*r_12*r_22*r_31 - 4*Py*Pz*r_13*r_21*r_33
            - 4*Py*Pz*r_13*r_23*r_31 + 4*Py*d_2*r_11*r_23 - 4*Py*d_2*r_13*r_21 - 4*Py*d_3*r_11*r_22
            + 4*Py*d_3*r_12*r_21 - 4*Py*d_4*r_11*r_23 + 4*Py*d_4*r_13*r_21 - 2*Pz**2*r_11*r_31**2
            + 2*Pz**2*r_11*r_32**2 + 2*Pz**2*r_11*r_33**2 - 4*Pz**2*r_12*r_31*r_32
            - 4*Pz**2*r_13*r_31*r_33 + 4*Pz*d_2*r_11*r_33 - 4*Pz*d_2*r_13*r_31 - 4*Pz*d_3*r_11*r_32
            + 4*Pz*d_3*r_12*r_31 - 4*Pz*d_4*r_11*r_33 + 4*Pz*d_4*r_13*r_31 + 2*d_2**2*r_11
            - 4*d_2*d_4*r_11 + 2*d_2*r_11*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - 2*d_2*r_12*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + 2*d_3**2*r_11 - 2*d_3*r_13*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2)) + 2*d_4**2*r_11 + 2*r_11*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) + 2*r_12*(2*R_l_inv_24*a_0*a_1 + R_l_inv_64*(a_0**2 + a_1**2))
            + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) - 2*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - -4*Px**2*r_11**2*r_12 - 4*Px**2*r_12**3 - 4*Px**2*r_12*r_13**2 - 8*Px*Py*r_11**2*r_22
            - 8*Px*Py*r_12**2*r_22 - 8*Px*Py*r_13**2*r_22 - 8*Px*Pz*r_11**2*r_32 -
            8*Px*Pz*r_12**2*r_32 - 8*Px*Pz*r_13**2*r_32 - 8*Py**2*r_11*r_21*r_22 +
            4*Py**2*r_12*r_21**2 - 4*Py**2*r_12*r_22**2 + 4*Py**2*r_12*r_23**2 - 8*Py**2*r_13*r_22*r_23
            - 8*Py*Pz*r_11*r_21*r_32 - 8*Py*Pz*r_11*r_22*r_31 + 8*Py*Pz*r_12*r_21*r_31
            - 8*Py*Pz*r_12*r_22*r_32 + 8*Py*Pz*r_12*r_23*r_33 - 8*Py*Pz*r_13*r_22*r_33
            - 8*Py*Pz*r_13*r_23*r_32 + 8*Py*d_2*r_12*r_23 - 8*Py*d_2*r_13*r_22 - 8*Py*d_4*r_12*r_23
            + 8*Py*d_4*r_13*r_22 - 8*Pz**2*r_11*r_31*r_32 + 4*Pz**2*r_12*r_31**2 -
            4*Pz**2*r_12*r_32**2 + 4*Pz**2*r_12*r_33**2 - 8*Pz**2*r_13*r_32*r_33 +
            8*Pz*d_2*r_12*r_33 - 8*Pz*d_2*r_13*r_32 - 8*Pz*d_4*r_12*r_33 + 8*Pz*d_4*r_13*r_32
            + 4*d_2**2*r_12 - 8*d_2*d_4*r_12 + 4*d_2*r_11*(2*R_l_inv_26*a_0*a_1 +
            R_l_inv_66*(a_0**2 + a_1**2)) + 4*d_2*r_12*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + 4*d_3**2*r_12 + 4*d_4**2*r_12 - 4*r_11*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + 4*r_12*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) - 4*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) - 4*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33
            + Pz*r_13*r_32 + d_4*r_12)
          - 2*Px**2*r_11**3 + 2*Px**2*r_11*r_12**2 + 2*Px**2*r_11*r_13**2 + 4*Px*Py*r_11**2*r_21
            + 4*Px*Py*r_12**2*r_21 + 4*Px*Py*r_13**2*r_21 + 4*Px*Pz*r_11**2*r_31 +
            4*Px*Pz*r_12**2*r_31 + 4*Px*Pz*r_13**2*r_31 + 2*Py**2*r_11*r_21**2 - 2*Py**2*r_11*r_22**2
            - 2*Py**2*r_11*r_23**2 + 4*Py**2*r_12*r_21*r_22 + 4*Py**2*r_13*r_21*r_23
            + 4*Py*Pz*r_11*r_21*r_31 - 4*Py*Pz*r_11*r_22*r_32 - 4*Py*Pz*r_11*r_23*r_33
            + 4*Py*Pz*r_12*r_21*r_32 + 4*Py*Pz*r_12*r_22*r_31 + 4*Py*Pz*r_13*r_21*r_33
            + 4*Py*Pz*r_13*r_23*r_31 - 4*Py*d_2*r_11*r_23 + 4*Py*d_2*r_13*r_21 - 4*Py*d_3*r_11*r_22
            + 4*Py*d_3*r_12*r_21 + 4*Py*d_4*r_11*r_23 - 4*Py*d_4*r_13*r_21 + 2*Pz**2*r_11*r_31**2
            - 2*Pz**2*r_11*r_32**2 - 2*Pz**2*r_11*r_33**2 + 4*Pz**2*r_12*r_31*r_32
            + 4*Pz**2*r_13*r_31*r_33 - 4*Pz*d_2*r_11*r_33 + 4*Pz*d_2*r_13*r_31 - 4*Pz*d_3*r_11*r_32
            + 4*Pz*d_3*r_12*r_31 + 4*Pz*d_4*r_11*r_33 - 4*Pz*d_4*r_13*r_31 - 2*d_2**2*r_11
            + 4*d_2*d_4*r_11 - 2*d_2*r_11*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + 2*d_2*r_12*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - 2*d_3**2*r_11 - 2*d_3*r_13*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2)) - 2*d_4**2*r_11 - 2*r_11*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) - 2*r_12*(2*R_l_inv_24*a_0*a_1 + R_l_inv_64*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) + 2*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - -2*Px**2*r_11**2*r_12 - 2*Px**2*r_12**3 - 2*Px**2*r_12*r_13**2 - 4*Px*Py*r_11**2*r_22
            - 4*Px*Py*r_12**2*r_22 - 4*Px*Py*r_13**2*r_22 - 4*Px*Pz*r_11**2*r_32 -
            4*Px*Pz*r_12**2*r_32 - 4*Px*Pz*r_13**2*r_32 + 4*Px*d_3*r_11**2 + 4*Px*d_3*r_12**2
            + 4*Px*d_3*r_13**2 - 4*Py**2*r_11*r_21*r_22 + 2*Py**2*r_12*r_21**2 - 2*Py**2*r_12*r_22**2
            + 2*Py**2*r_12*r_23**2 - 4*Py**2*r_13*r_22*r_23 - 4*Py*Pz*r_11*r_21*r_32
            - 4*Py*Pz*r_11*r_22*r_31 + 4*Py*Pz*r_12*r_21*r_31 - 4*Py*Pz*r_12*r_22*r_32
            + 4*Py*Pz*r_12*r_23*r_33 - 4*Py*Pz*r_13*r_22*r_33 - 4*Py*Pz*r_13*r_23*r_32
            - 4*Py*d_2*r_12*r_23 + 4*Py*d_2*r_13*r_22 + 4*Py*d_3*r_11*r_21 + 4*Py*d_3*r_12*r_22
            + 4*Py*d_3*r_13*r_23 - 4*Py*d_4*r_12*r_23 + 4*Py*d_4*r_13*r_22 - 4*Pz**2*r_11*r_31*r_32
            + 2*Pz**2*r_12*r_31**2 - 2*Pz**2*r_12*r_32**2 + 2*Pz**2*r_12*r_33**2 -
            4*Pz**2*r_13*r_32*r_33 - 4*Pz*d_2*r_12*r_33 + 4*Pz*d_2*r_13*r_32 + 4*Pz*d_3*r_11*r_31
            + 4*Pz*d_3*r_12*r_32 + 4*Pz*d_3*r_13*r_33 - 4*Pz*d_4*r_12*r_33 + 4*Pz*d_4*r_13*r_32
            + 2*d_2**2*r_12 - 4*d_2*d_3*r_13 + 4*d_2*d_4*r_12 + 2*d_2*r_11*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2)) + 2*d_2*r_12*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) - 2*d_3**2*r_12 - 4*d_3*d_4*r_13 - 2*d_3*r_13*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + 2*d_4**2*r_12 + 2*r_11*(2*R_l_inv_33*a_0*a_1
            + R_l_inv_73*(a_0**2 + a_1**2)) - 2*r_12*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) + 2*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - 4*Px**2*r_11**3 + 4*Px**2*r_11*r_12**2 + 4*Px**2*r_11*r_13**2 + 8*Px*Py*r_11**2*r_21
            + 8*Px*Py*r_12**2*r_21 + 8*Px*Py*r_13**2*r_21 + 8*Px*Pz*r_11**2*r_31 +
            8*Px*Pz*r_12**2*r_31 + 8*Px*Pz*r_13**2*r_31 + 4*Py**2*r_11*r_21**2 - 4*Py**2*r_11*r_22**2
            - 4*Py**2*r_11*r_23**2 + 8*Py**2*r_12*r_21*r_22 + 8*Py**2*r_13*r_21*r_23
            + 8*Py*Pz*r_11*r_21*r_31 - 8*Py*Pz*r_11*r_22*r_32 - 8*Py*Pz*r_11*r_23*r_33
            + 8*Py*Pz*r_12*r_21*r_32 + 8*Py*Pz*r_12*r_22*r_31 + 8*Py*Pz*r_13*r_21*r_33
            + 8*Py*Pz*r_13*r_23*r_31 + 8*Py*d_2*r_11*r_23 - 8*Py*d_2*r_13*r_21 + 8*Py*d_4*r_11*r_23
            - 8*Py*d_4*r_13*r_21 + 4*Pz**2*r_11*r_31**2 - 4*Pz**2*r_11*r_32**2 - 4*Pz**2*r_11*r_33**2
            + 8*Pz**2*r_12*r_31*r_32 + 8*Pz**2*r_13*r_31*r_33 + 8*Pz*d_2*r_11*r_33
            - 8*Pz*d_2*r_13*r_31 + 8*Pz*d_4*r_11*r_33 - 8*Pz*d_4*r_13*r_31 - 4*d_2**2*r_11
            - 8*d_2*d_4*r_11 - 4*d_2*r_11*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 4*d_2*r_12*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))
            + 4*d_3**2*r_11 - 4*d_4**2*r_11 + 4*r_11*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) + 4*r_12*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            - 4*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) + 4*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33
            + Pz*r_13*r_32 + d_4*r_12)
          - 2*Px**2*r_11**2*r_12 + 2*Px**2*r_12**3 + 2*Px**2*r_12*r_13**2 + 4*Px*Py*r_11**2*r_22
            + 4*Px*Py*r_12**2*r_22 + 4*Px*Py*r_13**2*r_22 + 4*Px*Pz*r_11**2*r_32 +
            4*Px*Pz*r_12**2*r_32 + 4*Px*Pz*r_13**2*r_32 + 4*Px*d_3*r_11**2 + 4*Px*d_3*r_12**2
            + 4*Px*d_3*r_13**2 + 4*Py**2*r_11*r_21*r_22 - 2*Py**2*r_12*r_21**2 + 2*Py**2*r_12*r_22**2
            - 2*Py**2*r_12*r_23**2 + 4*Py**2*r_13*r_22*r_23 + 4*Py*Pz*r_11*r_21*r_32
            + 4*Py*Pz*r_11*r_22*r_31 - 4*Py*Pz*r_12*r_21*r_31 + 4*Py*Pz*r_12*r_22*r_32
            - 4*Py*Pz*r_12*r_23*r_33 + 4*Py*Pz*r_13*r_22*r_33 + 4*Py*Pz*r_13*r_23*r_32
            + 4*Py*d_2*r_12*r_23 - 4*Py*d_2*r_13*r_22 + 4*Py*d_3*r_11*r_21 + 4*Py*d_3*r_12*r_22
            + 4*Py*d_3*r_13*r_23 + 4*Py*d_4*r_12*r_23 - 4*Py*d_4*r_13*r_22 + 4*Pz**2*r_11*r_31*r_32
            - 2*Pz**2*r_12*r_31**2 + 2*Pz**2*r_12*r_32**2 - 2*Pz**2*r_12*r_33**2 +
            4*Pz**2*r_13*r_32*r_33 + 4*Pz*d_2*r_12*r_33 - 4*Pz*d_2*r_13*r_32 + 4*Pz*d_3*r_11*r_31
            + 4*Pz*d_3*r_12*r_32 + 4*Pz*d_3*r_13*r_33 + 4*Pz*d_4*r_12*r_33 - 4*Pz*d_4*r_13*r_32
            - 2*d_2**2*r_12 - 4*d_2*d_3*r_13 - 4*d_2*d_4*r_12 - 2*d_2*r_11*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2)) - 2*d_2*r_12*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 2*d_3**2*r_12 - 4*d_3*d_4*r_13 - 2*d_3*r_13*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - 2*d_4**2*r_12 - 2*r_11*(2*R_l_inv_33*a_0*a_1
            + R_l_inv_73*(a_0**2 + a_1**2)) + 2*r_12*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) - 2*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - 8*Py*d_2*r_11*r_22 - 8*Py*d_2*r_12*r_21 + 8*Pz*d_2*r_11*r_32 - 8*Pz*d_2*r_12*r_31
            - 8*d_2*d_3*r_11 - 4*d_2*r_13*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) - 4*d_3*r_11*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))
            - 4*r_13*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2)) + 4*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Py*r_11*r_22 - Py*r_12*r_21 + Pz*r_11*r_32
            - Pz*r_12*r_31)
          - 8*d_3*r_12*(-2*R_l_inv_36*a_0*a_1 - R_l_inv_76*(a_0**2 + a_1**2) - 2*d_2)
          - 8*Py*d_2*r_11*r_22 - 8*Py*d_2*r_12*r_21 + 8*Pz*d_2*r_11*r_32 - 8*Pz*d_2*r_12*r_31
            + 8*d_2*d_3*r_11 - 4*d_2*r_13*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) + 4*d_3*r_11*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))
            - 4*r_13*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2)) + 4*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Py*r_11*r_22 - Py*r_12*r_21 + Pz*r_11*r_32
            - Pz*r_12*r_31)
          - -2*Px**2*r_11**2*r_12 - 2*Px**2*r_12**3 - 2*Px**2*r_12*r_13**2 - 4*Px*Py*r_11**2*r_22
            - 4*Px*Py*r_12**2*r_22 - 4*Px*Py*r_13**2*r_22 - 4*Px*Pz*r_11**2*r_32 -
            4*Px*Pz*r_12**2*r_32 - 4*Px*Pz*r_13**2*r_32 + 4*Px*d_3*r_11**2 + 4*Px*d_3*r_12**2
            + 4*Px*d_3*r_13**2 - 4*Py**2*r_11*r_21*r_22 + 2*Py**2*r_12*r_21**2 - 2*Py**2*r_12*r_22**2
            + 2*Py**2*r_12*r_23**2 - 4*Py**2*r_13*r_22*r_23 - 4*Py*Pz*r_11*r_21*r_32
            - 4*Py*Pz*r_11*r_22*r_31 + 4*Py*Pz*r_12*r_21*r_31 - 4*Py*Pz*r_12*r_22*r_32
            + 4*Py*Pz*r_12*r_23*r_33 - 4*Py*Pz*r_13*r_22*r_33 - 4*Py*Pz*r_13*r_23*r_32
            + 4*Py*d_2*r_12*r_23 - 4*Py*d_2*r_13*r_22 + 4*Py*d_3*r_11*r_21 + 4*Py*d_3*r_12*r_22
            + 4*Py*d_3*r_13*r_23 - 4*Py*d_4*r_12*r_23 + 4*Py*d_4*r_13*r_22 - 4*Pz**2*r_11*r_31*r_32
            + 2*Pz**2*r_12*r_31**2 - 2*Pz**2*r_12*r_32**2 + 2*Pz**2*r_12*r_33**2 -
            4*Pz**2*r_13*r_32*r_33 + 4*Pz*d_2*r_12*r_33 - 4*Pz*d_2*r_13*r_32 + 4*Pz*d_3*r_11*r_31
            + 4*Pz*d_3*r_12*r_32 + 4*Pz*d_3*r_13*r_33 - 4*Pz*d_4*r_12*r_33 + 4*Pz*d_4*r_13*r_32
            + 2*d_2**2*r_12 + 4*d_2*d_3*r_13 - 4*d_2*d_4*r_12 - 2*d_2*r_11*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2)) + 2*d_2*r_12*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) - 2*d_3**2*r_12 - 4*d_3*d_4*r_13 + 2*d_3*r_13*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + 2*d_4**2*r_12 - 2*r_11*(2*R_l_inv_33*a_0*a_1
            + R_l_inv_73*(a_0**2 + a_1**2)) - 2*r_12*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) + 2*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - 4*Px**2*r_11**3 + 4*Px**2*r_11*r_12**2 + 4*Px**2*r_11*r_13**2 + 8*Px*Py*r_11**2*r_21
            + 8*Px*Py*r_12**2*r_21 + 8*Px*Py*r_13**2*r_21 + 8*Px*Pz*r_11**2*r_31 +
            8*Px*Pz*r_12**2*r_31 + 8*Px*Pz*r_13**2*r_31 + 4*Py**2*r_11*r_21**2 - 4*Py**2*r_11*r_22**2
            - 4*Py**2*r_11*r_23**2 + 8*Py**2*r_12*r_21*r_22 + 8*Py**2*r_13*r_21*r_23
            + 8*Py*Pz*r_11*r_21*r_31 - 8*Py*Pz*r_11*r_22*r_32 - 8*Py*Pz*r_11*r_23*r_33
            + 8*Py*Pz*r_12*r_21*r_32 + 8*Py*Pz*r_12*r_22*r_31 + 8*Py*Pz*r_13*r_21*r_33
            + 8*Py*Pz*r_13*r_23*r_31 - 8*Py*d_2*r_11*r_23 + 8*Py*d_2*r_13*r_21 + 8*Py*d_4*r_11*r_23
            - 8*Py*d_4*r_13*r_21 + 4*Pz**2*r_11*r_31**2 - 4*Pz**2*r_11*r_32**2 - 4*Pz**2*r_11*r_33**2
            + 8*Pz**2*r_12*r_31*r_32 + 8*Pz**2*r_13*r_31*r_33 - 8*Pz*d_2*r_11*r_33
            + 8*Pz*d_2*r_13*r_31 + 8*Pz*d_4*r_11*r_33 - 8*Pz*d_4*r_13*r_31 - 4*d_2**2*r_11
            + 8*d_2*d_4*r_11 - 4*d_2*r_11*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) - 4*d_2*r_12*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))
            + 4*d_3**2*r_11 - 4*d_4**2*r_11 + 4*r_11*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) - 4*r_12*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            + 4*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_11*r_23
            + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 + d_4*r_11) + 4*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_12*r_23 + Py*r_13*r_22 - Pz*r_12*r_33
            + Pz*r_13*r_32 + d_4*r_12)
          - 2*Px**2*r_11**2*r_12 + 2*Px**2*r_12**3 + 2*Px**2*r_12*r_13**2 + 4*Px*Py*r_11**2*r_22
            + 4*Px*Py*r_12**2*r_22 + 4*Px*Py*r_13**2*r_22 + 4*Px*Pz*r_11**2*r_32 +
            4*Px*Pz*r_12**2*r_32 + 4*Px*Pz*r_13**2*r_32 + 4*Px*d_3*r_11**2 + 4*Px*d_3*r_12**2
            + 4*Px*d_3*r_13**2 + 4*Py**2*r_11*r_21*r_22 - 2*Py**2*r_12*r_21**2 + 2*Py**2*r_12*r_22**2
            - 2*Py**2*r_12*r_23**2 + 4*Py**2*r_13*r_22*r_23 + 4*Py*Pz*r_11*r_21*r_32
            + 4*Py*Pz*r_11*r_22*r_31 - 4*Py*Pz*r_12*r_21*r_31 + 4*Py*Pz*r_12*r_22*r_32
            - 4*Py*Pz*r_12*r_23*r_33 + 4*Py*Pz*r_13*r_22*r_33 + 4*Py*Pz*r_13*r_23*r_32
            - 4*Py*d_2*r_12*r_23 + 4*Py*d_2*r_13*r_22 + 4*Py*d_3*r_11*r_21 + 4*Py*d_3*r_12*r_22
            + 4*Py*d_3*r_13*r_23 + 4*Py*d_4*r_12*r_23 - 4*Py*d_4*r_13*r_22 + 4*Pz**2*r_11*r_31*r_32
            - 2*Pz**2*r_12*r_31**2 + 2*Pz**2*r_12*r_32**2 - 2*Pz**2*r_12*r_33**2 +
            4*Pz**2*r_13*r_32*r_33 - 4*Pz*d_2*r_12*r_33 + 4*Pz*d_2*r_13*r_32 + 4*Pz*d_3*r_11*r_31
            + 4*Pz*d_3*r_12*r_32 + 4*Pz*d_3*r_13*r_33 + 4*Pz*d_4*r_12*r_33 - 4*Pz*d_4*r_13*r_32
            - 2*d_2**2*r_12 + 4*d_2*d_3*r_13 + 4*d_2*d_4*r_12 + 2*d_2*r_11*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2)) - 2*d_2*r_12*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 2*d_3**2*r_12 - 4*d_3*d_4*r_13 + 2*d_3*r_13*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - 2*d_4**2*r_12 + 2*r_11*(2*R_l_inv_33*a_0*a_1
            + R_l_inv_73*(a_0**2 + a_1**2)) + 2*r_12*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 + a_1**2))*(-Py*r_12*r_23
            + Py*r_13*r_22 - Pz*r_12*r_33 + Pz*r_13*r_32 + d_4*r_12) - 2*(2*R_l_inv_37*a_0*a_1
            + R_l_inv_77*(a_0**2 + a_1**2))*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33
            + Pz*r_13*r_31 + d_4*r_11)
          - 2*Px**2*r_11**2*r_13 + 2*Px**2*r_12**2*r_13 + 2*Px**2*r_13**3 + 4*Px*Py*r_11**2*r_23
            + 4*Px*Py*r_12**2*r_23 + 4*Px*Py*r_13**2*r_23 + 4*Px*Pz*r_11**2*r_33 +
            4*Px*Pz*r_12**2*r_33 + 4*Px*Pz*r_13**2*r_33 - 4*Px*d_2*r_11**2 - 4*Px*d_2*r_12**2
            - 4*Px*d_2*r_13**2 - 4*Px*d_4*r_11**2 - 4*Px*d_4*r_12**2 - 4*Px*d_4*r_13**2
            + 4*Py**2*r_11*r_21*r_23 + 4*Py**2*r_12*r_22*r_23 - 2*Py**2*r_13*r_21**2
            - 2*Py**2*r_13*r_22**2 + 2*Py**2*r_13*r_23**2 + 4*Py*Pz*r_11*r_21*r_33
            + 4*Py*Pz*r_11*r_23*r_31 + 4*Py*Pz*r_12*r_22*r_33 + 4*Py*Pz*r_12*r_23*r_32
            - 4*Py*Pz*r_13*r_21*r_31 - 4*Py*Pz*r_13*r_22*r_32 + 4*Py*Pz*r_13*r_23*r_33
            - 4*Py*d_2*r_11*r_21 - 4*Py*d_2*r_12*r_22 - 4*Py*d_2*r_13*r_23 - 4*Py*d_3*r_12*r_23
            + 4*Py*d_3*r_13*r_22 - 4*Py*d_4*r_11*r_21 - 4*Py*d_4*r_12*r_22 - 4*Py*d_4*r_13*r_23
            + 4*Pz**2*r_11*r_31*r_33 + 4*Pz**2*r_12*r_32*r_33 - 2*Pz**2*r_13*r_31**2
            - 2*Pz**2*r_13*r_32**2 + 2*Pz**2*r_13*r_33**2 - 4*Pz*d_2*r_11*r_31 - 4*Pz*d_2*r_12*r_32
            - 4*Pz*d_2*r_13*r_33 - 4*Pz*d_3*r_12*r_33 + 4*Pz*d_3*r_13*r_32 - 4*Pz*d_4*r_11*r_31
            - 4*Pz*d_4*r_12*r_32 - 4*Pz*d_4*r_13*r_33 + 2*d_2**2*r_13 + 4*d_2*d_3*r_12
            + 4*d_2*d_4*r_13 - 2*d_3**2*r_13 + 4*d_3*d_4*r_12 + 2*d_4**2*r_13
          - 8*d_3*(Py*r_11*r_23 - Py*r_13*r_21 + Pz*r_11*r_33 - Pz*r_13*r_31 - d_2*r_11
            - d_4*r_11)
          - 2*Px**2*r_11**2*r_13 + 2*Px**2*r_12**2*r_13 + 2*Px**2*r_13**3 + 4*Px*Py*r_11**2*r_23
            + 4*Px*Py*r_12**2*r_23 + 4*Px*Py*r_13**2*r_23 + 4*Px*Pz*r_11**2*r_33 +
            4*Px*Pz*r_12**2*r_33 + 4*Px*Pz*r_13**2*r_33 - 4*Px*d_2*r_11**2 - 4*Px*d_2*r_12**2
            - 4*Px*d_2*r_13**2 - 4*Px*d_4*r_11**2 - 4*Px*d_4*r_12**2 - 4*Px*d_4*r_13**2
            + 4*Py**2*r_11*r_21*r_23 + 4*Py**2*r_12*r_22*r_23 - 2*Py**2*r_13*r_21**2
            - 2*Py**2*r_13*r_22**2 + 2*Py**2*r_13*r_23**2 + 4*Py*Pz*r_11*r_21*r_33
            + 4*Py*Pz*r_11*r_23*r_31 + 4*Py*Pz*r_12*r_22*r_33 + 4*Py*Pz*r_12*r_23*r_32
            - 4*Py*Pz*r_13*r_21*r_31 - 4*Py*Pz*r_13*r_22*r_32 + 4*Py*Pz*r_13*r_23*r_33
            - 4*Py*d_2*r_11*r_21 - 4*Py*d_2*r_12*r_22 - 4*Py*d_2*r_13*r_23 + 4*Py*d_3*r_12*r_23
            - 4*Py*d_3*r_13*r_22 - 4*Py*d_4*r_11*r_21 - 4*Py*d_4*r_12*r_22 - 4*Py*d_4*r_13*r_23
            + 4*Pz**2*r_11*r_31*r_33 + 4*Pz**2*r_12*r_32*r_33 - 2*Pz**2*r_13*r_31**2
            - 2*Pz**2*r_13*r_32**2 + 2*Pz**2*r_13*r_33**2 - 4*Pz*d_2*r_11*r_31 - 4*Pz*d_2*r_12*r_32
            - 4*Pz*d_2*r_13*r_33 + 4*Pz*d_3*r_12*r_33 - 4*Pz*d_3*r_13*r_32 - 4*Pz*d_4*r_11*r_31
            - 4*Pz*d_4*r_12*r_32 - 4*Pz*d_4*r_13*r_33 + 2*d_2**2*r_13 - 4*d_2*d_3*r_12
            + 4*d_2*d_4*r_13 - 2*d_3**2*r_13 - 4*d_3*d_4*r_12 + 2*d_4**2*r_13
          - 4*Px**2*r_11**3 + 4*Px**2*r_11*r_12**2 + 4*Px**2*r_11*r_13**2 + 8*Px*Py*r_11**2*r_21
            + 8*Px*Py*r_12**2*r_21 + 8*Px*Py*r_13**2*r_21 + 8*Px*Pz*r_11**2*r_31 +
            8*Px*Pz*r_12**2*r_31 + 8*Px*Pz*r_13**2*r_31 + 4*Py**2*r_11*r_21**2 - 4*Py**2*r_11*r_22**2
            - 4*Py**2*r_11*r_23**2 + 8*Py**2*r_12*r_21*r_22 + 8*Py**2*r_13*r_21*r_23
            + 8*Py*Pz*r_11*r_21*r_31 - 8*Py*Pz*r_11*r_22*r_32 - 8*Py*Pz*r_11*r_23*r_33
            + 8*Py*Pz*r_12*r_21*r_32 + 8*Py*Pz*r_12*r_22*r_31 + 8*Py*Pz*r_13*r_21*r_33
            + 8*Py*Pz*r_13*r_23*r_31 + 8*Py*d_3*r_11*r_22 - 8*Py*d_3*r_12*r_21 + 8*Py*d_4*r_11*r_23
            - 8*Py*d_4*r_13*r_21 + 4*Pz**2*r_11*r_31**2 - 4*Pz**2*r_11*r_32**2 - 4*Pz**2*r_11*r_33**2
            + 8*Pz**2*r_12*r_31*r_32 + 8*Pz**2*r_13*r_31*r_33 + 8*Pz*d_3*r_11*r_32
            - 8*Pz*d_3*r_12*r_31 + 8*Pz*d_4*r_11*r_33 - 8*Pz*d_4*r_13*r_31 + 4*d_2**2*r_11
            - 4*d_3**2*r_11 - 4*d_4**2*r_11
          - 8*Px**2*r_11**2*r_12 + 8*Px**2*r_12**3 + 8*Px**2*r_12*r_13**2 + 16*Px*Py*r_11**2*r_22
            + 16*Px*Py*r_12**2*r_22 + 16*Px*Py*r_13**2*r_22 + 16*Px*Pz*r_11**2*r_32
            + 16*Px*Pz*r_12**2*r_32 + 16*Px*Pz*r_13**2*r_32 + 16*Py**2*r_11*r_21*r_22
            - 8*Py**2*r_12*r_21**2 + 8*Py**2*r_12*r_22**2 - 8*Py**2*r_12*r_23**2 +
            16*Py**2*r_13*r_22*r_23 + 16*Py*Pz*r_11*r_21*r_32 + 16*Py*Pz*r_11*r_22*r_31
            - 16*Py*Pz*r_12*r_21*r_31 + 16*Py*Pz*r_12*r_22*r_32 - 16*Py*Pz*r_12*r_23*r_33
            + 16*Py*Pz*r_13*r_22*r_33 + 16*Py*Pz*r_13*r_23*r_32 + 16*Py*d_4*r_12*r_23
            - 16*Py*d_4*r_13*r_22 + 16*Pz**2*r_11*r_31*r_32 - 8*Pz**2*r_12*r_31**2
            + 8*Pz**2*r_12*r_32**2 - 8*Pz**2*r_12*r_33**2 + 16*Pz**2*r_13*r_32*r_33
            + 16*Pz*d_4*r_12*r_33 - 16*Pz*d_4*r_13*r_32 + 8*d_2**2*r_12 - 8*d_3**2*r_12
            - 8*d_4**2*r_12
          - -4*Px**2*r_11**3 - 4*Px**2*r_11*r_12**2 - 4*Px**2*r_11*r_13**2 - 8*Px*Py*r_11**2*r_21
            - 8*Px*Py*r_12**2*r_21 - 8*Px*Py*r_13**2*r_21 - 8*Px*Pz*r_11**2*r_31 -
            8*Px*Pz*r_12**2*r_31 - 8*Px*Pz*r_13**2*r_31 - 4*Py**2*r_11*r_21**2 + 4*Py**2*r_11*r_22**2
            + 4*Py**2*r_11*r_23**2 - 8*Py**2*r_12*r_21*r_22 - 8*Py**2*r_13*r_21*r_23
            - 8*Py*Pz*r_11*r_21*r_31 + 8*Py*Pz*r_11*r_22*r_32 + 8*Py*Pz*r_11*r_23*r_33
            - 8*Py*Pz*r_12*r_21*r_32 - 8*Py*Pz*r_12*r_22*r_31 - 8*Py*Pz*r_13*r_21*r_33
            - 8*Py*Pz*r_13*r_23*r_31 + 8*Py*d_3*r_11*r_22 - 8*Py*d_3*r_12*r_21 - 8*Py*d_4*r_11*r_23
            + 8*Py*d_4*r_13*r_21 - 4*Pz**2*r_11*r_31**2 + 4*Pz**2*r_11*r_32**2 + 4*Pz**2*r_11*r_33**2
            - 8*Pz**2*r_12*r_31*r_32 - 8*Pz**2*r_13*r_31*r_33 + 8*Pz*d_3*r_11*r_32
            - 8*Pz*d_3*r_12*r_31 - 8*Pz*d_4*r_11*r_33 + 8*Pz*d_4*r_13*r_31 - 4*d_2**2*r_11
            + 4*d_3**2*r_11 + 4*d_4**2*r_11
          - -2*Px**2*r_11**2*r_13 - 2*Px**2*r_12**2*r_13 - 2*Px**2*r_13**3 - 4*Px*Py*r_11**2*r_23
            - 4*Px*Py*r_12**2*r_23 - 4*Px*Py*r_13**2*r_23 - 4*Px*Pz*r_11**2*r_33 -
            4*Px*Pz*r_12**2*r_33 - 4*Px*Pz*r_13**2*r_33 - 4*Px*d_2*r_11**2 - 4*Px*d_2*r_12**2
            - 4*Px*d_2*r_13**2 + 4*Px*d_4*r_11**2 + 4*Px*d_4*r_12**2 + 4*Px*d_4*r_13**2
            - 4*Py**2*r_11*r_21*r_23 - 4*Py**2*r_12*r_22*r_23 + 2*Py**2*r_13*r_21**2
            + 2*Py**2*r_13*r_22**2 - 2*Py**2*r_13*r_23**2 - 4*Py*Pz*r_11*r_21*r_33
            - 4*Py*Pz*r_11*r_23*r_31 - 4*Py*Pz*r_12*r_22*r_33 - 4*Py*Pz*r_12*r_23*r_32
            + 4*Py*Pz*r_13*r_21*r_31 + 4*Py*Pz*r_13*r_22*r_32 - 4*Py*Pz*r_13*r_23*r_33
            - 4*Py*d_2*r_11*r_21 - 4*Py*d_2*r_12*r_22 - 4*Py*d_2*r_13*r_23 + 4*Py*d_3*r_12*r_23
            - 4*Py*d_3*r_13*r_22 + 4*Py*d_4*r_11*r_21 + 4*Py*d_4*r_12*r_22 + 4*Py*d_4*r_13*r_23
            - 4*Pz**2*r_11*r_31*r_33 - 4*Pz**2*r_12*r_32*r_33 + 2*Pz**2*r_13*r_31**2
            + 2*Pz**2*r_13*r_32**2 - 2*Pz**2*r_13*r_33**2 - 4*Pz*d_2*r_11*r_31 - 4*Pz*d_2*r_12*r_32
            - 4*Pz*d_2*r_13*r_33 + 4*Pz*d_3*r_12*r_33 - 4*Pz*d_3*r_13*r_32 + 4*Pz*d_4*r_11*r_31
            + 4*Pz*d_4*r_12*r_32 + 4*Pz*d_4*r_13*r_33 - 2*d_2**2*r_13 + 4*d_2*d_3*r_12
            + 4*d_2*d_4*r_13 + 2*d_3**2*r_13 - 4*d_3*d_4*r_12 - 2*d_4**2*r_13
          - 8*d_3*(-Py*r_11*r_23 + Py*r_13*r_21 - Pz*r_11*r_33 + Pz*r_13*r_31 - d_2*r_11
            + d_4*r_11)
          - -2*Px**2*r_11**2*r_13 - 2*Px**2*r_12**2*r_13 - 2*Px**2*r_13**3 - 4*Px*Py*r_11**2*r_23
            - 4*Px*Py*r_12**2*r_23 - 4*Px*Py*r_13**2*r_23 - 4*Px*Pz*r_11**2*r_33 -
            4*Px*Pz*r_12**2*r_33 - 4*Px*Pz*r_13**2*r_33 - 4*Px*d_2*r_11**2 - 4*Px*d_2*r_12**2
            - 4*Px*d_2*r_13**2 + 4*Px*d_4*r_11**2 + 4*Px*d_4*r_12**2 + 4*Px*d_4*r_13**2
            - 4*Py**2*r_11*r_21*r_23 - 4*Py**2*r_12*r_22*r_23 + 2*Py**2*r_13*r_21**2
            + 2*Py**2*r_13*r_22**2 - 2*Py**2*r_13*r_23**2 - 4*Py*Pz*r_11*r_21*r_33
            - 4*Py*Pz*r_11*r_23*r_31 - 4*Py*Pz*r_12*r_22*r_33 - 4*Py*Pz*r_12*r_23*r_32
            + 4*Py*Pz*r_13*r_21*r_31 + 4*Py*Pz*r_13*r_22*r_32 - 4*Py*Pz*r_13*r_23*r_33
            - 4*Py*d_2*r_11*r_21 - 4*Py*d_2*r_12*r_22 - 4*Py*d_2*r_13*r_23 - 4*Py*d_3*r_12*r_23
            + 4*Py*d_3*r_13*r_22 + 4*Py*d_4*r_11*r_21 + 4*Py*d_4*r_12*r_22 + 4*Py*d_4*r_13*r_23
            - 4*Pz**2*r_11*r_31*r_33 - 4*Pz**2*r_12*r_32*r_33 + 2*Pz**2*r_13*r_31**2
            + 2*Pz**2*r_13*r_32**2 - 2*Pz**2*r_13*r_33**2 - 4*Pz*d_2*r_11*r_31 - 4*Pz*d_2*r_12*r_32
            - 4*Pz*d_2*r_13*r_33 - 4*Pz*d_3*r_12*r_33 + 4*Pz*d_3*r_13*r_32 + 4*Pz*d_4*r_11*r_31
            + 4*Pz*d_4*r_12*r_32 + 4*Pz*d_4*r_13*r_33 - 2*d_2**2*r_13 - 4*d_2*d_3*r_12
            + 4*d_2*d_4*r_13 + 2*d_3**2*r_13 + 4*d_3*d_4*r_12 - 2*d_4**2*r_13
          rows: 6
        C:
          cols: 9
          flatten_data:
          - r_23
          - '0'
          - r_23
          - 2*r_21
          - 4*r_22
          - -2*r_21
          - -r_23
          - '0'
          - -r_23
          - -Px*r_11*r_21 - Px*r_12*r_22 - Px*r_13*r_23 - Py*r_21**2 - Py*r_22**2
            - Py*r_23**2 - Pz*r_21*r_31 - Pz*r_22*r_32 - Pz*r_23*r_33 + d_2*r_23 +
            d_3*r_22 + d_4*r_23
          - -2*d_3*r_21
          - -Px*r_11*r_21 - Px*r_12*r_22 - Px*r_13*r_23 - Py*r_21**2 - Py*r_22**2
            - Py*r_23**2 - Pz*r_21*r_31 - Pz*r_22*r_32 - Pz*r_23*r_33 + d_2*r_23 -
            d_3*r_22 + d_4*r_23
          - 2*d_2*r_21
          - 4*d_2*r_22
          - -2*d_2*r_21
          - -Px*r_11*r_21 - Px*r_12*r_22 - Px*r_13*r_23 - Py*r_21**2 - Py*r_22**2
            - Py*r_23**2 - Pz*r_21*r_31 - Pz*r_22*r_32 - Pz*r_23*r_33 - d_2*r_23 +
            d_3*r_22 + d_4*r_23
          - -2*d_3*r_21
          - -Px*r_11*r_21 - Px*r_12*r_22 - Px*r_13*r_23 - Py*r_21**2 - Py*r_22**2
            - Py*r_23**2 - Pz*r_21*r_31 - Pz*r_22*r_32 - Pz*r_23*r_33 - d_2*r_23 -
            d_3*r_22 + d_4*r_23
          - Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31 - R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 + R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 - R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + R_l_inv_53*a_0*r_21 - R_l_inv_54*a_0*r_22 - 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + R_l_inv_56*a_0*d_2*r_22 - R_l_inv_56*a_0*d_3*r_23 + R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + R_l_inv_57*a_0*d_2*r_21
            + R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 + d_3*r_21
          - -2*R_l_inv_50*a_0*(Px*r_12 + Py*r_22 + Pz*r_32) - 2*R_l_inv_51*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*R_l_inv_53*a_0*r_22 + 2*R_l_inv_54*a_0*r_21 +
            4*R_l_inv_55*a_0*d_3*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*R_l_inv_56*a_0*d_2*r_21
            - 2*R_l_inv_56*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*R_l_inv_57*a_0*d_2*r_22 + 2*R_l_inv_57*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + 2*d_3*r_22
          - Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31 + R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 - R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 - R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - R_l_inv_53*a_0*r_21 + R_l_inv_54*a_0*r_22 - 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - R_l_inv_56*a_0*d_2*r_22 - R_l_inv_56*a_0*d_3*r_23 - R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - R_l_inv_57*a_0*d_2*r_21
            - R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 - d_3*r_21
          - 2*Px*r_12*r_23 - 2*Px*r_13*r_22 - 2*Pz*r_22*r_33 + 2*Pz*r_23*r_32 + 2*R_l_inv_50*a_0*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_52*a_0*(Px*r_11 + Py*r_21 + Pz*r_31)
            - 2*R_l_inv_53*a_0*r_23 - 4*R_l_inv_55*a_0*d_2*(Px*r_11 + Py*r_21 + Pz*r_31)
            - 2*R_l_inv_56*a_0*d_3*r_21 - 2*R_l_inv_56*a_0*(Px*r_11*r_22 - Px*r_12*r_21
            - Pz*r_21*r_32 + Pz*r_22*r_31) - 2*R_l_inv_57*a_0*d_2*r_23 - 2*d_3*r_23
            + 2*d_4*r_22
          - -4*Px*r_11*r_23 + 4*Px*r_13*r_21 + 4*Pz*r_21*r_33 - 4*Pz*r_23*r_31 - 4*R_l_inv_52*a_0*(Px*r_12
            + Py*r_22 + Pz*r_32) - 8*R_l_inv_55*a_0*d_2*(Px*r_12 + Py*r_22 + Pz*r_32)
            - 4*R_l_inv_56*a_0*d_3*r_22 - 4*d_4*r_21
          - -2*Px*r_12*r_23 + 2*Px*r_13*r_22 + 2*Pz*r_22*r_33 - 2*Pz*r_23*r_32 + 2*R_l_inv_50*a_0*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_52*a_0*(Px*r_11 + Py*r_21 + Pz*r_31)
            - 2*R_l_inv_53*a_0*r_23 + 4*R_l_inv_55*a_0*d_2*(Px*r_11 + Py*r_21 + Pz*r_31)
            + 2*R_l_inv_56*a_0*d_3*r_21 - 2*R_l_inv_56*a_0*(Px*r_11*r_22 - Px*r_12*r_21
            - Pz*r_21*r_32 + Pz*r_22*r_31) - 2*R_l_inv_57*a_0*d_2*r_23 - 2*d_3*r_23
            - 2*d_4*r_22
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31 + R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 + R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 + R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - R_l_inv_53*a_0*r_21 - R_l_inv_54*a_0*r_22 + 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + R_l_inv_56*a_0*d_2*r_22 + R_l_inv_56*a_0*d_3*r_23 - R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - R_l_inv_57*a_0*d_2*r_21
            + R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 - d_3*r_21
          - 2*R_l_inv_50*a_0*(Px*r_12 + Py*r_22 + Pz*r_32) - 2*R_l_inv_51*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*R_l_inv_53*a_0*r_22 + 2*R_l_inv_54*a_0*r_21 +
            4*R_l_inv_55*a_0*d_3*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*R_l_inv_56*a_0*d_2*r_21
            + 2*R_l_inv_56*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*R_l_inv_57*a_0*d_2*r_22 + 2*R_l_inv_57*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - 2*d_3*r_22
          - -Px*r_11*r_22 + Px*r_12*r_21 + Pz*r_21*r_32 - Pz*r_22*r_31 - R_l_inv_50*a_0*(Px*r_11
            + Py*r_21 + Pz*r_31) - R_l_inv_51*a_0*d_3 - R_l_inv_51*a_0*(Px*r_12 +
            Py*r_22 + Pz*r_32) + R_l_inv_52*a_0*d_2 + R_l_inv_52*a_0*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + R_l_inv_53*a_0*r_21 + R_l_inv_54*a_0*r_22 + 2*R_l_inv_55*a_0*d_2*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + 2*R_l_inv_55*a_0*d_3*(Px*r_12 + Py*r_22 +
            Pz*r_32) + R_l_inv_55*a_0*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - R_l_inv_56*a_0*d_2*r_22 + R_l_inv_56*a_0*d_3*r_23 + R_l_inv_56*a_0*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + R_l_inv_57*a_0*d_2*r_21
            - R_l_inv_57*a_0*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + a_1 + d_3*r_21
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_2*r_11*r_23
            - 2*Px*d_2*r_13*r_21 + 2*Px*d_3*r_11*r_22 - 2*Px*d_3*r_12*r_21 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_2*r_21*r_33 + 2*Pz*d_2*r_23*r_31 - 2*Pz*d_3*r_21*r_32
            + 2*Pz*d_3*r_22*r_31 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            + 2*d_2*d_4*r_21 + d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) - 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            d_3**2*r_21 - d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) - 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + d_4**2*r_21
            + r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) - r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - 2*Px**2*r_11**2*r_22 - 4*Px**2*r_11*r_12*r_21 - 2*Px**2*r_12**2*r_22 -
            4*Px**2*r_12*r_13*r_23 + 2*Px**2*r_13**2*r_22 - 4*Px*Py*r_12*r_21**2 -
            4*Px*Py*r_12*r_22**2 - 4*Px*Py*r_12*r_23**2 - 4*Px*Pz*r_11*r_21*r_32 +
            4*Px*Pz*r_11*r_22*r_31 - 4*Px*Pz*r_12*r_21*r_31 - 4*Px*Pz*r_12*r_22*r_32
            - 4*Px*Pz*r_12*r_23*r_33 + 4*Px*Pz*r_13*r_22*r_33 - 4*Px*Pz*r_13*r_23*r_32
            + 4*Px*d_2*r_12*r_23 - 4*Px*d_2*r_13*r_22 + 4*Px*d_4*r_12*r_23 - 4*Px*d_4*r_13*r_22
            - 2*Py**2*r_21**2*r_22 - 2*Py**2*r_22**3 - 2*Py**2*r_22*r_23**2 - 4*Py*Pz*r_21**2*r_32
            - 4*Py*Pz*r_22**2*r_32 - 4*Py*Pz*r_23**2*r_32 - 4*Pz**2*r_21*r_31*r_32
            + 2*Pz**2*r_22*r_31**2 - 2*Pz**2*r_22*r_32**2 + 2*Pz**2*r_22*r_33**2 -
            4*Pz**2*r_23*r_32*r_33 - 4*Pz*d_2*r_22*r_33 + 4*Pz*d_2*r_23*r_32 - 4*Pz*d_4*r_22*r_33
            + 4*Pz*d_4*r_23*r_32 + 2*d_2**2*r_22 + 4*d_2*d_4*r_22 - 2*d_2*r_21*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) + 2*d_2*r_22*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + 2*d_3**2*r_22 + 4*d_3*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_4**2*r_22 + 2*r_21*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + 2*r_22*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 2*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - Px**2*r_11**2*r_21 + 2*Px**2*r_11*r_12*r_22 + 2*Px**2*r_11*r_13*r_23 -
            Px**2*r_12**2*r_21 - Px**2*r_13**2*r_21 + 2*Px*Py*r_11*r_21**2 + 2*Px*Py*r_11*r_22**2
            + 2*Px*Py*r_11*r_23**2 + 2*Px*Pz*r_11*r_21*r_31 + 2*Px*Pz*r_11*r_22*r_32
            + 2*Px*Pz*r_11*r_23*r_33 - 2*Px*Pz*r_12*r_21*r_32 + 2*Px*Pz*r_12*r_22*r_31
            - 2*Px*Pz*r_13*r_21*r_33 + 2*Px*Pz*r_13*r_23*r_31 - 2*Px*d_2*r_11*r_23
            + 2*Px*d_2*r_13*r_21 + 2*Px*d_3*r_11*r_22 - 2*Px*d_3*r_12*r_21 - 2*Px*d_4*r_11*r_23
            + 2*Px*d_4*r_13*r_21 + Py**2*r_21**3 + Py**2*r_21*r_22**2 + Py**2*r_21*r_23**2
            + 2*Py*Pz*r_21**2*r_31 + 2*Py*Pz*r_22**2*r_31 + 2*Py*Pz*r_23**2*r_31 +
            Pz**2*r_21*r_31**2 - Pz**2*r_21*r_32**2 - Pz**2*r_21*r_33**2 + 2*Pz**2*r_22*r_31*r_32
            + 2*Pz**2*r_23*r_31*r_33 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31 - 2*Pz*d_3*r_21*r_32
            + 2*Pz*d_3*r_22*r_31 + 2*Pz*d_4*r_21*r_33 - 2*Pz*d_4*r_23*r_31 - d_2**2*r_21
            - 2*d_2*d_4*r_21 - d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) - 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            d_3**2*r_21 - d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) + 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - d_4**2*r_21
            - r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - -2*Px**2*r_11**2*r_23 + 4*Px**2*r_11*r_13*r_21 - 2*Px**2*r_12**2*r_23
            + 4*Px**2*r_12*r_13*r_22 + 2*Px**2*r_13**2*r_23 + 4*Px*Py*r_13*r_21**2
            + 4*Px*Py*r_13*r_22**2 + 4*Px*Py*r_13*r_23**2 + 4*Px*Pz*r_11*r_21*r_33
            - 4*Px*Pz*r_11*r_23*r_31 + 4*Px*Pz*r_12*r_22*r_33 - 4*Px*Pz*r_12*r_23*r_32
            + 4*Px*Pz*r_13*r_21*r_31 + 4*Px*Pz*r_13*r_22*r_32 + 4*Px*Pz*r_13*r_23*r_33
            + 4*Px*d_3*r_12*r_23 - 4*Px*d_3*r_13*r_22 - 4*Px*d_4*r_11*r_21 - 4*Px*d_4*r_12*r_22
            - 4*Px*d_4*r_13*r_23 + 2*Py**2*r_21**2*r_23 + 2*Py**2*r_22**2*r_23 + 2*Py**2*r_23**3
            + 4*Py*Pz*r_21**2*r_33 + 4*Py*Pz*r_22**2*r_33 + 4*Py*Pz*r_23**2*r_33 -
            4*Py*d_4*r_21**2 - 4*Py*d_4*r_22**2 - 4*Py*d_4*r_23**2 + 4*Pz**2*r_21*r_31*r_33
            + 4*Pz**2*r_22*r_32*r_33 - 2*Pz**2*r_23*r_31**2 - 2*Pz**2*r_23*r_32**2
            + 2*Pz**2*r_23*r_33**2 - 4*Pz*d_3*r_22*r_33 + 4*Pz*d_3*r_23*r_32 - 4*Pz*d_4*r_21*r_31
            - 4*Pz*d_4*r_22*r_32 - 4*Pz*d_4*r_23*r_33 - 2*d_2**2*r_23 - 2*d_2*r_23*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) - 4*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_3**2*r_23 + 4*d_3*d_4*r_22
            - 2*d_3*r_21*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2)) + 2*d_4**2*r_23
            - 2*r_23*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1
            + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_11*r_22
            - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - -8*Px*d_3*r_11*r_23 + 8*Px*d_3*r_13*r_21 + 8*Pz*d_3*r_21*r_33 - 8*Pz*d_3*r_23*r_31
            - 8*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 8*d_3*d_4*r_21 - 4*d_3*r_22*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 4*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32)
          - -2*Px**2*r_11**2*r_23 + 4*Px**2*r_11*r_13*r_21 - 2*Px**2*r_12**2*r_23
            + 4*Px**2*r_12*r_13*r_22 + 2*Px**2*r_13**2*r_23 + 4*Px*Py*r_13*r_21**2
            + 4*Px*Py*r_13*r_22**2 + 4*Px*Py*r_13*r_23**2 + 4*Px*Pz*r_11*r_21*r_33
            - 4*Px*Pz*r_11*r_23*r_31 + 4*Px*Pz*r_12*r_22*r_33 - 4*Px*Pz*r_12*r_23*r_32
            + 4*Px*Pz*r_13*r_21*r_31 + 4*Px*Pz*r_13*r_22*r_32 + 4*Px*Pz*r_13*r_23*r_33
            - 4*Px*d_3*r_12*r_23 + 4*Px*d_3*r_13*r_22 - 4*Px*d_4*r_11*r_21 - 4*Px*d_4*r_12*r_22
            - 4*Px*d_4*r_13*r_23 + 2*Py**2*r_21**2*r_23 + 2*Py**2*r_22**2*r_23 + 2*Py**2*r_23**3
            + 4*Py*Pz*r_21**2*r_33 + 4*Py*Pz*r_22**2*r_33 + 4*Py*Pz*r_23**2*r_33 -
            4*Py*d_4*r_21**2 - 4*Py*d_4*r_22**2 - 4*Py*d_4*r_23**2 + 4*Pz**2*r_21*r_31*r_33
            + 4*Pz**2*r_22*r_32*r_33 - 2*Pz**2*r_23*r_31**2 - 2*Pz**2*r_23*r_32**2
            + 2*Pz**2*r_23*r_33**2 + 4*Pz*d_3*r_22*r_33 - 4*Pz*d_3*r_23*r_32 - 4*Pz*d_4*r_21*r_31
            - 4*Pz*d_4*r_22*r_32 - 4*Pz*d_4*r_23*r_33 - 2*d_2**2*r_23 - 2*d_2*r_23*(2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2)) + 4*d_2*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_3**2*r_23 - 4*d_3*d_4*r_22
            + 2*d_3*r_21*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2)) + 2*d_4**2*r_23
            - 2*r_23*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1
            + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_11*r_22
            - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - Px**2*r_11**2*r_21 + 2*Px**2*r_11*r_12*r_22 + 2*Px**2*r_11*r_13*r_23 -
            Px**2*r_12**2*r_21 - Px**2*r_13**2*r_21 + 2*Px*Py*r_11*r_21**2 + 2*Px*Py*r_11*r_22**2
            + 2*Px*Py*r_11*r_23**2 + 2*Px*Pz*r_11*r_21*r_31 + 2*Px*Pz*r_11*r_22*r_32
            + 2*Px*Pz*r_11*r_23*r_33 - 2*Px*Pz*r_12*r_21*r_32 + 2*Px*Pz*r_12*r_22*r_31
            - 2*Px*Pz*r_13*r_21*r_33 + 2*Px*Pz*r_13*r_23*r_31 + 2*Px*d_2*r_11*r_23
            - 2*Px*d_2*r_13*r_21 - 2*Px*d_3*r_11*r_22 + 2*Px*d_3*r_12*r_21 - 2*Px*d_4*r_11*r_23
            + 2*Px*d_4*r_13*r_21 + Py**2*r_21**3 + Py**2*r_21*r_22**2 + Py**2*r_21*r_23**2
            + 2*Py*Pz*r_21**2*r_31 + 2*Py*Pz*r_22**2*r_31 + 2*Py*Pz*r_23**2*r_31 +
            Pz**2*r_21*r_31**2 - Pz**2*r_21*r_32**2 - Pz**2*r_21*r_33**2 + 2*Pz**2*r_22*r_31*r_32
            + 2*Pz**2*r_23*r_31*r_33 - 2*Pz*d_2*r_21*r_33 + 2*Pz*d_2*r_23*r_31 + 2*Pz*d_3*r_21*r_32
            - 2*Pz*d_3*r_22*r_31 + 2*Pz*d_4*r_21*r_33 - 2*Pz*d_4*r_23*r_31 - d_2**2*r_21
            + 2*d_2*d_4*r_21 - d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) + d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) + 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) -
            d_3**2*r_21 + d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) - 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) - d_4**2*r_21
            - r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) - r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) + (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            - (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - -2*Px**2*r_11**2*r_22 + 4*Px**2*r_11*r_12*r_21 + 2*Px**2*r_12**2*r_22
            + 4*Px**2*r_12*r_13*r_23 - 2*Px**2*r_13**2*r_22 + 4*Px*Py*r_12*r_21**2
            + 4*Px*Py*r_12*r_22**2 + 4*Px*Py*r_12*r_23**2 + 4*Px*Pz*r_11*r_21*r_32
            - 4*Px*Pz*r_11*r_22*r_31 + 4*Px*Pz*r_12*r_21*r_31 + 4*Px*Pz*r_12*r_22*r_32
            + 4*Px*Pz*r_12*r_23*r_33 - 4*Px*Pz*r_13*r_22*r_33 + 4*Px*Pz*r_13*r_23*r_32
            + 4*Px*d_2*r_12*r_23 - 4*Px*d_2*r_13*r_22 - 4*Px*d_4*r_12*r_23 + 4*Px*d_4*r_13*r_22
            + 2*Py**2*r_21**2*r_22 + 2*Py**2*r_22**3 + 2*Py**2*r_22*r_23**2 + 4*Py*Pz*r_21**2*r_32
            + 4*Py*Pz*r_22**2*r_32 + 4*Py*Pz*r_23**2*r_32 + 4*Pz**2*r_21*r_31*r_32
            - 2*Pz**2*r_22*r_31**2 + 2*Pz**2*r_22*r_32**2 - 2*Pz**2*r_22*r_33**2 +
            4*Pz**2*r_23*r_32*r_33 - 4*Pz*d_2*r_22*r_33 + 4*Pz*d_2*r_23*r_32 + 4*Pz*d_4*r_22*r_33
            - 4*Pz*d_4*r_23*r_32 - 2*d_2**2*r_22 + 4*d_2*d_4*r_22 - 2*d_2*r_21*(2*R_l_inv_26*a_0*a_1
            + R_l_inv_66*(a_0**2 + a_1**2)) - 2*d_2*r_22*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - 2*d_3**2*r_22 + 4*d_3*(2*R_l_inv_25*a_0*a_1 + R_l_inv_65*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*d_4**2*r_22 + 2*r_21*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - 2*r_22*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - 2*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) + 2*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - -Px**2*r_11**2*r_21 - 2*Px**2*r_11*r_12*r_22 - 2*Px**2*r_11*r_13*r_23
            + Px**2*r_12**2*r_21 + Px**2*r_13**2*r_21 - 2*Px*Py*r_11*r_21**2 - 2*Px*Py*r_11*r_22**2
            - 2*Px*Py*r_11*r_23**2 - 2*Px*Pz*r_11*r_21*r_31 - 2*Px*Pz*r_11*r_22*r_32
            - 2*Px*Pz*r_11*r_23*r_33 + 2*Px*Pz*r_12*r_21*r_32 - 2*Px*Pz*r_12*r_22*r_31
            + 2*Px*Pz*r_13*r_21*r_33 - 2*Px*Pz*r_13*r_23*r_31 - 2*Px*d_2*r_11*r_23
            + 2*Px*d_2*r_13*r_21 - 2*Px*d_3*r_11*r_22 + 2*Px*d_3*r_12*r_21 + 2*Px*d_4*r_11*r_23
            - 2*Px*d_4*r_13*r_21 - Py**2*r_21**3 - Py**2*r_21*r_22**2 - Py**2*r_21*r_23**2
            - 2*Py*Pz*r_21**2*r_31 - 2*Py*Pz*r_22**2*r_31 - 2*Py*Pz*r_23**2*r_31 -
            Pz**2*r_21*r_31**2 + Pz**2*r_21*r_32**2 + Pz**2*r_21*r_33**2 - 2*Pz**2*r_22*r_31*r_32
            - 2*Pz**2*r_23*r_31*r_33 + 2*Pz*d_2*r_21*r_33 - 2*Pz*d_2*r_23*r_31 + 2*Pz*d_3*r_21*r_32
            - 2*Pz*d_3*r_22*r_31 - 2*Pz*d_4*r_21*r_33 + 2*Pz*d_4*r_23*r_31 + d_2**2*r_21
            - 2*d_2*d_4*r_21 + d_2*r_21*(2*R_l_inv_27*a_0*a_1 + R_l_inv_67*(a_0**2
            + a_1**2)) - d_2*r_22*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            + d_2*(2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2 + a_1**2)) + 2*d_2*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) +
            d_3**2*r_21 + d_3*r_23*(2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))
            - d_3*(2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2 + a_1**2)) + 2*d_3*(2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + d_4**2*r_21
            + r_21*(2*R_l_inv_23*a_0*a_1 + R_l_inv_63*(a_0**2 + a_1**2)) + r_22*(2*R_l_inv_24*a_0*a_1
            + R_l_inv_64*(a_0**2 + a_1**2)) - (2*R_l_inv_20*a_0*a_1 + R_l_inv_60*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - (2*R_l_inv_21*a_0*a_1 + R_l_inv_61*(a_0**2
            + a_1**2))*(Px*r_12 + Py*r_22 + Pz*r_32) + (2*R_l_inv_22*a_0*a_1 + R_l_inv_62*(a_0**2
            + a_1**2))*(Px*r_13 + Py*r_23 + Pz*r_33 - d_4) + (2*R_l_inv_25*a_0*a_1
            + R_l_inv_65*(a_0**2 + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2
            + 2*Px*Py*r_11*r_21 + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31
            + 2*Px*Pz*r_12*r_32 + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2
            + Py**2*r_22**2 + Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32
            + 2*Py*Pz*r_23*r_33 - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 +
            Pz**2*r_33**2 - 2*Pz*d_4*r_33 - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2)
            + (2*R_l_inv_26*a_0*a_1 + R_l_inv_66*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_27*a_0*a_1
            + R_l_inv_67*(a_0**2 + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33
            + Pz*r_23*r_31 + d_4*r_21)
          - -Px**2*r_11**2*r_22 + 2*Px**2*r_11*r_12*r_21 + Px**2*r_12**2*r_22 + 2*Px**2*r_12*r_13*r_23
            - Px**2*r_13**2*r_22 + 2*Px*Py*r_12*r_21**2 + 2*Px*Py*r_12*r_22**2 + 2*Px*Py*r_12*r_23**2
            + 2*Px*Pz*r_11*r_21*r_32 - 2*Px*Pz*r_11*r_22*r_31 + 2*Px*Pz*r_12*r_21*r_31
            + 2*Px*Pz*r_12*r_22*r_32 + 2*Px*Pz*r_12*r_23*r_33 - 2*Px*Pz*r_13*r_22*r_33
            + 2*Px*Pz*r_13*r_23*r_32 - 2*Px*d_2*r_12*r_23 + 2*Px*d_2*r_13*r_22 - 2*Px*d_3*r_11*r_21
            - 2*Px*d_3*r_12*r_22 - 2*Px*d_3*r_13*r_23 - 2*Px*d_4*r_12*r_23 + 2*Px*d_4*r_13*r_22
            + Py**2*r_21**2*r_22 + Py**2*r_22**3 + Py**2*r_22*r_23**2 + 2*Py*Pz*r_21**2*r_32
            + 2*Py*Pz*r_22**2*r_32 + 2*Py*Pz*r_23**2*r_32 - 2*Py*d_3*r_21**2 - 2*Py*d_3*r_22**2
            - 2*Py*d_3*r_23**2 + 2*Pz**2*r_21*r_31*r_32 - Pz**2*r_22*r_31**2 + Pz**2*r_22*r_32**2
            - Pz**2*r_22*r_33**2 + 2*Pz**2*r_23*r_32*r_33 + 2*Pz*d_2*r_22*r_33 - 2*Pz*d_2*r_23*r_32
            - 2*Pz*d_3*r_21*r_31 - 2*Pz*d_3*r_22*r_32 - 2*Pz*d_3*r_23*r_33 + 2*Pz*d_4*r_22*r_33
            - 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 + 2*d_2*d_3*r_23 - 2*d_2*d_4*r_22 -
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) - d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) + 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + d_3**2*r_22 + 2*d_3*d_4*r_23 + d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) + 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - d_4**2*r_22 - r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            + (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) - (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - -2*Px**2*r_11**2*r_21 - 4*Px**2*r_11*r_12*r_22 - 4*Px**2*r_11*r_13*r_23
            + 2*Px**2*r_12**2*r_21 + 2*Px**2*r_13**2*r_21 - 4*Px*Py*r_11*r_21**2 -
            4*Px*Py*r_11*r_22**2 - 4*Px*Py*r_11*r_23**2 - 4*Px*Pz*r_11*r_21*r_31 -
            4*Px*Pz*r_11*r_22*r_32 - 4*Px*Pz*r_11*r_23*r_33 + 4*Px*Pz*r_12*r_21*r_32
            - 4*Px*Pz*r_12*r_22*r_31 + 4*Px*Pz*r_13*r_21*r_33 - 4*Px*Pz*r_13*r_23*r_31
            + 4*Px*d_2*r_11*r_23 - 4*Px*d_2*r_13*r_21 + 4*Px*d_4*r_11*r_23 - 4*Px*d_4*r_13*r_21
            - 2*Py**2*r_21**3 - 2*Py**2*r_21*r_22**2 - 2*Py**2*r_21*r_23**2 - 4*Py*Pz*r_21**2*r_31
            - 4*Py*Pz*r_22**2*r_31 - 4*Py*Pz*r_23**2*r_31 - 2*Pz**2*r_21*r_31**2 +
            2*Pz**2*r_21*r_32**2 + 2*Pz**2*r_21*r_33**2 - 4*Pz**2*r_22*r_31*r_32 -
            4*Pz**2*r_23*r_31*r_33 - 4*Pz*d_2*r_21*r_33 + 4*Pz*d_2*r_23*r_31 - 4*Pz*d_4*r_21*r_33
            + 4*Pz*d_4*r_23*r_31 + 2*d_2**2*r_21 + 4*d_2*d_4*r_21 + 2*d_2*r_21*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - 2*d_2*r_22*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) - 2*d_3**2*r_21 - 4*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_4**2*r_21 - 2*r_21*(2*R_l_inv_34*a_0*a_1
            + R_l_inv_74*(a_0**2 + a_1**2)) - 2*r_22*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 2*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_2*r_12*r_23 - 2*Px*d_2*r_13*r_22 - 2*Px*d_3*r_11*r_21
            - 2*Px*d_3*r_12*r_22 - 2*Px*d_3*r_13*r_23 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22
            - Py**2*r_21**2*r_22 - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32
            - 2*Py*Pz*r_22**2*r_32 - 2*Py*Pz*r_23**2*r_32 - 2*Py*d_3*r_21**2 - 2*Py*d_3*r_22**2
            - 2*Py*d_3*r_23**2 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 - Pz**2*r_22*r_32**2
            + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_2*r_22*r_33 + 2*Pz*d_2*r_23*r_32
            - 2*Pz*d_3*r_21*r_31 - 2*Pz*d_3*r_22*r_32 - 2*Pz*d_3*r_23*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 + d_2**2*r_22 + 2*d_2*d_3*r_23 + 2*d_2*d_4*r_22 +
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) + d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) + 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - d_3**2*r_22 + 2*d_3*d_4*r_23 + d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) - 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + d_4**2*r_22 + r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            - (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) + (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - 4*Px*d_2*r_11*r_22 - 4*Px*d_2*r_12*r_21 - 4*Pz*d_2*r_21*r_32 + 4*Pz*d_2*r_22*r_31
            + 4*d_2*d_3*r_21 + 2*d_2*r_23*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) + 4*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*d_3*r_21*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 2*r_23*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) + 2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 +
            a_1**2))*(Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - 8*d_2*d_3*r_22 + 8*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 4*d_3*r_22*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 4*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32)
          - 4*Px*d_2*r_11*r_22 - 4*Px*d_2*r_12*r_21 - 4*Pz*d_2*r_21*r_32 + 4*Pz*d_2*r_22*r_31
            - 4*d_2*d_3*r_21 + 2*d_2*r_23*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) - 4*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) - 2*d_3*r_21*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2)) + 2*r_23*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2 + a_1**2))
            - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_13 + Py*r_23
            + Pz*r_33 - d_4) - 2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_11
            + Py*r_21 + Pz*r_31) + 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2 +
            a_1**2))*(Px*r_11*r_22 - Px*r_12*r_21 - Pz*r_21*r_32 + Pz*r_22*r_31)
          - -Px**2*r_11**2*r_22 + 2*Px**2*r_11*r_12*r_21 + Px**2*r_12**2*r_22 + 2*Px**2*r_12*r_13*r_23
            - Px**2*r_13**2*r_22 + 2*Px*Py*r_12*r_21**2 + 2*Px*Py*r_12*r_22**2 + 2*Px*Py*r_12*r_23**2
            + 2*Px*Pz*r_11*r_21*r_32 - 2*Px*Pz*r_11*r_22*r_31 + 2*Px*Pz*r_12*r_21*r_31
            + 2*Px*Pz*r_12*r_22*r_32 + 2*Px*Pz*r_12*r_23*r_33 - 2*Px*Pz*r_13*r_22*r_33
            + 2*Px*Pz*r_13*r_23*r_32 + 2*Px*d_2*r_12*r_23 - 2*Px*d_2*r_13*r_22 - 2*Px*d_3*r_11*r_21
            - 2*Px*d_3*r_12*r_22 - 2*Px*d_3*r_13*r_23 - 2*Px*d_4*r_12*r_23 + 2*Px*d_4*r_13*r_22
            + Py**2*r_21**2*r_22 + Py**2*r_22**3 + Py**2*r_22*r_23**2 + 2*Py*Pz*r_21**2*r_32
            + 2*Py*Pz*r_22**2*r_32 + 2*Py*Pz*r_23**2*r_32 - 2*Py*d_3*r_21**2 - 2*Py*d_3*r_22**2
            - 2*Py*d_3*r_23**2 + 2*Pz**2*r_21*r_31*r_32 - Pz**2*r_22*r_31**2 + Pz**2*r_22*r_32**2
            - Pz**2*r_22*r_33**2 + 2*Pz**2*r_23*r_32*r_33 - 2*Pz*d_2*r_22*r_33 + 2*Pz*d_2*r_23*r_32
            - 2*Pz*d_3*r_21*r_31 - 2*Pz*d_3*r_22*r_32 - 2*Pz*d_3*r_23*r_33 + 2*Pz*d_4*r_22*r_33
            - 2*Pz*d_4*r_23*r_32 - d_2**2*r_22 - 2*d_2*d_3*r_23 + 2*d_2*d_4*r_22 +
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) - d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) - 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) + d_3**2*r_22 + 2*d_3*d_4*r_23 - d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) + 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - d_4**2*r_22 + r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) + r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            - (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) - (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) + (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) - (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - -2*Px**2*r_11**2*r_21 - 4*Px**2*r_11*r_12*r_22 - 4*Px**2*r_11*r_13*r_23
            + 2*Px**2*r_12**2*r_21 + 2*Px**2*r_13**2*r_21 - 4*Px*Py*r_11*r_21**2 -
            4*Px*Py*r_11*r_22**2 - 4*Px*Py*r_11*r_23**2 - 4*Px*Pz*r_11*r_21*r_31 -
            4*Px*Pz*r_11*r_22*r_32 - 4*Px*Pz*r_11*r_23*r_33 + 4*Px*Pz*r_12*r_21*r_32
            - 4*Px*Pz*r_12*r_22*r_31 + 4*Px*Pz*r_13*r_21*r_33 - 4*Px*Pz*r_13*r_23*r_31
            - 4*Px*d_2*r_11*r_23 + 4*Px*d_2*r_13*r_21 + 4*Px*d_4*r_11*r_23 - 4*Px*d_4*r_13*r_21
            - 2*Py**2*r_21**3 - 2*Py**2*r_21*r_22**2 - 2*Py**2*r_21*r_23**2 - 4*Py*Pz*r_21**2*r_31
            - 4*Py*Pz*r_22**2*r_31 - 4*Py*Pz*r_23**2*r_31 - 2*Pz**2*r_21*r_31**2 +
            2*Pz**2*r_21*r_32**2 + 2*Pz**2*r_21*r_33**2 - 4*Pz**2*r_22*r_31*r_32 -
            4*Pz**2*r_23*r_31*r_33 + 4*Pz*d_2*r_21*r_33 - 4*Pz*d_2*r_23*r_31 - 4*Pz*d_4*r_21*r_33
            + 4*Pz*d_4*r_23*r_31 + 2*d_2**2*r_21 - 4*d_2*d_4*r_21 + 2*d_2*r_21*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + 2*d_2*r_22*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2)) - 2*d_3**2*r_21 - 4*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) + 2*d_4**2*r_21 - 2*r_21*(2*R_l_inv_34*a_0*a_1
            + R_l_inv_74*(a_0**2 + a_1**2)) + 2*r_22*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - 2*(2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + 2*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 +
            a_1**2))*(Px*r_11 + Py*r_21 + Pz*r_31) - 2*(2*R_l_inv_36*a_0*a_1 + R_l_inv_76*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21) - 2*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2))*(Px*r_12*r_23
            - Px*r_13*r_22 - Pz*r_22*r_33 + Pz*r_23*r_32 + d_4*r_22)
          - Px**2*r_11**2*r_22 - 2*Px**2*r_11*r_12*r_21 - Px**2*r_12**2*r_22 - 2*Px**2*r_12*r_13*r_23
            + Px**2*r_13**2*r_22 - 2*Px*Py*r_12*r_21**2 - 2*Px*Py*r_12*r_22**2 - 2*Px*Py*r_12*r_23**2
            - 2*Px*Pz*r_11*r_21*r_32 + 2*Px*Pz*r_11*r_22*r_31 - 2*Px*Pz*r_12*r_21*r_31
            - 2*Px*Pz*r_12*r_22*r_32 - 2*Px*Pz*r_12*r_23*r_33 + 2*Px*Pz*r_13*r_22*r_33
            - 2*Px*Pz*r_13*r_23*r_32 - 2*Px*d_2*r_12*r_23 + 2*Px*d_2*r_13*r_22 - 2*Px*d_3*r_11*r_21
            - 2*Px*d_3*r_12*r_22 - 2*Px*d_3*r_13*r_23 + 2*Px*d_4*r_12*r_23 - 2*Px*d_4*r_13*r_22
            - Py**2*r_21**2*r_22 - Py**2*r_22**3 - Py**2*r_22*r_23**2 - 2*Py*Pz*r_21**2*r_32
            - 2*Py*Pz*r_22**2*r_32 - 2*Py*Pz*r_23**2*r_32 - 2*Py*d_3*r_21**2 - 2*Py*d_3*r_22**2
            - 2*Py*d_3*r_23**2 - 2*Pz**2*r_21*r_31*r_32 + Pz**2*r_22*r_31**2 - Pz**2*r_22*r_32**2
            + Pz**2*r_22*r_33**2 - 2*Pz**2*r_23*r_32*r_33 + 2*Pz*d_2*r_22*r_33 - 2*Pz*d_2*r_23*r_32
            - 2*Pz*d_3*r_21*r_31 - 2*Pz*d_3*r_22*r_32 - 2*Pz*d_3*r_23*r_33 - 2*Pz*d_4*r_22*r_33
            + 2*Pz*d_4*r_23*r_32 + d_2**2*r_22 - 2*d_2*d_3*r_23 - 2*d_2*d_4*r_22 -
            d_2*r_21*(2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2 + a_1**2)) + d_2*r_22*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) - d_2*(2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2
            + a_1**2)) - 2*d_2*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - d_3**2*r_22 + 2*d_3*d_4*r_23 - d_3*r_23*(2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2)) + d_3*(2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2
            + a_1**2)) - 2*d_3*(2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) + d_4**2*r_22 - r_21*(2*R_l_inv_33*a_0*a_1 + R_l_inv_73*(a_0**2
            + a_1**2)) - r_22*(2*R_l_inv_34*a_0*a_1 + R_l_inv_74*(a_0**2 + a_1**2))
            + (2*R_l_inv_30*a_0*a_1 + R_l_inv_70*(a_0**2 + a_1**2))*(Px*r_11 + Py*r_21
            + Pz*r_31) + (2*R_l_inv_31*a_0*a_1 + R_l_inv_71*(a_0**2 + a_1**2))*(Px*r_12
            + Py*r_22 + Pz*r_32) - (2*R_l_inv_32*a_0*a_1 + R_l_inv_72*(a_0**2 + a_1**2))*(Px*r_13
            + Py*r_23 + Pz*r_33 - d_4) - (2*R_l_inv_35*a_0*a_1 + R_l_inv_75*(a_0**2
            + a_1**2))*(Px**2*r_11**2 + Px**2*r_12**2 + Px**2*r_13**2 + 2*Px*Py*r_11*r_21
            + 2*Px*Py*r_12*r_22 + 2*Px*Py*r_13*r_23 + 2*Px*Pz*r_11*r_31 + 2*Px*Pz*r_12*r_32
            + 2*Px*Pz*r_13*r_33 - 2*Px*d_4*r_13 + Py**2*r_21**2 + Py**2*r_22**2 +
            Py**2*r_23**2 + 2*Py*Pz*r_21*r_31 + 2*Py*Pz*r_22*r_32 + 2*Py*Pz*r_23*r_33
            - 2*Py*d_4*r_23 + Pz**2*r_31**2 + Pz**2*r_32**2 + Pz**2*r_33**2 - 2*Pz*d_4*r_33
            - a_0**2 - a_1**2 + d_2**2 + d_3**2 + d_4**2) - (2*R_l_inv_36*a_0*a_1
            + R_l_inv_76*(a_0**2 + a_1**2))*(Px*r_12*r_23 - Px*r_13*r_22 - Pz*r_22*r_33
            + Pz*r_23*r_32 + d_4*r_22) + (2*R_l_inv_37*a_0*a_1 + R_l_inv_77*(a_0**2
            + a_1**2))*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31
            + d_4*r_21)
          - Px**2*r_11**2*r_23 - 2*Px**2*r_11*r_13*r_21 + Px**2*r_12**2*r_23 - 2*Px**2*r_12*r_13*r_22
            - Px**2*r_13**2*r_23 - 2*Px*Py*r_13*r_21**2 - 2*Px*Py*r_13*r_22**2 - 2*Px*Py*r_13*r_23**2
            - 2*Px*Pz*r_11*r_21*r_33 + 2*Px*Pz*r_11*r_23*r_31 - 2*Px*Pz*r_12*r_22*r_33
            + 2*Px*Pz*r_12*r_23*r_32 - 2*Px*Pz*r_13*r_21*r_31 - 2*Px*Pz*r_13*r_22*r_32
            - 2*Px*Pz*r_13*r_23*r_33 + 2*Px*d_2*r_11*r_21 + 2*Px*d_2*r_12*r_22 + 2*Px*d_2*r_13*r_23
            - 2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 + 2*Px*d_4*r_11*r_21 + 2*Px*d_4*r_12*r_22
            + 2*Px*d_4*r_13*r_23 - Py**2*r_21**2*r_23 - Py**2*r_22**2*r_23 - Py**2*r_23**3
            - 2*Py*Pz*r_21**2*r_33 - 2*Py*Pz*r_22**2*r_33 - 2*Py*Pz*r_23**2*r_33 +
            2*Py*d_2*r_21**2 + 2*Py*d_2*r_22**2 + 2*Py*d_2*r_23**2 + 2*Py*d_4*r_21**2
            + 2*Py*d_4*r_22**2 + 2*Py*d_4*r_23**2 - 2*Pz**2*r_21*r_31*r_33 - 2*Pz**2*r_22*r_32*r_33
            + Pz**2*r_23*r_31**2 + Pz**2*r_23*r_32**2 - Pz**2*r_23*r_33**2 + 2*Pz*d_2*r_21*r_31
            + 2*Pz*d_2*r_22*r_32 + 2*Pz*d_2*r_23*r_33 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            + 2*Pz*d_4*r_21*r_31 + 2*Pz*d_4*r_22*r_32 + 2*Pz*d_4*r_23*r_33 - d_2**2*r_23
            - 2*d_2*d_3*r_22 - 2*d_2*d_4*r_23 + d_3**2*r_23 - 2*d_3*d_4*r_22 - d_4**2*r_23
          - 4*d_3*(Px*r_11*r_23 - Px*r_13*r_21 - Pz*r_21*r_33 + Pz*r_23*r_31 + d_2*r_21
            + d_4*r_21)
          - Px**2*r_11**2*r_23 - 2*Px**2*r_11*r_13*r_21 + Px**2*r_12**2*r_23 - 2*Px**2*r_12*r_13*r_22
            - Px**2*r_13**2*r_23 - 2*Px*Py*r_13*r_21**2 - 2*Px*Py*r_13*r_22**2 - 2*Px*Py*r_13*r_23**2
            - 2*Px*Pz*r_11*r_21*r_33 + 2*Px*Pz*r_11*r_23*r_31 - 2*Px*Pz*r_12*r_22*r_33
            + 2*Px*Pz*r_12*r_23*r_32 - 2*Px*Pz*r_13*r_21*r_31 - 2*Px*Pz*r_13*r_22*r_32
            - 2*Px*Pz*r_13*r_23*r_33 + 2*Px*d_2*r_11*r_21 + 2*Px*d_2*r_12*r_22 + 2*Px*d_2*r_13*r_23
            + 2*Px*d_3*r_12*r_23 - 2*Px*d_3*r_13*r_22 + 2*Px*d_4*r_11*r_21 + 2*Px*d_4*r_12*r_22
            + 2*Px*d_4*r_13*r_23 - Py**2*r_21**2*r_23 - Py**2*r_22**2*r_23 - Py**2*r_23**3
            - 2*Py*Pz*r_21**2*r_33 - 2*Py*Pz*r_22**2*r_33 - 2*Py*Pz*r_23**2*r_33 +
            2*Py*d_2*r_21**2 + 2*Py*d_2*r_22**2 + 2*Py*d_2*r_23**2 + 2*Py*d_4*r_21**2
            + 2*Py*d_4*r_22**2 + 2*Py*d_4*r_23**2 - 2*Pz**2*r_21*r_31*r_33 - 2*Pz**2*r_22*r_32*r_33
            + Pz**2*r_23*r_31**2 + Pz**2*r_23*r_32**2 - Pz**2*r_23*r_33**2 + 2*Pz*d_2*r_21*r_31
            + 2*Pz*d_2*r_22*r_32 + 2*Pz*d_2*r_23*r_33 - 2*Pz*d_3*r_22*r_33 + 2*Pz*d_3*r_23*r_32
            + 2*Pz*d_4*r_21*r_31 + 2*Pz*d_4*r_22*r_32 + 2*Pz*d_4*r_23*r_33 - d_2**2*r_23
            + 2*d_2*d_3*r_22 - 2*d_2*d_4*r_23 + d_3**2*r_23 + 2*d_3*d_4*r_22 - d_4**2*r_23
          - -2*Px**2*r_11**2*r_21 - 4*Px**2*r_11*r_12*r_22 - 4*Px**2*r_11*r_13*r_23
            + 2*Px**2*r_12**2*r_21 + 2*Px**2*r_13**2*r_21 - 4*Px*Py*r_11*r_21**2 -
            4*Px*Py*r_11*r_22**2 - 4*Px*Py*r_11*r_23**2 - 4*Px*Pz*r_11*r_21*r_31 -
            4*Px*Pz*r_11*r_22*r_32 - 4*Px*Pz*r_11*r_23*r_33 + 4*Px*Pz*r_12*r_21*r_32
            - 4*Px*Pz*r_12*r_22*r_31 + 4*Px*Pz*r_13*r_21*r_33 - 4*Px*Pz*r_13*r_23*r_31
            + 4*Px*d_3*r_11*r_22 - 4*Px*d_3*r_12*r_21 + 4*Px*d_4*r_11*r_23 - 4*Px*d_4*r_13*r_21
            - 2*Py**2*r_21**3 - 2*Py**2*r_21*r_22**2 - 2*Py**2*r_21*r_23**2 - 4*Py*Pz*r_21**2*r_31
            - 4*Py*Pz*r_22**2*r_31 - 4*Py*Pz*r_23**2*r_31 - 2*Pz**2*r_21*r_31**2 +
            2*Pz**2*r_21*r_32**2 + 2*Pz**2*r_21*r_33**2 - 4*Pz**2*r_22*r_31*r_32 -
            4*Pz**2*r_23*r_31*r_33 - 4*Pz*d_3*r_21*r_32 + 4*Pz*d_3*r_22*r_31 - 4*Pz*d_4*r_21*r_33
            + 4*Pz*d_4*r_23*r_31 - 2*d_2**2*r_21 + 2*d_3**2*r_21 + 2*d_4**2*r_21
          - 4*Px**2*r_11**2*r_22 - 8*Px**2*r_11*r_12*r_21 - 4*Px**2*r_12**2*r_22 -
            8*Px**2*r_12*r_13*r_23 + 4*Px**2*r_13**2*r_22 - 8*Px*Py*r_12*r_21**2 -
            8*Px*Py*r_12*r_22**2 - 8*Px*Py*r_12*r_23**2 - 8*Px*Pz*r_11*r_21*r_32 +
            8*Px*Pz*r_11*r_22*r_31 - 8*Px*Pz*r_12*r_21*r_31 - 8*Px*Pz*r_12*r_22*r_32
            - 8*Px*Pz*r_12*r_23*r_33 + 8*Px*Pz*r_13*r_22*r_33 - 8*Px*Pz*r_13*r_23*r_32
            + 8*Px*d_4*r_12*r_23 - 8*Px*d_4*r_13*r_22 - 4*Py**2*r_21**2*r_22 - 4*Py**2*r_22**3
            - 4*Py**2*r_22*r_23**2 - 8*Py*Pz*r_21**2*r_32 - 8*Py*Pz*r_22**2*r_32 -
            8*Py*Pz*r_23**2*r_32 - 8*Pz**2*r_21*r_31*r_32 + 4*Pz**2*r_22*r_31**2 -
            4*Pz**2*r_22*r_32**2 + 4*Pz**2*r_22*r_33**2 - 8*Pz**2*r_23*r_32*r_33 -
            8*Pz*d_4*r_22*r_33 + 8*Pz*d_4*r_23*r_32 - 4*d_2**2*r_22 + 4*d_3**2*r_22
            + 4*d_4**2*r_22
          - 2*Px**2*r_11**2*r_21 + 4*Px**2*r_11*r_12*r_22 + 4*Px**2*r_11*r_13*r_23
            - 2*Px**2*r_12**2*r_21 - 2*Px**2*r_13**2*r_21 + 4*Px*Py*r_11*r_21**2 +
            4*Px*Py*r_11*r_22**2 + 4*Px*Py*r_11*r_23**2 + 4*Px*Pz*r_11*r_21*r_31 +
            4*Px*Pz*r_11*r_22*r_32 + 4*Px*Pz*r_11*r_23*r_33 - 4*Px*Pz*r_12*r_21*r_32
            + 4*Px*Pz*r_12*r_22*r_31 - 4*Px*Pz*r_13*r_21*r_33 + 4*Px*Pz*r_13*r_23*r_31
            + 4*Px*d_3*r_11*r_22 - 4*Px*d_3*r_12*r_21 - 4*Px*d_4*r_11*r_23 + 4*Px*d_4*r_13*r_21
            + 2*Py**2*r_21**3 + 2*Py**2*r_21*r_22**2 + 2*Py**2*r_21*r_23**2 + 4*Py*Pz*r_21**2*r_31
            + 4*Py*Pz*r_22**2*r_31 + 4*Py*Pz*r_23**2*r_31 + 2*Pz**2*r_21*r_31**2 -
            2*Pz**2*r_21*r_32**2 - 2*Pz**2*r_21*r_33**2 + 4*Pz**2*r_22*r_31*r_32 +
            4*Pz**2*r_23*r_31*r_33 - 4*Pz*d_3*r_21*r_32 + 4*Pz*d_3*r_22*r_31 + 4*Pz*d_4*r_21*r_33
            - 4*Pz*d_4*r_23*r_31 + 2*d_2**2*r_21 - 2*d_3**2*r_21 - 2*d_4**2*r_21
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 + 2*Px*d_2*r_11*r_21 + 2*Px*d_2*r_12*r_22 + 2*Px*d_2*r_13*r_23
            + 2*Px*d_3*r_12*r_23 - 2*Px*d_3*r_13*r_22 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22
            - 2*Px*d_4*r_13*r_23 + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3
            + 2*Py*Pz*r_21**2*r_33 + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 +
            2*Py*d_2*r_21**2 + 2*Py*d_2*r_22**2 + 2*Py*d_2*r_23**2 - 2*Py*d_4*r_21**2
            - 2*Py*d_4*r_22**2 - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33
            - Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 + 2*Pz*d_2*r_21*r_31
            + 2*Pz*d_2*r_22*r_32 + 2*Pz*d_2*r_23*r_33 - 2*Pz*d_3*r_22*r_33 + 2*Pz*d_3*r_23*r_32
            - 2*Pz*d_4*r_21*r_31 - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 + d_2**2*r_23
            - 2*d_2*d_3*r_22 - 2*d_2*d_4*r_23 - d_3**2*r_23 + 2*d_3*d_4*r_22 + d_4**2*r_23
          - 4*d_3*(-Px*r_11*r_23 + Px*r_13*r_21 + Pz*r_21*r_33 - Pz*r_23*r_31 + d_2*r_21
            - d_4*r_21)
          - -Px**2*r_11**2*r_23 + 2*Px**2*r_11*r_13*r_21 - Px**2*r_12**2*r_23 + 2*Px**2*r_12*r_13*r_22
            + Px**2*r_13**2*r_23 + 2*Px*Py*r_13*r_21**2 + 2*Px*Py*r_13*r_22**2 + 2*Px*Py*r_13*r_23**2
            + 2*Px*Pz*r_11*r_21*r_33 - 2*Px*Pz*r_11*r_23*r_31 + 2*Px*Pz*r_12*r_22*r_33
            - 2*Px*Pz*r_12*r_23*r_32 + 2*Px*Pz*r_13*r_21*r_31 + 2*Px*Pz*r_13*r_22*r_32
            + 2*Px*Pz*r_13*r_23*r_33 + 2*Px*d_2*r_11*r_21 + 2*Px*d_2*r_12*r_22 + 2*Px*d_2*r_13*r_23
            - 2*Px*d_3*r_12*r_23 + 2*Px*d_3*r_13*r_22 - 2*Px*d_4*r_11*r_21 - 2*Px*d_4*r_12*r_22
            - 2*Px*d_4*r_13*r_23 + Py**2*r_21**2*r_23 + Py**2*r_22**2*r_23 + Py**2*r_23**3
            + 2*Py*Pz*r_21**2*r_33 + 2*Py*Pz*r_22**2*r_33 + 2*Py*Pz*r_23**2*r_33 +
            2*Py*d_2*r_21**2 + 2*Py*d_2*r_22**2 + 2*Py*d_2*r_23**2 - 2*Py*d_4*r_21**2
            - 2*Py*d_4*r_22**2 - 2*Py*d_4*r_23**2 + 2*Pz**2*r_21*r_31*r_33 + 2*Pz**2*r_22*r_32*r_33
            - Pz**2*r_23*r_31**2 - Pz**2*r_23*r_32**2 + Pz**2*r_23*r_33**2 + 2*Pz*d_2*r_21*r_31
            + 2*Pz*d_2*r_22*r_32 + 2*Pz*d_2*r_23*r_33 + 2*Pz*d_3*r_22*r_33 - 2*Pz*d_3*r_23*r_32
            - 2*Pz*d_4*r_21*r_31 - 2*Pz*d_4*r_22*r_32 - 2*Pz*d_4*r_23*r_33 + d_2**2*r_23
            + 2*d_2*d_3*r_22 - 2*d_2*d_4*r_23 - d_3**2*r_23 - 2*d_3*d_4*r_22 + d_4**2*r_23
          rows: 6
        R_l:
          cols: 8
          flatten_data:
          - '0'
          - '0'
          - '0'
          - -a_0
          - '0'
          - '0'
          - '0'
          - -a_1
          - '0'
          - '0'
          - -a_0
          - '0'
          - '0'
          - '0'
          - -a_1
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - a_0
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '-1'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '1'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - 2*a_0*a_1
          - '0'
          - '0'
          - '0'
          - -a_0
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - -a_0
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          - '0'
          rows: 8
        R_l_inv_as_symbols:
          cols: 8
          flatten_data:
          - R_l_inv_00
          - R_l_inv_01
          - R_l_inv_02
          - R_l_inv_03
          - R_l_inv_04
          - R_l_inv_05
          - R_l_inv_06
          - R_l_inv_07
          - R_l_inv_10
          - R_l_inv_11
          - R_l_inv_12
          - R_l_inv_13
          - R_l_inv_14
          - R_l_inv_15
          - R_l_inv_16
          - R_l_inv_17
          - R_l_inv_20
          - R_l_inv_21
          - R_l_inv_22
          - R_l_inv_23
          - R_l_inv_24
          - R_l_inv_25
          - R_l_inv_26
          - R_l_inv_27
          - R_l_inv_30
          - R_l_inv_31
          - R_l_inv_32
          - R_l_inv_33
          - R_l_inv_34
          - R_l_inv_35
          - R_l_inv_36
          - R_l_inv_37
          - R_l_inv_40
          - R_l_inv_41
          - R_l_inv_42
          - R_l_inv_43
          - R_l_inv_44
          - R_l_inv_45
          - R_l_inv_46
          - R_l_inv_47
          - R_l_inv_50
          - R_l_inv_51
          - R_l_inv_52
          - R_l_inv_53
          - R_l_inv_54
          - R_l_inv_55
          - R_l_inv_56
          - R_l_inv_57
          - R_l_inv_60
          - R_l_inv_61
          - R_l_inv_62
          - R_l_inv_63
          - R_l_inv_64
          - R_l_inv_65
          - R_l_inv_66
          - R_l_inv_67
          - R_l_inv_70
          - R_l_inv_71
          - R_l_inv_72
          - R_l_inv_73
          - R_l_inv_74
          - R_l_inv_75
          - R_l_inv_76
          - R_l_inv_77
          rows: 8
    type: General6DoFNumericalReduce
- children_index_list:
  - 3
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 2
  node_type: DispatcherNode
  parent_idx: 1
- children_index_list:
  - 4
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 3
  node_type: SolutionNode
  parent_idx: 2
  solution:
    explicit_solution:
      argument_checkers:
      - Abs((-Px*sin(th_0) + Py*cos(th_0) + d_4*(r_13*sin(th_0) - r_23*cos(th_0)))/d_3)
        <= 1
      - Abs((-Px*sin(th_0) + Py*cos(th_0) + d_4*(r_13*sin(th_0) - r_23*cos(th_0)))/d_3)
        <= 1
      explicit_solutions:
      - acos((Px*sin(th_0) - Py*cos(th_0) - d_4*(r_13*sin(th_0) - r_23*cos(th_0)))/d_3)
      - -acos((Px*sin(th_0) - Py*cos(th_0) - d_4*(r_13*sin(th_0) - r_23*cos(th_0)))/d_3)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: ArcCos
        solve_from_equations:
        - lhs: '0'
          rhs: -Px*sin(th_0) + Py*cos(th_0) + d_3*cos(th_3) + d_4*(r_13*sin(th_0)
            - r_23*cos(th_0))
          type: Default
        solved_variable: th_3
    type: explicit
- children_index_list:
  - 5
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 4
  node_type: DispatcherNode
  parent_idx: 3
- children_index_list:
  - 6
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 5
  node_type: SolutionNode
  parent_idx: 4
  solution:
    explicit_solution:
      argument_checkers:
      - (2*Abs(a_0*d_2) >= zero_tolerance) | (Abs(2*a_0*a_1 - 2*a_0*d_3*sin(th_3))
        >= zero_tolerance) | (Abs(-a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3) - d_2**2
        - d_3**2 + d_4**2 + 2*d_4*inv_Pz + inv_Px**2 + inv_Py**2 + inv_Pz**2) >= zero_tolerance)
      - (2*Abs(a_0*d_2) >= zero_tolerance) | (Abs(2*a_0*a_1 - 2*a_0*d_3*sin(th_3))
        >= zero_tolerance) | (Abs(-a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3) - d_2**2
        - d_3**2 + d_4**2 + 2*d_4*inv_Pz + inv_Px**2 + inv_Py**2 + inv_Pz**2) >= zero_tolerance)
      explicit_solutions:
      - atan2(-2*a_0*d_2, 2*a_0*a_1 - 2*a_0*d_3*sin(th_3)) + atan2(sqrt(4*a_0**2*d_2**2
        + (2*a_0*a_1 - 2*a_0*d_3*sin(th_3))**2 - (-a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3)
        - d_2**2 - d_3**2 + d_4**2 + 2*d_4*inv_Pz + inv_Px**2 + inv_Py**2 + inv_Pz**2)**2),
        -a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3) - d_2**2 - d_3**2 + d_4**2 + 2*d_4*inv_Pz
        + inv_Px**2 + inv_Py**2 + inv_Pz**2)
      - atan2(-2*a_0*d_2, 2*a_0*a_1 - 2*a_0*d_3*sin(th_3)) + atan2(-sqrt(4*a_0**2*d_2**2
        + (2*a_0*a_1 - 2*a_0*d_3*sin(th_3))**2 - (-a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3)
        - d_2**2 - d_3**2 + d_4**2 + 2*d_4*inv_Pz + inv_Px**2 + inv_Py**2 + inv_Pz**2)**2),
        -a_0**2 - a_1**2 + 2*a_1*d_3*sin(th_3) - d_2**2 - d_3**2 + d_4**2 + 2*d_4*inv_Pz
        + inv_Px**2 + inv_Py**2 + inv_Pz**2)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: -a_0**2 - 2*a_0*d_2*sin(th_2) - a_1**2 + 2*a_1*d_3*sin(th_3) - d_2**2
            - d_3**2 + d_4**2 + 2*d_4*inv_Pz + inv_Px**2 + inv_Py**2 + inv_Pz**2 +
            (2*a_0*a_1 - 2*a_0*d_3*sin(th_3))*cos(th_2)
          type: Default
        solved_variable: th_2
    type: explicit
- branch_conditions:
  - Abs(th_3) <= 1.0e-6
  - Abs(th_3 - pi) <= 1.0e-6
  branch_variable_values:
  - th_3: '0'
  - th_3: pi
  children_index_list:
  - 7
  - 14
  - 19
  class_type: SolvedVariableDispatcherNode
  degenerate_record:
    equations: []
    numerical_result: NotAnalyzedYet
    type: DegenerateOnVariableValue
    variable_value_map:
      th_3:
      - '0'
      - pi
  flatten_idx_in_tree: 6
  node_type: DispatcherNode
  parent_idx: 5
- children_index_list:
  - 8
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 7
  node_type: SolutionNode
  parent_idx: 6
  solution:
    explicit_solution:
      argument_checkers:
      - Abs((r_13*sin(th_0) - r_23*cos(th_0))/sin(th_3)) <= 1
      - Abs((r_13*sin(th_0) - r_23*cos(th_0))/sin(th_3)) <= 1
      explicit_solutions:
      - asin((-r_13*sin(th_0) + r_23*cos(th_0))/sin(th_3))
      - pi - asin((-r_13*sin(th_0) + r_23*cos(th_0))/sin(th_3))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: DegenerateOnVariableValue
          variable_value_map:
            th_3:
            - '0'
            - pi
        solution_method: ArcSin
        solve_from_equations:
        - lhs: '0'
          rhs: r_13*sin(th_0) - r_23*cos(th_0) + sin(th_3)*sin(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 9
  - -1
  class_type: EquationAllZeroDispatcherNode
  degenerate_checker: (Abs(Pz) <= 1.0e-6) & (Abs(Px*cos(th_0) + Py*sin(th_0)) <= 1.0e-6)
  degenerate_record:
    equations:
    - Pz
    - -Px*cos(th_0) - Py*sin(th_0)
    numerical_result: NumericalAlwaysNonDegenerate
    type: DegenerateIfAllEquationsZero
    variable_value_map: {}
  flatten_idx_in_tree: 8
  node_type: DispatcherNode
  parent_idx: 7
- children_index_list:
  - 10
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 9
  node_type: SolutionNode
  parent_idx: 8
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(Pz) >= 1.0e-6) | (Abs(Px*cos(th_0) + Py*sin(th_0)) >= 1.0e-6)
      explicit_solutions:
      - atan2(Pz*(-a_0*cos(th_2) - a_1 + d_3*sin(th_3) + d_4*sin(th_4)*cos(th_3))
        - (-Px*cos(th_0) - Py*sin(th_0))*(a_0*sin(th_2) - d_2 + d_4*cos(th_4)), Pz*(a_0*sin(th_2)
        - d_2 + d_4*cos(th_4)) + (-Px*cos(th_0) - Py*sin(th_0))*(-a_0*cos(th_2) -
        a_1 + d_3*sin(th_3) + d_4*sin(th_4)*cos(th_3)))
      meta:
        degenerate_record:
          equations:
          - Pz
          - -Px*cos(th_0) - Py*sin(th_0)
          numerical_result: NumericalAlwaysNonDegenerate
          type: DegenerateIfAllEquationsZero
          variable_value_map: {}
        solution_method: LinearSinCosType_1
        solve_from_equations:
        - lhs: '0'
          rhs: Pz*sin(th_1th_2_soa) + a_0*cos(th_2) + a_1 - d_3*sin(th_3) - d_4*sin(th_4)*cos(th_3)
            + (-Px*cos(th_0) - Py*sin(th_0))*cos(th_1th_2_soa)
          type: Default
        - lhs: '0'
          rhs: Pz*cos(th_1th_2_soa) - a_0*sin(th_2) + d_2 - d_4*cos(th_4) + (Px*cos(th_0)
            + Py*sin(th_0))*sin(th_1th_2_soa)
          type: Default
        solved_variable: th_1th_2_soa
    type: explicit
- children_index_list:
  - 11
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 10
  node_type: DispatcherNode
  parent_idx: 9
- children_index_list:
  - 12
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 11
  node_type: SolutionNode
  parent_idx: 10
  solution:
    explicit_solution:
      argument_checkers:
      - 1 >= zero_tolerance
      explicit_solutions:
      - th_1th_2_soa - th_2
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: OneVariableAlgebra
        solve_from_equations:
        - lhs: '0'
          rhs: -th_1 + th_1th_2_soa - th_2
          type: SumOfAngle
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 13
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 12
  node_type: DispatcherNode
  parent_idx: 11
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 13
  node_type: SolutionNode
  parent_idx: 12
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(r_11*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa))
        - r_21*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa) + cos(th_0)*cos(th_3)) + r_31*sin(th_1th_2_soa)*sin(th_3))
        >= zero_tolerance) | (Abs(r_12*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa))
        - r_22*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa) + cos(th_0)*cos(th_3)) + r_32*sin(th_1th_2_soa)*sin(th_3))
        >= zero_tolerance)
      explicit_solutions:
      - atan2(-r_11*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa))
        + r_21*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa) + cos(th_0)*cos(th_3)) - r_31*sin(th_1th_2_soa)*sin(th_3),
        -r_12*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa)) + r_22*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa)
        + cos(th_0)*cos(th_3)) - r_32*sin(th_1th_2_soa)*sin(th_3))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: -r_11*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa))
            + r_21*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa) + cos(th_0)*cos(th_3)) -
            r_31*sin(th_1th_2_soa)*sin(th_3) - sin(th_5)
          type: Default
        - lhs: '0'
          rhs: -r_12*(sin(th_0)*cos(th_3) - sin(th_3)*cos(th_0)*cos(th_1th_2_soa))
            + r_22*(sin(th_0)*sin(th_3)*cos(th_1th_2_soa) + cos(th_0)*cos(th_3)) -
            r_32*sin(th_1th_2_soa)*sin(th_3) - cos(th_5)
          type: Default
        solved_variable: th_5
    type: explicit
- children_index_list:
  - 15
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 14
  node_type: SolutionNode
  parent_idx: 6
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(r_11*sin(th_0) - r_21*cos(th_0)) >= zero_tolerance)
        | (Abs(r_12*sin(th_0) - r_22*cos(th_0)) >= zero_tolerance)
      explicit_solutions:
      - atan2(-r_11*sin(th_0) + r_21*cos(th_0), -r_12*sin(th_0) + r_22*cos(th_0))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: r_11*sin(th_0) - r_21*cos(th_0) + sin(th_5)
          type: Default
        - lhs: '0'
          rhs: r_12*sin(th_0) - r_22*cos(th_0) + cos(th_5)
          type: Default
        solved_variable: th_5
    type: explicit
- branch_conditions:
  - Abs(th_2 - pi + 1.44644133224814) <= 1.0e-6
  - Abs(th_2 - 2*pi + 1.44644133224814) <= 1.0e-6
  branch_variable_values:
  - th_2: -1.44644133224814 + pi
  - th_2: -1.44644133224814 + 2*pi
  children_index_list:
  - 16
  - 26
  - 29
  class_type: SolvedVariableDispatcherNode
  degenerate_record:
    equations: []
    numerical_result: NotAnalyzedYet
    type: DegenerateOnVariableValue
    variable_value_map:
      th_2:
      - -1.44644133224814 + pi
      - -1.44644133224814 + 2*pi
  flatten_idx_in_tree: 15
  node_type: DispatcherNode
  parent_idx: 14
- children_index_list:
  - 17
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 16
  node_type: SolutionNode
  parent_idx: 15
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(a_1*sin(th_2) + d_2*cos(th_2)) >= 1.0e-6) | (Abs(a_0 + a_1*cos(th_2)
        - d_2*sin(th_2)) >= 1.0e-6)
      explicit_solutions:
      - atan2(-(Pz - d_4*r_33)*(a_0 + a_1*cos(th_2) - d_2*sin(th_2)) + (-a_1*sin(th_2)
        - d_2*cos(th_2))*(Px*cos(th_0) + Py*sin(th_0) - d_4*r_13*cos(th_0) - d_4*r_23*sin(th_0)),
        (Pz - d_4*r_33)*(-a_1*sin(th_2) - d_2*cos(th_2)) + (a_0 + a_1*cos(th_2) -
        d_2*sin(th_2))*(Px*cos(th_0) + Py*sin(th_0) - d_4*r_13*cos(th_0) - d_4*r_23*sin(th_0)))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: DegenerateOnVariableValue
          variable_value_map:
            th_2:
            - -1.44644133224814 + pi
            - -1.44644133224814 + 2*pi
        solution_method: LinearSinCosType_1
        solve_from_equations:
        - lhs: '0'
          rhs: -Px*cos(th_0) - Py*sin(th_0) + d_4*r_13*cos(th_0) + d_4*r_23*sin(th_0)
            + (-a_1*sin(th_2) - d_2*cos(th_2))*sin(th_1) + (a_0 + a_1*cos(th_2) -
            d_2*sin(th_2))*cos(th_1)
          type: Default
        - lhs: '0'
          rhs: -Pz + d_4*r_33 + (-a_1*sin(th_2) - d_2*cos(th_2))*cos(th_1) + (-a_0
            - a_1*cos(th_2) + d_2*sin(th_2))*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 18
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 17
  node_type: DispatcherNode
  parent_idx: 16
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 18
  node_type: SolutionNode
  parent_idx: 17
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(r_13*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))*cos(th_0)
        + r_23*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))*sin(th_0) + r_33*(-sin(th_1)*sin(th_2)
        + cos(th_1)*cos(th_2))) >= zero_tolerance) | (Abs(-r_13*(-sin(th_1)*sin(th_2)
        + cos(th_1)*cos(th_2))*cos(th_0) - r_23*(-sin(th_1)*sin(th_2) + cos(th_1)*cos(th_2))*sin(th_0)
        + r_33*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))) >= zero_tolerance)
      explicit_solutions:
      - atan2(-r_13*(-sin(th_1)*sin(th_2) + cos(th_1)*cos(th_2))*cos(th_0) - r_23*(-sin(th_1)*sin(th_2)
        + cos(th_1)*cos(th_2))*sin(th_0) + r_33*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1)),
        r_13*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))*cos(th_0) + r_23*(sin(th_1)*cos(th_2)
        + sin(th_2)*cos(th_1))*sin(th_0) + r_33*(-sin(th_1)*sin(th_2) + cos(th_1)*cos(th_2)))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: -r_13*(-sin(th_1)*sin(th_2) + cos(th_1)*cos(th_2))*cos(th_0) - r_23*(-sin(th_1)*sin(th_2)
            + cos(th_1)*cos(th_2))*sin(th_0) + r_33*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))
            - sin(th_4)
          type: Default
        - lhs: '0'
          rhs: r_13*(sin(th_1)*cos(th_2) + sin(th_2)*cos(th_1))*cos(th_0) + r_23*(sin(th_1)*cos(th_2)
            + sin(th_2)*cos(th_1))*sin(th_0) + r_33*(-sin(th_1)*sin(th_2) + cos(th_1)*cos(th_2))
            - cos(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 20
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 19
  node_type: SolutionNode
  parent_idx: 6
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(r_33) >= zero_tolerance) | (Abs(r_13*cos(th_0)
        + r_23*sin(th_0)) >= zero_tolerance)
      explicit_solutions:
      - atan2(r_13*cos(th_0) + r_23*sin(th_0), r_33)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: -r_13*cos(th_0) - r_23*sin(th_0) + sin(th_1th_2th_4_soa)
          type: Default
        - lhs: '0'
          rhs: -r_33 + cos(th_1th_2th_4_soa)
          type: Default
        solved_variable: th_1th_2th_4_soa
    type: explicit
- children_index_list:
  - 21
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 20
  node_type: DispatcherNode
  parent_idx: 19
- children_index_list:
  - 22
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 21
  node_type: SolutionNode
  parent_idx: 20
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(r_11*sin(th_0) - r_21*cos(th_0)) >= zero_tolerance)
        | (Abs(r_12*sin(th_0) - r_22*cos(th_0)) >= zero_tolerance)
      explicit_solutions:
      - atan2(r_11*sin(th_0) - r_21*cos(th_0), r_12*sin(th_0) - r_22*cos(th_0))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: r_11*sin(th_0) - r_21*cos(th_0) - sin(th_5)
          type: Default
        - lhs: '0'
          rhs: r_12*sin(th_0) - r_22*cos(th_0) - cos(th_5)
          type: Default
        solved_variable: th_5
    type: explicit
- branch_conditions:
  - Abs(th_2 - pi + 1.44644133224814) <= 1.0e-6
  - Abs(th_2 - 2*pi + 1.44644133224814) <= 1.0e-6
  branch_variable_values:
  - th_2: -1.44644133224814 + pi
  - th_2: -1.44644133224814 + 2*pi
  children_index_list:
  - 23
  - 32
  - 35
  class_type: SolvedVariableDispatcherNode
  degenerate_record:
    equations: []
    numerical_result: NotAnalyzedYet
    type: DegenerateOnVariableValue
    variable_value_map:
      th_2:
      - -1.44644133224814 + pi
      - -1.44644133224814 + 2*pi
  flatten_idx_in_tree: 22
  node_type: DispatcherNode
  parent_idx: 21
- children_index_list:
  - 24
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 23
  node_type: SolutionNode
  parent_idx: 22
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(a_1*sin(th_2) + d_2*cos(th_2)) >= 1.0e-6) | (Abs(a_0 + a_1*cos(th_2)
        - d_2*sin(th_2)) >= 1.0e-6)
      explicit_solutions:
      - atan2(-(Pz - d_4*r_33)*(a_0 + a_1*cos(th_2) - d_2*sin(th_2)) + (-a_1*sin(th_2)
        - d_2*cos(th_2))*(Px*cos(th_0) + Py*sin(th_0) - d_4*sin(th_1th_2th_4_soa)),
        (Pz - d_4*r_33)*(-a_1*sin(th_2) - d_2*cos(th_2)) + (a_0 + a_1*cos(th_2) -
        d_2*sin(th_2))*(Px*cos(th_0) + Py*sin(th_0) - d_4*sin(th_1th_2th_4_soa)))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: DegenerateOnVariableValue
          variable_value_map:
            th_2:
            - -1.44644133224814 + pi
            - -1.44644133224814 + 2*pi
        solution_method: LinearSinCosType_1
        solve_from_equations:
        - lhs: '0'
          rhs: -Px*cos(th_0) - Py*sin(th_0) + d_4*sin(th_1th_2th_4_soa) + (-a_1*sin(th_2)
            - d_2*cos(th_2))*sin(th_1) + (a_0 + a_1*cos(th_2) - d_2*sin(th_2))*cos(th_1)
          type: Default
        - lhs: '0'
          rhs: -Pz + d_4*r_33 + (-a_1*sin(th_2) - d_2*cos(th_2))*cos(th_1) + (-a_0
            - a_1*cos(th_2) + d_2*sin(th_2))*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 25
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 24
  node_type: DispatcherNode
  parent_idx: 23
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 25
  node_type: SolutionNode
  parent_idx: 24
  solution:
    explicit_solution:
      argument_checkers:
      - 1 >= zero_tolerance
      explicit_solutions:
      - -th_1 + th_1th_2th_4_soa - th_2
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: OneVariableAlgebra
        solve_from_equations:
        - lhs: '0'
          rhs: -th_1 + th_1th_2th_4_soa - th_2 - th_4
          type: SumOfAngle
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 27
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 26
  node_type: SolutionNode
  parent_idx: 15
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(-a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(-a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      explicit_solutions:
      - atan2(-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (Pz + d_3*r_31*sin(th_5)
        + d_3*r_32*cos(th_5) - d_4*r_33)**2), Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5)
        - d_4*r_33)
      - atan2(-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(-sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (Pz + d_3*r_31*sin(th_5)
        + d_3*r_32*cos(th_5) - d_4*r_33)**2), Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5)
        - d_4*r_33)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33 + (-0.992277876713668*a_1
            + 0.124034734589209*d_2)*cos(th_1) + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 28
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 27
  node_type: DispatcherNode
  parent_idx: 26
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 28
  node_type: SolutionNode
  parent_idx: 27
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(-r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
        - r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
        + r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1))) >= zero_tolerance)
        | (Abs(-r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
        + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
        - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3))
        >= zero_tolerance)
      explicit_solutions:
      - atan2(-r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
        + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
        - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3),
        r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
        + r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
        - r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1)))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: -r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
            + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
            - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3)
            - sin(th_4)
          type: Default
        - lhs: '0'
          rhs: -r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
            - r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
            + r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1)) + cos(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 30
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 29
  node_type: SolutionNode
  parent_idx: 15
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(d_4 + inv_Pz) >= zero_tolerance) | (Abs(0.992277876713668*a_0 + d_2)
        >= zero_tolerance) | (Abs(inv_Px*cos(th_5) - inv_Py*sin(th_5)) >= zero_tolerance)
      - (Abs(d_4 + inv_Pz) >= zero_tolerance) | (Abs(0.992277876713668*a_0 + d_2)
        >= zero_tolerance) | (Abs(inv_Px*cos(th_5) - inv_Py*sin(th_5)) >= zero_tolerance)
      explicit_solutions:
      - atan2(inv_Px*cos(th_5) - inv_Py*sin(th_5), d_4 + inv_Pz) + atan2(sqrt(-(0.992277876713668*a_0
        + d_2)**2 + (d_4 + inv_Pz)**2 + (inv_Px*cos(th_5) - inv_Py*sin(th_5))**2),
        0.992277876713668*a_0 + d_2)
      - atan2(inv_Px*cos(th_5) - inv_Py*sin(th_5), d_4 + inv_Pz) + atan2(-sqrt(-(0.992277876713668*a_0
        + d_2)**2 + (d_4 + inv_Pz)**2 + (inv_Px*cos(th_5) - inv_Py*sin(th_5))**2),
        0.992277876713668*a_0 + d_2)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: 0.992277876713668*a_0 + d_2 + (d_4 + inv_Pz)*cos(th_4) + (inv_Px*cos(th_5)
            - inv_Py*sin(th_5))*sin(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 31
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 30
  node_type: DispatcherNode
  parent_idx: 29
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 31
  node_type: SolutionNode
  parent_idx: 30
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      explicit_solutions:
      - atan2(a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (-Pz - d_3*r_31*sin(th_5)
        - d_3*r_32*cos(th_5) + d_4*r_33)**2), -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5)
        + d_4*r_33)
      - atan2(a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(-sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (-Pz - d_3*r_31*sin(th_5)
        - d_3*r_32*cos(th_5) + d_4*r_33)**2), -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5)
        + d_4*r_33)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5) + d_4*r_33 + (-0.992277876713668*a_1
            + 0.124034734589209*d_2)*cos(th_1) + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 33
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 32
  node_type: SolutionNode
  parent_idx: 22
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(-a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(-a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      explicit_solutions:
      - atan2(-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (Pz + d_3*r_31*sin(th_5)
        + d_3*r_32*cos(th_5) - d_4*r_33)**2), Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5)
        - d_4*r_33)
      - atan2(-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(-sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (Pz + d_3*r_31*sin(th_5)
        + d_3*r_32*cos(th_5) - d_4*r_33)**2), Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5)
        - d_4*r_33)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: Pz + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33 + (-0.992277876713668*a_1
            + 0.124034734589209*d_2)*cos(th_1) + (-a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
- children_index_list:
  - 34
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 33
  node_type: DispatcherNode
  parent_idx: 32
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 34
  node_type: SolutionNode
  parent_idx: 33
  solution:
    explicit_solution:
      argument_checkers:
      - (1 >= zero_tolerance) | (Abs(-r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
        - r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
        + r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1))) >= zero_tolerance)
        | (Abs(-r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
        + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
        - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3))
        >= zero_tolerance)
      explicit_solutions:
      - atan2(-r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
        + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
        - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3),
        r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
        + r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
        - r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1)))
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: Tangent
        solve_from_equations:
        - lhs: '0'
          rhs: -r_13*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*cos(th_0)*cos(th_3)
            + sin(th_0)*sin(th_3)) - r_23*(-(0.992277876713668*sin(th_1) + 0.124034734589208*cos(th_1))*sin(th_0)*cos(th_3)
            - sin(th_3)*cos(th_0)) - r_33*(0.124034734589208*sin(th_1) - 0.992277876713668*cos(th_1))*cos(th_3)
            - sin(th_4)
          type: Default
        - lhs: '0'
          rhs: -r_13*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*cos(th_0)
            - r_23*(-0.124034734589209*sin(th_1) + 0.992277876713668*cos(th_1))*sin(th_0)
            + r_33*(0.992277876713668*sin(th_1) + 0.124034734589209*cos(th_1)) + cos(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 36
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 35
  node_type: SolutionNode
  parent_idx: 22
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(d_4 + inv_Pz) >= zero_tolerance) | (Abs(0.992277876713668*a_0 + d_2)
        >= zero_tolerance) | (Abs(inv_Px*cos(th_5) - inv_Py*sin(th_5)) >= zero_tolerance)
      - (Abs(d_4 + inv_Pz) >= zero_tolerance) | (Abs(0.992277876713668*a_0 + d_2)
        >= zero_tolerance) | (Abs(inv_Px*cos(th_5) - inv_Py*sin(th_5)) >= zero_tolerance)
      explicit_solutions:
      - atan2(inv_Px*cos(th_5) - inv_Py*sin(th_5), d_4 + inv_Pz) + atan2(sqrt(-(0.992277876713668*a_0
        + d_2)**2 + (d_4 + inv_Pz)**2 + (inv_Px*cos(th_5) - inv_Py*sin(th_5))**2),
        0.992277876713668*a_0 + d_2)
      - atan2(inv_Px*cos(th_5) - inv_Py*sin(th_5), d_4 + inv_Pz) + atan2(-sqrt(-(0.992277876713668*a_0
        + d_2)**2 + (d_4 + inv_Pz)**2 + (inv_Px*cos(th_5) - inv_Py*sin(th_5))**2),
        0.992277876713668*a_0 + d_2)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: 0.992277876713668*a_0 + d_2 + (d_4 + inv_Pz)*cos(th_4) + (inv_Px*cos(th_5)
            - inv_Py*sin(th_5))*sin(th_4)
          type: Default
        solved_variable: th_4
    type: explicit
- children_index_list:
  - 37
  class_type: NoBranchDispatcherNode
  flatten_idx_in_tree: 36
  node_type: DispatcherNode
  parent_idx: 35
- children_index_list:
  - -1
  class_type: ExplicitSolutionNode
  flatten_idx_in_tree: 37
  node_type: SolutionNode
  parent_idx: 36
  solution:
    explicit_solution:
      argument_checkers:
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      - (Abs(0.992277876713668*a_1 - 0.124034734589209*d_2) >= zero_tolerance) | (Abs(a_0
        + 0.124034734589209*a_1 + 0.992277876713668*d_2) >= zero_tolerance) | (Abs(Pz
        + d_3*r_31*sin(th_5) + d_3*r_32*cos(th_5) - d_4*r_33) >= zero_tolerance)
      explicit_solutions:
      - atan2(a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (-Pz - d_3*r_31*sin(th_5)
        - d_3*r_32*cos(th_5) + d_4*r_33)**2), -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5)
        + d_4*r_33)
      - atan2(a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2, -0.992277876713668*a_1
        + 0.124034734589209*d_2) + atan2(-sqrt(0.984615384615385*(-a_1 + 0.125*d_2)**2
        + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)**2 - (-Pz - d_3*r_31*sin(th_5)
        - d_3*r_32*cos(th_5) + d_4*r_33)**2), -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5)
        + d_4*r_33)
      meta:
        degenerate_record:
          equations: []
          numerical_result: NotAnalyzedYet
          type: AlwaysNonDegenerate
          variable_value_map: {}
        solution_method: SinAndCos
        solve_from_equations:
        - lhs: '0'
          rhs: -Pz - d_3*r_31*sin(th_5) - d_3*r_32*cos(th_5) + d_4*r_33 + (-0.992277876713668*a_1
            + 0.124034734589209*d_2)*cos(th_1) + (a_0 + 0.124034734589209*a_1 + 0.992277876713668*d_2)*sin(th_1)
          type: Default
        solved_variable: th_1
    type: explicit
